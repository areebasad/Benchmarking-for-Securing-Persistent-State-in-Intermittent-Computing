
AES-256_WolfSSL_library.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004824  00000000  00000000  00010000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .relocate     00000084  20000000  00004824  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  2 .lpram        00000000  30000000  30000000  00020084  2**0
                  CONTENTS
  3 .bss          00000050  20000084  000048a8  00020084  2**2
                  ALLOC
  4 .stack        00002004  200000d4  000048f8  00020084  2**0
                  ALLOC
  5 .ARM.attributes 00000028  00000000  00000000  00020084  2**0
                  CONTENTS, READONLY
  6 .comment      00000059  00000000  00000000  000200ac  2**0
                  CONTENTS, READONLY
  7 .debug_info   00010d47  00000000  00000000  00020105  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00002cde  00000000  00000000  00030e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00006077  00000000  00000000  00033b2a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_aranges 000004b0  00000000  00000000  00039ba1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000d60  00000000  00000000  0003a051  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_macro  0001b626  00000000  00000000  0003adb1  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   0000d184  00000000  00000000  000563d7  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0008e73c  00000000  00000000  0006355b  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_frame  00000ce4  00000000  00000000  000f1c98  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <exception_table>:
       0:	d8 20 00 20 2d 01 00 00 29 01 00 00 29 01 00 00     . . -...)...)...
	...
      2c:	29 01 00 00 00 00 00 00 00 00 00 00 29 01 00 00     )...........)...
      3c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      4c:	29 01 00 00 6d 04 00 00 29 01 00 00 29 01 00 00     )...m...)...)...
      5c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      6c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      7c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      8c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      9c:	29 01 00 00 29 01 00 00 29 01 00 00 29 01 00 00     )...)...)...)...
      ac:	29 01 00 00 00 00 00 00                             ).......

000000b4 <__do_global_dtors_aux>:
      b4:	b510      	push	{r4, lr}
      b6:	4c06      	ldr	r4, [pc, #24]	; (d0 <__do_global_dtors_aux+0x1c>)
      b8:	7823      	ldrb	r3, [r4, #0]
      ba:	2b00      	cmp	r3, #0
      bc:	d107      	bne.n	ce <__do_global_dtors_aux+0x1a>
      be:	4b05      	ldr	r3, [pc, #20]	; (d4 <__do_global_dtors_aux+0x20>)
      c0:	2b00      	cmp	r3, #0
      c2:	d002      	beq.n	ca <__do_global_dtors_aux+0x16>
      c4:	4804      	ldr	r0, [pc, #16]	; (d8 <__do_global_dtors_aux+0x24>)
      c6:	e000      	b.n	ca <__do_global_dtors_aux+0x16>
      c8:	bf00      	nop
      ca:	2301      	movs	r3, #1
      cc:	7023      	strb	r3, [r4, #0]
      ce:	bd10      	pop	{r4, pc}
      d0:	20000084 	.word	0x20000084
      d4:	00000000 	.word	0x00000000
      d8:	00004824 	.word	0x00004824

000000dc <frame_dummy>:
      dc:	4b08      	ldr	r3, [pc, #32]	; (100 <frame_dummy+0x24>)
      de:	b510      	push	{r4, lr}
      e0:	2b00      	cmp	r3, #0
      e2:	d003      	beq.n	ec <frame_dummy+0x10>
      e4:	4907      	ldr	r1, [pc, #28]	; (104 <frame_dummy+0x28>)
      e6:	4808      	ldr	r0, [pc, #32]	; (108 <frame_dummy+0x2c>)
      e8:	e000      	b.n	ec <frame_dummy+0x10>
      ea:	bf00      	nop
      ec:	4807      	ldr	r0, [pc, #28]	; (10c <frame_dummy+0x30>)
      ee:	6803      	ldr	r3, [r0, #0]
      f0:	2b00      	cmp	r3, #0
      f2:	d100      	bne.n	f6 <frame_dummy+0x1a>
      f4:	bd10      	pop	{r4, pc}
      f6:	4b06      	ldr	r3, [pc, #24]	; (110 <frame_dummy+0x34>)
      f8:	2b00      	cmp	r3, #0
      fa:	d0fb      	beq.n	f4 <frame_dummy+0x18>
      fc:	4798      	blx	r3
      fe:	e7f9      	b.n	f4 <frame_dummy+0x18>
     100:	00000000 	.word	0x00000000
     104:	20000088 	.word	0x20000088
     108:	00004824 	.word	0x00004824
     10c:	00004824 	.word	0x00004824
     110:	00000000 	.word	0x00000000

00000114 <atmel_start_init>:

/**
 * Initializes MCU, drivers and middleware in the project
 **/
void atmel_start_init(void)
{
     114:	b510      	push	{r4, lr}
	system_init();
     116:	4b02      	ldr	r3, [pc, #8]	; (120 <atmel_start_init+0xc>)
     118:	4798      	blx	r3
	
	gpio_init();
     11a:	4b02      	ldr	r3, [pc, #8]	; (124 <atmel_start_init+0x10>)
     11c:	4798      	blx	r3

}
     11e:	bd10      	pop	{r4, pc}
     120:	000001b1 	.word	0x000001b1
     124:	00000219 	.word	0x00000219

00000128 <Dummy_Handler>:

/**
 * \brief Default interrupt handler for unused IRQs.
 */
void Dummy_Handler(void)
{
     128:	e7fe      	b.n	128 <Dummy_Handler>
     12a:	46c0      	nop			; (mov r8, r8)

0000012c <Reset_Handler>:
        if (pSrc != pDest) {
     12c:	4914      	ldr	r1, [pc, #80]	; (180 <Reset_Handler+0x54>)
     12e:	4815      	ldr	r0, [pc, #84]	; (184 <Reset_Handler+0x58>)
{
     130:	b510      	push	{r4, lr}
        if (pSrc != pDest) {
     132:	4281      	cmp	r1, r0
     134:	d009      	beq.n	14a <Reset_Handler+0x1e>
                for (; pDest < &_erelocate;) {
     136:	4b14      	ldr	r3, [pc, #80]	; (188 <Reset_Handler+0x5c>)
     138:	4298      	cmp	r0, r3
     13a:	d206      	bcs.n	14a <Reset_Handler+0x1e>
                        *pDest++ = *pSrc++;
     13c:	43c2      	mvns	r2, r0
     13e:	18d2      	adds	r2, r2, r3
     140:	0892      	lsrs	r2, r2, #2
     142:	3201      	adds	r2, #1
     144:	0092      	lsls	r2, r2, #2
     146:	4b11      	ldr	r3, [pc, #68]	; (18c <Reset_Handler+0x60>)
     148:	4798      	blx	r3
        for (pDest = &_szero; pDest < &_ezero;) {
     14a:	4811      	ldr	r0, [pc, #68]	; (190 <Reset_Handler+0x64>)
     14c:	4b11      	ldr	r3, [pc, #68]	; (194 <Reset_Handler+0x68>)
     14e:	4298      	cmp	r0, r3
     150:	d207      	bcs.n	162 <Reset_Handler+0x36>
                *pDest++ = 0;
     152:	43c2      	mvns	r2, r0
     154:	18d2      	adds	r2, r2, r3
     156:	0892      	lsrs	r2, r2, #2
     158:	3201      	adds	r2, #1
     15a:	0092      	lsls	r2, r2, #2
     15c:	2100      	movs	r1, #0
     15e:	4b0e      	ldr	r3, [pc, #56]	; (198 <Reset_Handler+0x6c>)
     160:	4798      	blx	r3
        SCB->VTOR = ((uint32_t) pSrc & SCB_VTOR_TBLOFF_Msk);
     162:	21ff      	movs	r1, #255	; 0xff
     164:	4b0d      	ldr	r3, [pc, #52]	; (19c <Reset_Handler+0x70>)
     166:	4a0e      	ldr	r2, [pc, #56]	; (1a0 <Reset_Handler+0x74>)
     168:	438b      	bics	r3, r1
     16a:	6093      	str	r3, [r2, #8]
        NVMCTRL->CTRLB.bit.MANW = 1;
     16c:	4a0d      	ldr	r2, [pc, #52]	; (1a4 <Reset_Handler+0x78>)
     16e:	397f      	subs	r1, #127	; 0x7f
     170:	6853      	ldr	r3, [r2, #4]
     172:	430b      	orrs	r3, r1
     174:	6053      	str	r3, [r2, #4]
        __libc_init_array();
     176:	4b0c      	ldr	r3, [pc, #48]	; (1a8 <Reset_Handler+0x7c>)
     178:	4798      	blx	r3
        main();
     17a:	4b0c      	ldr	r3, [pc, #48]	; (1ac <Reset_Handler+0x80>)
     17c:	4798      	blx	r3
     17e:	e7fe      	b.n	17e <Reset_Handler+0x52>
     180:	00004824 	.word	0x00004824
     184:	20000000 	.word	0x20000000
     188:	20000084 	.word	0x20000084
     18c:	00002489 	.word	0x00002489
     190:	20000084 	.word	0x20000084
     194:	200000d4 	.word	0x200000d4
     198:	0000249b 	.word	0x0000249b
     19c:	00000000 	.word	0x00000000
     1a0:	e000ed00 	.word	0xe000ed00
     1a4:	41004000 	.word	0x41004000
     1a8:	00002419 	.word	0x00002419
     1ac:	00000911 	.word	0x00000911

000001b0 <system_init>:
{
	delay_init(SysTick);
}

void system_init(void)
{
     1b0:	b510      	push	{r4, lr}
 * Currently the following initialization functions are supported:
 *  - System clock initialization
 */
static inline void init_mcu(void)
{
	_init_chip();
     1b2:	4b11      	ldr	r3, [pc, #68]	; (1f8 <system_init+0x48>)
     1b4:	4798      	blx	r3
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = ~data;
}

static inline void hri_port_clear_OUT_reg(const void *const hw, uint8_t submodule_index, hri_port_out_reg_t mask)
{
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     1b6:	23c0      	movs	r3, #192	; 0xc0
     1b8:	2280      	movs	r2, #128	; 0x80
     1ba:	2194      	movs	r1, #148	; 0x94

static inline void hri_port_write_WRCONFIG_reg(const void *const hw, uint8_t submodule_index,
                                               hri_port_wrconfig_reg_t data)
{
	PORT_CRITICAL_SECTION_ENTER();
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     1bc:	20c0      	movs	r0, #192	; 0xc0
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     1be:	05db      	lsls	r3, r3, #23
     1c0:	00d2      	lsls	r2, r2, #3
     1c2:	505a      	str	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     1c4:	390c      	subs	r1, #12
     1c6:	505a      	str	r2, [r3, r1]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     1c8:	4a0c      	ldr	r2, [pc, #48]	; (1fc <system_init+0x4c>)
     1ca:	4b0d      	ldr	r3, [pc, #52]	; (200 <system_init+0x50>)
     1cc:	3120      	adds	r1, #32
     1ce:	0600      	lsls	r0, r0, #24
     1d0:	505a      	str	r2, [r3, r1]
     1d2:	5058      	str	r0, [r3, r1]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     1d4:	20ca      	movs	r0, #202	; 0xca
	tmp &= ~PORT_PINCFG_PMUXEN;
     1d6:	2401      	movs	r4, #1
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     1d8:	5c19      	ldrb	r1, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     1da:	43a1      	bics	r1, r4
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     1dc:	5419      	strb	r1, [r3, r0]
}

static inline void hri_mclk_set_AHBMASK_NVMCTRL_bit(const void *const hw)
{
	MCLK_CRITICAL_SECTION_ENTER();
	((Mclk *)hw)->AHBMASK.reg |= MCLK_AHBMASK_NVMCTRL;
     1de:	2380      	movs	r3, #128	; 0x80
     1e0:	6911      	ldr	r1, [r2, #16]
     1e2:	005b      	lsls	r3, r3, #1
     1e4:	430b      	orrs	r3, r1
     1e6:	6113      	str	r3, [r2, #16]
	flash_init(&FLASH_0, NVMCTRL);
     1e8:	4906      	ldr	r1, [pc, #24]	; (204 <system_init+0x54>)
     1ea:	4b07      	ldr	r3, [pc, #28]	; (208 <system_init+0x58>)
     1ec:	4807      	ldr	r0, [pc, #28]	; (20c <system_init+0x5c>)
     1ee:	4798      	blx	r3
	delay_init(SysTick);
     1f0:	4807      	ldr	r0, [pc, #28]	; (210 <system_init+0x60>)
     1f2:	4b08      	ldr	r3, [pc, #32]	; (214 <system_init+0x64>)
     1f4:	4798      	blx	r3
	gpio_set_pin_function(LED0, GPIO_PIN_FUNCTION_OFF);

	FLASH_0_init();

	delay_driver_init();
}
     1f6:	bd10      	pop	{r4, pc}
     1f8:	00000395 	.word	0x00000395
     1fc:	40000400 	.word	0x40000400
     200:	40002800 	.word	0x40002800
     204:	41004000 	.word	0x41004000
     208:	0000031d 	.word	0x0000031d
     20c:	200000b4 	.word	0x200000b4
     210:	e000e010 	.word	0xe000e010
     214:	000002d1 	.word	0x000002d1

00000218 <gpio_init>:
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     218:	22c0      	movs	r2, #192	; 0xc0

#include "driver_init.h"
#include "gpio_init.h"

void gpio_init(void)
{
     21a:	b5f0      	push	{r4, r5, r6, r7, lr}
     21c:	2302      	movs	r3, #2
     21e:	46c6      	mov	lr, r8
     220:	2194      	movs	r1, #148	; 0x94
     222:	05d2      	lsls	r2, r2, #23
     224:	b500      	push	{lr}
     226:	2780      	movs	r7, #128	; 0x80
     228:	5053      	str	r3, [r2, r1]
     22a:	2080      	movs	r0, #128	; 0x80
     22c:	2180      	movs	r1, #128	; 0x80
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     22e:	2688      	movs	r6, #136	; 0x88
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     230:	0249      	lsls	r1, r1, #9
     232:	037f      	lsls	r7, r7, #13
     234:	0380      	lsls	r0, r0, #14
     236:	6151      	str	r1, [r2, #20]
     238:	4680      	mov	r8, r0
     23a:	6157      	str	r7, [r2, #20]
     23c:	6150      	str	r0, [r2, #20]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     23e:	20a8      	movs	r0, #168	; 0xa8
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     240:	5193      	str	r3, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     242:	4d1c      	ldr	r5, [pc, #112]	; (2b4 <gpio_init+0x9c>)
     244:	4b1c      	ldr	r3, [pc, #112]	; (2b8 <gpio_init+0xa0>)
     246:	4c1d      	ldr	r4, [pc, #116]	; (2bc <gpio_init+0xa4>)
     248:	501d      	str	r5, [r3, r0]
     24a:	25c0      	movs	r5, #192	; 0xc0
     24c:	062d      	lsls	r5, r5, #24
     24e:	501d      	str	r5, [r3, r0]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     250:	6091      	str	r1, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     252:	2180      	movs	r1, #128	; 0x80
     254:	05c9      	lsls	r1, r1, #23
     256:	6299      	str	r1, [r3, #40]	; 0x28
     258:	629c      	str	r4, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     25a:	4644      	mov	r4, r8
     25c:	6097      	str	r7, [r2, #8]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     25e:	4f18      	ldr	r7, [pc, #96]	; (2c0 <gpio_init+0xa8>)
     260:	6299      	str	r1, [r3, #40]	; 0x28
     262:	629f      	str	r7, [r3, #40]	; 0x28
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     264:	6094      	str	r4, [r2, #8]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     266:	27c1      	movs	r7, #193	; 0xc1
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     268:	6299      	str	r1, [r3, #40]	; 0x28
     26a:	4916      	ldr	r1, [pc, #88]	; (2c4 <gpio_init+0xac>)
     26c:	6299      	str	r1, [r3, #40]	; 0x28
	tmp &= ~PORT_PINCFG_PMUXEN;
     26e:	2101      	movs	r1, #1
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     270:	5ddc      	ldrb	r4, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     272:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     274:	55dc      	strb	r4, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     276:	3f71      	subs	r7, #113	; 0x71
     278:	5ddc      	ldrb	r4, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     27a:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     27c:	55dc      	strb	r4, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     27e:	3704      	adds	r7, #4
     280:	5ddc      	ldrb	r4, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     282:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     284:	55dc      	strb	r4, [r3, r7]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     286:	3701      	adds	r7, #1
     288:	5ddc      	ldrb	r4, [r3, r7]
	tmp &= ~PORT_PINCFG_PMUXEN;
     28a:	438c      	bics	r4, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     28c:	55dc      	strb	r4, [r3, r7]
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     28e:	2480      	movs	r4, #128	; 0x80
     290:	3743      	adds	r7, #67	; 0x43
     292:	00e4      	lsls	r4, r4, #3
     294:	51d4      	str	r4, [r2, r7]
	((Port *)hw)->Group[submodule_index].DIRSET.reg = mask;
     296:	5194      	str	r4, [r2, r6]
	((Port *)hw)->Group[submodule_index].WRCONFIG.reg = data;
     298:	4a0b      	ldr	r2, [pc, #44]	; (2c8 <gpio_init+0xb0>)
     29a:	501a      	str	r2, [r3, r0]
     29c:	501d      	str	r5, [r3, r0]
	tmp = ((Port *)hw)->Group[submodule_index].PINCFG[index].reg;
     29e:	3022      	adds	r0, #34	; 0x22
     2a0:	5c1a      	ldrb	r2, [r3, r0]
	tmp &= ~PORT_PINCFG_PMUXEN;
     2a2:	438a      	bics	r2, r1
	((Port *)hw)->Group[submodule_index].PINCFG[index].reg = tmp;
     2a4:	541a      	strb	r2, [r3, r0]
	gpio_set_pin_direction(LED0, GPIO_DIRECTION_OUT);

	gpio_set_pin_function(LED0, GPIO_PIN_FUNCTION_OFF);
#endif

	delay_ms(10);
     2a6:	38c0      	subs	r0, #192	; 0xc0
     2a8:	4b08      	ldr	r3, [pc, #32]	; (2cc <gpio_init+0xb4>)
     2aa:	4798      	blx	r3
     2ac:	bc04      	pop	{r2}
     2ae:	4690      	mov	r8, r2
     2b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     2b2:	46c0      	nop			; (mov r8, r8)
     2b4:	40000002 	.word	0x40000002
     2b8:	40002800 	.word	0x40002800
     2bc:	c0000001 	.word	0xc0000001
     2c0:	c0000010 	.word	0xc0000010
     2c4:	c0000020 	.word	0xc0000020
     2c8:	40000400 	.word	0x40000400
     2cc:	000002e5 	.word	0x000002e5

000002d0 <delay_init>:

/**
 * \brief Initialize Delay driver
 */
void delay_init(void *const hw)
{
     2d0:	b510      	push	{r4, lr}
	_delay_init(hardware = hw);
     2d2:	4b02      	ldr	r3, [pc, #8]	; (2dc <delay_init+0xc>)
     2d4:	6018      	str	r0, [r3, #0]
     2d6:	4b02      	ldr	r3, [pc, #8]	; (2e0 <delay_init+0x10>)
     2d8:	4798      	blx	r3
}
     2da:	bd10      	pop	{r4, pc}
     2dc:	200000a0 	.word	0x200000a0
     2e0:	0000073d 	.word	0x0000073d

000002e4 <delay_ms>:
/**
 * \brief Perform delay in ms
 */
void delay_ms(const uint16_t ms)
{
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     2e4:	4b04      	ldr	r3, [pc, #16]	; (2f8 <delay_ms+0x14>)
{
     2e6:	b510      	push	{r4, lr}
	_delay_cycles(hardware, _get_cycles_for_ms(ms));
     2e8:	681c      	ldr	r4, [r3, #0]
     2ea:	4b04      	ldr	r3, [pc, #16]	; (2fc <delay_ms+0x18>)
     2ec:	4798      	blx	r3
     2ee:	4b04      	ldr	r3, [pc, #16]	; (300 <delay_ms+0x1c>)
     2f0:	0001      	movs	r1, r0
     2f2:	0020      	movs	r0, r4
     2f4:	4798      	blx	r3
}
     2f6:	bd10      	pop	{r4, pc}
     2f8:	200000a0 	.word	0x200000a0
     2fc:	00000389 	.word	0x00000389
     300:	00000751 	.word	0x00000751

00000304 <flash_ready>:
 * \param[in] device The pointer to flash device structure
 */
static void flash_ready(struct _flash_device *device)
{
	struct flash_descriptor *const descr = CONTAINER_OF(device, struct flash_descriptor, dev);
	if (descr->callbacks.cb_ready) {
     304:	6943      	ldr	r3, [r0, #20]
{
     306:	b510      	push	{r4, lr}
	if (descr->callbacks.cb_ready) {
     308:	2b00      	cmp	r3, #0
     30a:	d000      	beq.n	30e <flash_ready+0xa>
		descr->callbacks.cb_ready(descr);
     30c:	4798      	blx	r3
	}
}
     30e:	bd10      	pop	{r4, pc}

00000310 <flash_error>:
 * \param[in] device The pointer to flash device structure
 */
static void flash_error(struct _flash_device *device)
{
	struct flash_descriptor *const descr = CONTAINER_OF(device, struct flash_descriptor, dev);
	if (descr->callbacks.cb_error) {
     310:	6983      	ldr	r3, [r0, #24]
{
     312:	b510      	push	{r4, lr}
	if (descr->callbacks.cb_error) {
     314:	2b00      	cmp	r3, #0
     316:	d000      	beq.n	31a <flash_error+0xa>
		descr->callbacks.cb_error(descr);
     318:	4798      	blx	r3
	}
}
     31a:	bd10      	pop	{r4, pc}

0000031c <flash_init>:
{
     31c:	b570      	push	{r4, r5, r6, lr}
     31e:	0004      	movs	r4, r0
     320:	000d      	movs	r5, r1
	ASSERT(flash && hw);
     322:	2800      	cmp	r0, #0
     324:	d012      	beq.n	34c <flash_init+0x30>
     326:	0008      	movs	r0, r1
     328:	1e43      	subs	r3, r0, #1
     32a:	4198      	sbcs	r0, r3
     32c:	b2c0      	uxtb	r0, r0
     32e:	4908      	ldr	r1, [pc, #32]	; (350 <flash_init+0x34>)
     330:	4b08      	ldr	r3, [pc, #32]	; (354 <flash_init+0x38>)
     332:	2238      	movs	r2, #56	; 0x38
     334:	4798      	blx	r3
	rc = _flash_init(&flash->dev, hw);
     336:	0029      	movs	r1, r5
     338:	0020      	movs	r0, r4
     33a:	4b07      	ldr	r3, [pc, #28]	; (358 <flash_init+0x3c>)
     33c:	4798      	blx	r3
	if (rc) {
     33e:	2800      	cmp	r0, #0
     340:	d103      	bne.n	34a <flash_init+0x2e>
	flash->dev.flash_cb.ready_cb = flash_ready;
     342:	4b06      	ldr	r3, [pc, #24]	; (35c <flash_init+0x40>)
     344:	6023      	str	r3, [r4, #0]
	flash->dev.flash_cb.error_cb = flash_error;
     346:	4b06      	ldr	r3, [pc, #24]	; (360 <flash_init+0x44>)
     348:	6063      	str	r3, [r4, #4]
}
     34a:	bd70      	pop	{r4, r5, r6, pc}
     34c:	2000      	movs	r0, #0
     34e:	e7ee      	b.n	32e <flash_init+0x12>
     350:	00002624 	.word	0x00002624
     354:	00000365 	.word	0x00000365
     358:	0000040d 	.word	0x0000040d
     35c:	00000305 	.word	0x00000305
     360:	00000311 	.word	0x00000311

00000364 <assert>:
/**
 * \brief Assert function
 */
void assert(const bool condition, const char *const file, const int line)
{
	if (!(condition)) {
     364:	2800      	cmp	r0, #0
     366:	d100      	bne.n	36a <assert+0x6>
		__asm("BKPT #0");
     368:	be00      	bkpt	0x0000
	}
	(void)file;
	(void)line;
}
     36a:	4770      	bx	lr

0000036c <_sbrk>:
extern caddr_t _sbrk(int incr)
{
	static unsigned char *heap = NULL;
	unsigned char *       prev_heap;

	if (heap == NULL) {
     36c:	4a04      	ldr	r2, [pc, #16]	; (380 <_sbrk+0x14>)
     36e:	6813      	ldr	r3, [r2, #0]
     370:	2b00      	cmp	r3, #0
     372:	d003      	beq.n	37c <_sbrk+0x10>
		heap = (unsigned char *)&_end;
	}
	prev_heap = heap;

	heap += incr;
     374:	1818      	adds	r0, r3, r0
     376:	6010      	str	r0, [r2, #0]

	return (caddr_t)prev_heap;
}
     378:	0018      	movs	r0, r3
     37a:	4770      	bx	lr
     37c:	4b01      	ldr	r3, [pc, #4]	; (384 <_sbrk+0x18>)
     37e:	e7f9      	b.n	374 <_sbrk+0x8>
     380:	200000a4 	.word	0x200000a4
     384:	200020d8 	.word	0x200020d8

00000388 <_get_cycles_for_ms>:
 */
static inline uint32_t _get_cycles_for_ms_internal(const uint16_t ms, const uint32_t freq, const uint8_t power)
{
	switch (power) {
	case 8:
		return (ms * (freq / 100000)) * 100;
     388:	4b01      	ldr	r3, [pc, #4]	; (390 <_get_cycles_for_ms+0x8>)
     38a:	4358      	muls	r0, r3
 * \brief Retrieve the amount of cycles to delay for the given amount of ms
 */
uint32_t _get_cycles_for_ms(const uint16_t ms)
{
	return _get_cycles_for_ms_internal(ms, CONF_CPU_FREQUENCY, CPU_FREQ_POWER);
}
     38c:	4770      	bx	lr
     38e:	46c0      	nop			; (mov r8, r8)
     390:	00002ee0 	.word	0x00002ee0

00000394 <_init_chip>:

/**
 * \brief Initialize the hardware abstraction layer
 */
void _init_chip(void)
{
     394:	b510      	push	{r4, lr}
}

static inline void hri_nvmctrl_set_CTRLB_RWS_bf(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg |= NVMCTRL_CTRLB_RWS(mask);
     396:	4b09      	ldr	r3, [pc, #36]	; (3bc <_init_chip+0x28>)
	hri_nvmctrl_set_CTRLB_RWS_bf(NVMCTRL, CONF_NVM_WAIT_STATE);

	_set_performance_level(2);
     398:	2002      	movs	r0, #2
     39a:	685a      	ldr	r2, [r3, #4]
     39c:	605a      	str	r2, [r3, #4]
     39e:	4b08      	ldr	r3, [pc, #32]	; (3c0 <_init_chip+0x2c>)
     3a0:	4798      	blx	r3

	_osc32kctrl_init_sources();
     3a2:	4b08      	ldr	r3, [pc, #32]	; (3c4 <_init_chip+0x30>)
     3a4:	4798      	blx	r3
	_oscctrl_init_sources();
     3a6:	4b08      	ldr	r3, [pc, #32]	; (3c8 <_init_chip+0x34>)
     3a8:	4798      	blx	r3
	_mclk_init();
     3aa:	4b08      	ldr	r3, [pc, #32]	; (3cc <_init_chip+0x38>)
     3ac:	4798      	blx	r3
#if _GCLK_INIT_1ST
	_gclk_init_generators_by_fref(_GCLK_INIT_1ST);
#endif
	_oscctrl_init_referenced_generators();
     3ae:	4b08      	ldr	r3, [pc, #32]	; (3d0 <_init_chip+0x3c>)
     3b0:	4798      	blx	r3
	_gclk_init_generators_by_fref(_GCLK_INIT_LAST);
     3b2:	20ff      	movs	r0, #255	; 0xff
     3b4:	4b07      	ldr	r3, [pc, #28]	; (3d4 <_init_chip+0x40>)
     3b6:	4798      	blx	r3
#endif

#if (CONF_PORT_EVCTRL_PORT_0 | CONF_PORT_EVCTRL_PORT_1 | CONF_PORT_EVCTRL_PORT_2 | CONF_PORT_EVCTRL_PORT_3)
	_port_event_init();
#endif
}
     3b8:	bd10      	pop	{r4, pc}
     3ba:	46c0      	nop			; (mov r8, r8)
     3bc:	41004000 	.word	0x41004000
     3c0:	00000719 	.word	0x00000719
     3c4:	000006c9 	.word	0x000006c9
     3c8:	000006e1 	.word	0x000006e1
     3cc:	000003f9 	.word	0x000003f9
     3d0:	00000715 	.word	0x00000715
     3d4:	000003d9 	.word	0x000003d9

000003d8 <_gclk_init_generators_by_fref>:

void _gclk_init_generators_by_fref(uint32_t bm)
{

#if CONF_GCLK_GENERATOR_0_CONFIG == 1
	if (bm & (1ul << 0)) {
     3d8:	07c3      	lsls	r3, r0, #31
     3da:	d506      	bpl.n	3ea <_gclk_init_generators_by_fref+0x12>
}

static inline void hri_gclk_write_GENCTRL_reg(const void *const hw, uint8_t index, hri_gclk_genctrl_reg_t data)
{
	GCLK_CRITICAL_SECTION_ENTER();
	((Gclk *)hw)->GENCTRL[index].reg = data;
     3dc:	4a03      	ldr	r2, [pc, #12]	; (3ec <_gclk_init_generators_by_fref+0x14>)
     3de:	4b04      	ldr	r3, [pc, #16]	; (3f0 <_gclk_init_generators_by_fref+0x18>)
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
     3e0:	4904      	ldr	r1, [pc, #16]	; (3f4 <_gclk_init_generators_by_fref+0x1c>)
	((Gclk *)hw)->GENCTRL[index].reg = data;
     3e2:	6213      	str	r3, [r2, #32]
	while (((Gclk *)hw)->SYNCBUSY.reg & reg) {
     3e4:	6853      	ldr	r3, [r2, #4]
     3e6:	420b      	tst	r3, r1
     3e8:	d1fc      	bne.n	3e4 <_gclk_init_generators_by_fref+0xc>
		        | (CONF_GCLK_GEN_8_DIVSEL << GCLK_GENCTRL_DIVSEL_Pos) | (CONF_GCLK_GEN_8_OE << GCLK_GENCTRL_OE_Pos)
		        | (CONF_GCLK_GEN_8_OOV << GCLK_GENCTRL_OOV_Pos) | (CONF_GCLK_GEN_8_IDC << GCLK_GENCTRL_IDC_Pos)
		        | (CONF_GCLK_GENERATOR_8_CONFIG << GCLK_GENCTRL_GENEN_Pos) | CONF_GCLK_GEN_8_SOURCE);
	}
#endif
}
     3ea:	4770      	bx	lr
     3ec:	40001800 	.word	0x40001800
     3f0:	00010106 	.word	0x00010106
     3f4:	000007fd 	.word	0x000007fd

000003f8 <_mclk_init>:
	((Mclk *)hw)->BUPDIV.reg = data;
     3f8:	2208      	movs	r2, #8
     3fa:	4b03      	ldr	r3, [pc, #12]	; (408 <_mclk_init+0x10>)
     3fc:	719a      	strb	r2, [r3, #6]
	((Mclk *)hw)->LPDIV.reg = data;
     3fe:	3a04      	subs	r2, #4
     400:	715a      	strb	r2, [r3, #5]
	((Mclk *)hw)->CPUDIV.reg = data;
     402:	3a03      	subs	r2, #3
     404:	711a      	strb	r2, [r3, #4]
{
	void *hw = (void *)MCLK;
	hri_mclk_write_BUPDIV_reg(hw, MCLK_BUPDIV_BUPDIV(CONF_MCLK_BUPDIV));
	hri_mclk_write_LPDIV_reg(hw, MCLK_LPDIV_LPDIV(CONF_MCLK_LPDIV));
	hri_mclk_write_CPUDIV_reg(hw, MCLK_CPUDIV_CPUDIV(CONF_MCLK_CPUDIV));
}
     406:	4770      	bx	lr
     408:	40000400 	.word	0x40000400

0000040c <_flash_init>:

/**
 * \brief Initialize NVM
 */
int32_t _flash_init(struct _flash_device *const device, void *const hw)
{
     40c:	b570      	push	{r4, r5, r6, lr}
     40e:	0005      	movs	r5, r0
     410:	000c      	movs	r4, r1
	ASSERT(device && (hw == NVMCTRL));
     412:	2800      	cmp	r0, #0
     414:	d01d      	beq.n	452 <_flash_init+0x46>
     416:	4b10      	ldr	r3, [pc, #64]	; (458 <_flash_init+0x4c>)
     418:	18c8      	adds	r0, r1, r3
     41a:	4243      	negs	r3, r0
     41c:	4158      	adcs	r0, r3
     41e:	b2c0      	uxtb	r0, r0
     420:	2246      	movs	r2, #70	; 0x46
     422:	490e      	ldr	r1, [pc, #56]	; (45c <_flash_init+0x50>)
     424:	4b0e      	ldr	r3, [pc, #56]	; (460 <_flash_init+0x54>)
     426:	4798      	blx	r3

static inline hri_nvmctrl_ctrlb_reg_t hri_nvmctrl_get_CTRLB_reg(const void *const hw, hri_nvmctrl_ctrlb_reg_t mask)
{
	uint32_t tmp;
	tmp = ((Nvmctrl *)hw)->CTRLB.reg;
	tmp &= mask;
     428:	239e      	movs	r3, #158	; 0x9e
	uint32_t ctrlb;

	device->hw = hw;
     42a:	612c      	str	r4, [r5, #16]
	tmp = ((Nvmctrl *)hw)->CTRLB.reg;
     42c:	6862      	ldr	r2, [r4, #4]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     42e:	2180      	movs	r1, #128	; 0x80
	tmp &= mask;
     430:	4013      	ands	r3, r2
     432:	2210      	movs	r2, #16
}

static inline void hri_nvmctrl_write_CTRLB_reg(const void *const hw, hri_nvmctrl_ctrlb_reg_t data)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->CTRLB.reg = data;
     434:	6063      	str	r3, [r4, #4]
	ctrlb      = _nvm.ctrlb & ~(NVMCTRL_CTRLB_RWS_Msk | NVMCTRL_CTRLB_MANW);
	ctrlb |= hri_nvmctrl_get_CTRLB_reg(device->hw, NVMCTRL_CTRLB_RWS_Msk | NVMCTRL_CTRLB_MANW);
	hri_nvmctrl_write_CTRLB_reg(device->hw, ctrlb);

	_nvm_dev = device;
     436:	4b0b      	ldr	r3, [pc, #44]	; (464 <_flash_init+0x58>)
     438:	601d      	str	r5, [r3, #0]
     43a:	4b0b      	ldr	r3, [pc, #44]	; (468 <_flash_init+0x5c>)
     43c:	505a      	str	r2, [r3, r1]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
     43e:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
     442:	f3bf 8f6f 	isb	sy
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICPR[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     446:	3101      	adds	r1, #1
     448:	31ff      	adds	r1, #255	; 0xff
     44a:	505a      	str	r2, [r3, r1]
	NVIC_DisableIRQ(NVMCTRL_IRQn);
	NVIC_ClearPendingIRQ(NVMCTRL_IRQn);
	NVIC_EnableIRQ(NVMCTRL_IRQn);
	return ERR_NONE;
}
     44c:	2000      	movs	r0, #0
    NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
     44e:	601a      	str	r2, [r3, #0]
     450:	bd70      	pop	{r4, r5, r6, pc}
     452:	2000      	movs	r0, #0
     454:	e7e4      	b.n	420 <_flash_init+0x14>
     456:	46c0      	nop			; (mov r8, r8)
     458:	beffc000 	.word	0xbeffc000
     45c:	0000263c 	.word	0x0000263c
     460:	00000365 	.word	0x00000365
     464:	200000a8 	.word	0x200000a8
     468:	e000e100 	.word	0xe000e100

0000046c <NVMCTRL_Handler>:
 */
void NVMCTRL_Handler(void)
{
	void *const hw = _nvm_dev->hw;

	if (hri_nvmctrl_get_interrupt_READY_bit(hw)) {
     46c:	2201      	movs	r2, #1
	void *const hw = _nvm_dev->hw;
     46e:	4b0b      	ldr	r3, [pc, #44]	; (49c <NVMCTRL_Handler+0x30>)
{
     470:	b510      	push	{r4, lr}
	void *const hw = _nvm_dev->hw;
     472:	6818      	ldr	r0, [r3, #0]
     474:	6903      	ldr	r3, [r0, #16]
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     476:	7d19      	ldrb	r1, [r3, #20]
	if (hri_nvmctrl_get_interrupt_READY_bit(hw)) {
     478:	420a      	tst	r2, r1
     47a:	d004      	beq.n	486 <NVMCTRL_Handler+0x1a>
		if (NULL != _nvm_dev->flash_cb.ready_cb) {
     47c:	6803      	ldr	r3, [r0, #0]
     47e:	2b00      	cmp	r3, #0
     480:	d000      	beq.n	484 <NVMCTRL_Handler+0x18>
			_nvm_dev->flash_cb.ready_cb(_nvm_dev);
		}
	} else if (hri_nvmctrl_get_interrupt_ERROR_bit(hw)) {
		hri_nvmctrl_clear_interrupt_ERROR_bit(hw);
		if (NULL != _nvm_dev->flash_cb.error_cb) {
			_nvm_dev->flash_cb.error_cb(_nvm_dev);
     482:	4798      	blx	r3
		}
	}
}
     484:	bd10      	pop	{r4, pc}
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_ERROR) >> NVMCTRL_INTFLAG_ERROR_Pos;
     486:	7d19      	ldrb	r1, [r3, #20]
     488:	0849      	lsrs	r1, r1, #1
	} else if (hri_nvmctrl_get_interrupt_ERROR_bit(hw)) {
     48a:	420a      	tst	r2, r1
     48c:	d0fa      	beq.n	484 <NVMCTRL_Handler+0x18>
	((Nvmctrl *)hw)->INTFLAG.reg = NVMCTRL_INTFLAG_ERROR;
     48e:	2202      	movs	r2, #2
     490:	751a      	strb	r2, [r3, #20]
		if (NULL != _nvm_dev->flash_cb.error_cb) {
     492:	6843      	ldr	r3, [r0, #4]
     494:	2b00      	cmp	r3, #0
     496:	d1f4      	bne.n	482 <NVMCTRL_Handler+0x16>
     498:	e7f4      	b.n	484 <NVMCTRL_Handler+0x18>
     49a:	46c0      	nop			; (mov r8, r8)
     49c:	200000a8 	.word	0x200000a8

000004a0 <_rww_flash_read>:

/**
 * \brief Reads a number of bytes in the internal RWWEE Flash.
 */
int32_t _rww_flash_read(struct _flash_device *const device, const uint32_t src_addr, uint8_t *buffer, uint32_t length)
{
     4a0:	b570      	push	{r4, r5, r6, lr}
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     4a2:	2580      	movs	r5, #128	; 0x80
	    || (addr > (NVMCTRL_RWW_EEPROM_ADDR + NVMCTRL_PAGE_SIZE * NVMCTRL_RWWEE_PAGES))) {
     4a4:	4c19      	ldr	r4, [pc, #100]	; (50c <_rww_flash_read+0x6c>)
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     4a6:	01ad      	lsls	r5, r5, #6
	    || (addr > (NVMCTRL_RWW_EEPROM_ADDR + NVMCTRL_PAGE_SIZE * NVMCTRL_RWWEE_PAGES))) {
     4a8:	190c      	adds	r4, r1, r4
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     4aa:	42ac      	cmp	r4, r5
     4ac:	d902      	bls.n	4b4 <_rww_flash_read+0x14>
	/* Check if the address is valid */
	if (!_is_valid_rww_flash_address(src_addr) || !_is_valid_rww_flash_address(src_addr + length)) {
		return ERR_BAD_ADDRESS;
     4ae:	200e      	movs	r0, #14
     4b0:	4240      	negs	r0, r0
	}

	_flash_read(device, src_addr, buffer, length);

	return ERR_NONE;
}
     4b2:	bd70      	pop	{r4, r5, r6, pc}
	    || (addr > (NVMCTRL_RWW_EEPROM_ADDR + NVMCTRL_PAGE_SIZE * NVMCTRL_RWWEE_PAGES))) {
     4b4:	4c15      	ldr	r4, [pc, #84]	; (50c <_rww_flash_read+0x6c>)
     4b6:	191c      	adds	r4, r3, r4
     4b8:	1864      	adds	r4, r4, r1
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     4ba:	42ac      	cmp	r4, r5
     4bc:	d8f7      	bhi.n	4ae <_rww_flash_read+0xe>
	while (!hri_nvmctrl_get_interrupt_READY_bit(device->hw)) {
     4be:	2401      	movs	r4, #1
     4c0:	6905      	ldr	r5, [r0, #16]
	uint32_t nvm_address = src_addr / 2;
     4c2:	084e      	lsrs	r6, r1, #1
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     4c4:	7d28      	ldrb	r0, [r5, #20]
	while (!hri_nvmctrl_get_interrupt_READY_bit(device->hw)) {
     4c6:	4204      	tst	r4, r0
     4c8:	d0fc      	beq.n	4c4 <_rww_flash_read+0x24>
}

static inline void hri_nvmctrl_clear_STATUS_reg(const void *const hw, hri_nvmctrl_status_reg_t mask)
{
	NVMCTRL_CRITICAL_SECTION_ENTER();
	((Nvmctrl *)hw)->STATUS.reg = mask;
     4ca:	2020      	movs	r0, #32
     4cc:	30ff      	adds	r0, #255	; 0xff
     4ce:	8328      	strh	r0, [r5, #24]
		i = 0;
     4d0:	2000      	movs	r0, #0
	if (src_addr % 2) {
     4d2:	420c      	tst	r4, r1
     4d4:	d113      	bne.n	4fe <_rww_flash_read+0x5e>
	while (i < length) {
     4d6:	4283      	cmp	r3, r0
     4d8:	d90f      	bls.n	4fa <_rww_flash_read+0x5a>
     4da:	0076      	lsls	r6, r6, #1
     4dc:	1e5d      	subs	r5, r3, #1
     4de:	1812      	adds	r2, r2, r0
     4e0:	1a36      	subs	r6, r6, r0
     4e2:	1831      	adds	r1, r6, r0
		data      = NVM_MEMORY[nvm_address++];
     4e4:	8809      	ldrh	r1, [r1, #0]
     4e6:	b289      	uxth	r1, r1
		buffer[i] = (data & 0xFF);
     4e8:	7011      	strb	r1, [r2, #0]
		if (i < (length - 1)) {
     4ea:	4285      	cmp	r5, r0
     4ec:	d901      	bls.n	4f2 <_rww_flash_read+0x52>
			buffer[i + 1] = (data >> 8);
     4ee:	0a09      	lsrs	r1, r1, #8
     4f0:	7051      	strb	r1, [r2, #1]
		i += 2;
     4f2:	3002      	adds	r0, #2
     4f4:	3202      	adds	r2, #2
	while (i < length) {
     4f6:	4283      	cmp	r3, r0
     4f8:	d8f3      	bhi.n	4e2 <_rww_flash_read+0x42>
	return ERR_NONE;
     4fa:	2000      	movs	r0, #0
     4fc:	e7d9      	b.n	4b2 <_rww_flash_read+0x12>
		data      = NVM_MEMORY[nvm_address++];
     4fe:	43a1      	bics	r1, r4
     500:	8809      	ldrh	r1, [r1, #0]
     502:	3601      	adds	r6, #1
		buffer[0] = data >> 8;
     504:	0a09      	lsrs	r1, r1, #8
     506:	7011      	strb	r1, [r2, #0]
		i         = 1;
     508:	3001      	adds	r0, #1
     50a:	e7e4      	b.n	4d6 <_rww_flash_read+0x36>
     50c:	ffc00000 	.word	0xffc00000

00000510 <_rww_flash_write>:

/**
 * \brief Writes a number of bytes in the internal RWWEE Flash.
 */
int32_t _rww_flash_write(struct _flash_device *const device, const uint32_t dst_addr, uint8_t *buffer, uint32_t length)
{
     510:	b5f0      	push	{r4, r5, r6, r7, lr}
     512:	4657      	mov	r7, sl
     514:	464e      	mov	r6, r9
     516:	46de      	mov	lr, fp
     518:	4645      	mov	r5, r8
     51a:	4692      	mov	sl, r2
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     51c:	2280      	movs	r2, #128	; 0x80
{
     51e:	b5e0      	push	{r5, r6, r7, lr}
     520:	4699      	mov	r9, r3
	    || (addr > (NVMCTRL_RWW_EEPROM_ADDR + NVMCTRL_PAGE_SIZE * NVMCTRL_RWWEE_PAGES))) {
     522:	4b62      	ldr	r3, [pc, #392]	; (6ac <_rww_flash_write+0x19c>)
{
     524:	b0c5      	sub	sp, #276	; 0x114
	    || (addr > (NVMCTRL_RWW_EEPROM_ADDR + NVMCTRL_PAGE_SIZE * NVMCTRL_RWWEE_PAGES))) {
     526:	18cb      	adds	r3, r1, r3
{
     528:	9002      	str	r0, [sp, #8]
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     52a:	0192      	lsls	r2, r2, #6
     52c:	4293      	cmp	r3, r2
     52e:	d908      	bls.n	542 <_rww_flash_write+0x32>
	uint32_t i, j, k;
	uint32_t wr_start_addr = dst_addr;

	/* Check if the address is valid */
	if (!_is_valid_rww_flash_address(dst_addr) || !_is_valid_rww_flash_address(dst_addr + length)) {
		return ERR_BAD_ADDRESS;
     530:	200e      	movs	r0, #14
     532:	4240      	negs	r0, r0
		}

	} while (row_end_addr < (wr_start_addr + length - 1));

	return ERR_NONE;
}
     534:	b045      	add	sp, #276	; 0x114
     536:	bc3c      	pop	{r2, r3, r4, r5}
     538:	4690      	mov	r8, r2
     53a:	4699      	mov	r9, r3
     53c:	46a2      	mov	sl, r4
     53e:	46ab      	mov	fp, r5
     540:	bdf0      	pop	{r4, r5, r6, r7, pc}
	    || (addr > (NVMCTRL_RWW_EEPROM_ADDR + NVMCTRL_PAGE_SIZE * NVMCTRL_RWWEE_PAGES))) {
     542:	4b5a      	ldr	r3, [pc, #360]	; (6ac <_rww_flash_write+0x19c>)
     544:	444b      	add	r3, r9
     546:	185b      	adds	r3, r3, r1
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     548:	4293      	cmp	r3, r2
     54a:	d8f1      	bhi.n	530 <_rww_flash_write+0x20>
     54c:	000e      	movs	r6, r1
	while (!hri_nvmctrl_get_interrupt_READY_bit(device->hw)) {
     54e:	2701      	movs	r7, #1
		row_start_addr = wr_start_addr & ~((NVMCTRL_PAGE_SIZE * NVMCTRL_ROW_PAGES) - 1);
     550:	0033      	movs	r3, r6
     552:	22ff      	movs	r2, #255	; 0xff
     554:	4393      	bics	r3, r2
     556:	4698      	mov	r8, r3
		row_end_addr   = row_start_addr + NVMCTRL_ROW_PAGES * NVMCTRL_PAGE_SIZE - 1;
     558:	23ff      	movs	r3, #255	; 0xff
     55a:	4443      	add	r3, r8
     55c:	9303      	str	r3, [sp, #12]
     55e:	9b02      	ldr	r3, [sp, #8]
     560:	ac04      	add	r4, sp, #16
     562:	691d      	ldr	r5, [r3, #16]
     564:	4b51      	ldr	r3, [pc, #324]	; (6ac <_rww_flash_write+0x19c>)
     566:	0022      	movs	r2, r4
     568:	4443      	add	r3, r8
     56a:	469c      	mov	ip, r3
     56c:	4b50      	ldr	r3, [pc, #320]	; (6b0 <_rww_flash_write+0x1a0>)
     56e:	4664      	mov	r4, ip
     570:	4443      	add	r3, r8
     572:	469b      	mov	fp, r3
     574:	46b4      	mov	ip, r6
     576:	465e      	mov	r6, fp
     578:	4693      	mov	fp, r2
     57a:	2380      	movs	r3, #128	; 0x80
     57c:	03db      	lsls	r3, r3, #15
     57e:	18e1      	adds	r1, r4, r3
	if ((addr < NVMCTRL_RWW_EEPROM_ADDR)
     580:	23fe      	movs	r3, #254	; 0xfe
     582:	015b      	lsls	r3, r3, #5
     584:	429c      	cmp	r4, r3
     586:	d971      	bls.n	66c <_rww_flash_write+0x15c>
     588:	3240      	adds	r2, #64	; 0x40
     58a:	0010      	movs	r0, r2
     58c:	3440      	adds	r4, #64	; 0x40
     58e:	0002      	movs	r2, r0
		for (i = 0; i < NVMCTRL_ROW_PAGES; i++) {
     590:	42a6      	cmp	r6, r4
     592:	d1f2      	bne.n	57a <_rww_flash_write+0x6a>
     594:	4666      	mov	r6, ip
		j = (wr_start_addr - row_start_addr) / NVMCTRL_PAGE_SIZE;
     596:	4643      	mov	r3, r8
     598:	223f      	movs	r2, #63	; 0x3f
		while ((wr_start_addr <= row_end_addr) && (length > 0)) {
     59a:	9803      	ldr	r0, [sp, #12]
		j = (wr_start_addr - row_start_addr) / NVMCTRL_PAGE_SIZE;
     59c:	1af3      	subs	r3, r6, r3
     59e:	0999      	lsrs	r1, r3, #6
     5a0:	465c      	mov	r4, fp
     5a2:	4013      	ands	r3, r2
		while ((wr_start_addr <= row_end_addr) && (length > 0)) {
     5a4:	4286      	cmp	r6, r0
     5a6:	d821      	bhi.n	5ec <_rww_flash_write+0xdc>
     5a8:	464a      	mov	r2, r9
     5aa:	2a00      	cmp	r2, #0
     5ac:	d01e      	beq.n	5ec <_rww_flash_write+0xdc>
			k                = (k + 1) % NVMCTRL_PAGE_SIZE;
     5ae:	464a      	mov	r2, r9
     5b0:	4654      	mov	r4, sl
     5b2:	4684      	mov	ip, r0
     5b4:	46aa      	mov	sl, r5
     5b6:	46d9      	mov	r9, fp
     5b8:	0015      	movs	r5, r2
     5ba:	e001      	b.n	5c0 <_rww_flash_write+0xb0>
		while ((wr_start_addr <= row_end_addr) && (length > 0)) {
     5bc:	2d00      	cmp	r5, #0
     5be:	d010      	beq.n	5e2 <_rww_flash_write+0xd2>
			tmp_buffer[j][k] = *buffer;
     5c0:	a804      	add	r0, sp, #16
     5c2:	4683      	mov	fp, r0
     5c4:	018a      	lsls	r2, r1, #6
     5c6:	7820      	ldrb	r0, [r4, #0]
     5c8:	445a      	add	r2, fp
     5ca:	54d0      	strb	r0, [r2, r3]
			k                = (k + 1) % NVMCTRL_PAGE_SIZE;
     5cc:	223f      	movs	r2, #63	; 0x3f
     5ce:	3301      	adds	r3, #1
     5d0:	4013      	ands	r3, r2
				j++;
     5d2:	425a      	negs	r2, r3
     5d4:	415a      	adcs	r2, r3
			wr_start_addr++;
     5d6:	3601      	adds	r6, #1
				j++;
     5d8:	1889      	adds	r1, r1, r2
			buffer++;
     5da:	3401      	adds	r4, #1
			length--;
     5dc:	3d01      	subs	r5, #1
		while ((wr_start_addr <= row_end_addr) && (length > 0)) {
     5de:	45b4      	cmp	ip, r6
     5e0:	d2ec      	bcs.n	5bc <_rww_flash_write+0xac>
     5e2:	002b      	movs	r3, r5
     5e4:	4655      	mov	r5, sl
     5e6:	46a2      	mov	sl, r4
     5e8:	464c      	mov	r4, r9
     5ea:	4699      	mov	r9, r3
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     5ec:	7d2b      	ldrb	r3, [r5, #20]
	while (!hri_nvmctrl_get_interrupt_READY_bit(hw)) {
     5ee:	421f      	tst	r7, r3
     5f0:	d0fc      	beq.n	5ec <_rww_flash_write+0xdc>
	((Nvmctrl *)hw)->STATUS.reg = mask;
     5f2:	2320      	movs	r3, #32
     5f4:	33ff      	adds	r3, #255	; 0xff
     5f6:	832b      	strh	r3, [r5, #24]
     5f8:	9301      	str	r3, [sp, #4]
     5fa:	4643      	mov	r3, r8
	hri_nvmctrl_write_ADDR_reg(hw, dst_addr / 2);
     5fc:	4642      	mov	r2, r8
     5fe:	46b0      	mov	r8, r6
     600:	001e      	movs	r6, r3
     602:	0852      	lsrs	r2, r2, #1
	((Nvmctrl *)hw)->ADDR.reg = data;
     604:	61ea      	str	r2, [r5, #28]
     606:	4693      	mov	fp, r2
	((Nvmctrl *)hw)->CTRLA.reg = data;
     608:	4a2a      	ldr	r2, [pc, #168]	; (6b4 <_rww_flash_write+0x1a4>)
     60a:	802a      	strh	r2, [r5, #0]
	ASSERT(!(dst_addr % 2));
     60c:	22c5      	movs	r2, #197	; 0xc5
     60e:	492a      	ldr	r1, [pc, #168]	; (6b8 <_rww_flash_write+0x1a8>)
     610:	0052      	lsls	r2, r2, #1
     612:	2001      	movs	r0, #1
     614:	4b29      	ldr	r3, [pc, #164]	; (6bc <_rww_flash_write+0x1ac>)
     616:	4798      	blx	r3
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     618:	7d2b      	ldrb	r3, [r5, #20]
	while (!hri_nvmctrl_get_interrupt_READY_bit(hw)) {
     61a:	421f      	tst	r7, r3
     61c:	d0fc      	beq.n	618 <_rww_flash_write+0x108>
	((Nvmctrl *)hw)->CTRLA.reg = data;
     61e:	4b28      	ldr	r3, [pc, #160]	; (6c0 <_rww_flash_write+0x1b0>)
     620:	802b      	strh	r3, [r5, #0]
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     622:	7d2b      	ldrb	r3, [r5, #20]
	while (!hri_nvmctrl_get_interrupt_READY_bit(hw)) {
     624:	421f      	tst	r7, r3
     626:	d0fc      	beq.n	622 <_rww_flash_write+0x112>
	((Nvmctrl *)hw)->STATUS.reg = mask;
     628:	466b      	mov	r3, sp
     62a:	889b      	ldrh	r3, [r3, #4]
     62c:	0020      	movs	r0, r4
     62e:	832b      	strh	r3, [r5, #24]
     630:	465b      	mov	r3, fp
     632:	0059      	lsls	r1, r3, #1
     634:	3040      	adds	r0, #64	; 0x40
     636:	1b09      	subs	r1, r1, r4
			data |= (buffer[i + 1] << 8);
     638:	7862      	ldrb	r2, [r4, #1]
     63a:	7823      	ldrb	r3, [r4, #0]
     63c:	0212      	lsls	r2, r2, #8
     63e:	4313      	orrs	r3, r2
     640:	190a      	adds	r2, r1, r4
     642:	3402      	adds	r4, #2
		NVM_MEMORY[nvm_address++] = data;
     644:	8013      	strh	r3, [r2, #0]
	for (i = 0; i < size; i += 2) {
     646:	42a0      	cmp	r0, r4
     648:	d1f6      	bne.n	638 <_rww_flash_write+0x128>
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     64a:	7d2b      	ldrb	r3, [r5, #20]
	while (!hri_nvmctrl_get_interrupt_READY_bit(hw)) {
     64c:	421f      	tst	r7, r3
     64e:	d0fc      	beq.n	64a <_rww_flash_write+0x13a>
	((Nvmctrl *)hw)->ADDR.reg = data;
     650:	465b      	mov	r3, fp
     652:	61eb      	str	r3, [r5, #28]
	((Nvmctrl *)hw)->CTRLA.reg = data;
     654:	4b1b      	ldr	r3, [pc, #108]	; (6c4 <_rww_flash_write+0x1b4>)
     656:	3640      	adds	r6, #64	; 0x40
     658:	802b      	strh	r3, [r5, #0]
		for (i = 0; i < NVMCTRL_ROW_PAGES; i++) {
     65a:	ab44      	add	r3, sp, #272	; 0x110
     65c:	4298      	cmp	r0, r3
     65e:	d01a      	beq.n	696 <_rww_flash_write+0x186>
     660:	9b02      	ldr	r3, [sp, #8]
     662:	0004      	movs	r4, r0
     664:	691d      	ldr	r5, [r3, #16]
     666:	0873      	lsrs	r3, r6, #1
     668:	469b      	mov	fp, r3
     66a:	e7cf      	b.n	60c <_rww_flash_write+0xfc>
	uint32_t nvm_address = src_addr / 2;
     66c:	0849      	lsrs	r1, r1, #1
	return (((Nvmctrl *)hw)->INTFLAG.reg & NVMCTRL_INTFLAG_READY) >> NVMCTRL_INTFLAG_READY_Pos;
     66e:	7d2b      	ldrb	r3, [r5, #20]
	while (!hri_nvmctrl_get_interrupt_READY_bit(device->hw)) {
     670:	421f      	tst	r7, r3
     672:	d0fc      	beq.n	66e <_rww_flash_write+0x15e>
	((Nvmctrl *)hw)->STATUS.reg = mask;
     674:	2320      	movs	r3, #32
     676:	0010      	movs	r0, r2
     678:	33ff      	adds	r3, #255	; 0xff
     67a:	0049      	lsls	r1, r1, #1
     67c:	832b      	strh	r3, [r5, #24]
     67e:	3040      	adds	r0, #64	; 0x40
     680:	1a89      	subs	r1, r1, r2
     682:	188b      	adds	r3, r1, r2
		data      = NVM_MEMORY[nvm_address++];
     684:	881b      	ldrh	r3, [r3, #0]
     686:	b29b      	uxth	r3, r3
		buffer[i] = (data & 0xFF);
     688:	7013      	strb	r3, [r2, #0]
			buffer[i + 1] = (data >> 8);
     68a:	0a1b      	lsrs	r3, r3, #8
     68c:	7053      	strb	r3, [r2, #1]
     68e:	3202      	adds	r2, #2
	while (i < length) {
     690:	4290      	cmp	r0, r2
     692:	d1f6      	bne.n	682 <_rww_flash_write+0x172>
     694:	e77a      	b.n	58c <_rww_flash_write+0x7c>
     696:	4646      	mov	r6, r8
	} while (row_end_addr < (wr_start_addr + length - 1));
     698:	464b      	mov	r3, r9
     69a:	9a03      	ldr	r2, [sp, #12]
     69c:	199b      	adds	r3, r3, r6
     69e:	3b01      	subs	r3, #1
     6a0:	429a      	cmp	r2, r3
     6a2:	d200      	bcs.n	6a6 <_rww_flash_write+0x196>
     6a4:	e754      	b.n	550 <_rww_flash_write+0x40>
	return ERR_NONE;
     6a6:	2000      	movs	r0, #0
     6a8:	e744      	b.n	534 <_rww_flash_write+0x24>
     6aa:	46c0      	nop			; (mov r8, r8)
     6ac:	ffc00000 	.word	0xffc00000
     6b0:	ffc00100 	.word	0xffc00100
     6b4:	ffffa51a 	.word	0xffffa51a
     6b8:	0000263c 	.word	0x0000263c
     6bc:	00000365 	.word	0x00000365
     6c0:	ffffa544 	.word	0xffffa544
     6c4:	ffffa51c 	.word	0xffffa51c

000006c8 <_osc32kctrl_init_sources>:
	calib = hri_osc32kctrl_read_OSCULP32K_CALIB_bf(hw);
	hri_osc32kctrl_write_OSCULP32K_reg(hw,
#if CONF_OSC32K_CALIB_ENABLE == 1
	                                   OSC32KCTRL_OSCULP32K_CALIB(CONF_OSC32K_CALIB)
#else
	                                   OSC32KCTRL_OSCULP32K_CALIB(calib)
     6c8:	21f8      	movs	r1, #248	; 0xf8
}

static inline hri_osc32kctrl_osculp32k_reg_t hri_osc32kctrl_read_OSCULP32K_CALIB_bf(const void *const hw)
{
	uint32_t tmp;
	tmp = ((Osc32kctrl *)hw)->OSCULP32K.reg;
     6ca:	4b04      	ldr	r3, [pc, #16]	; (6dc <_osc32kctrl_init_sources+0x14>)
     6cc:	0149      	lsls	r1, r1, #5
     6ce:	69da      	ldr	r2, [r3, #28]
     6d0:	400a      	ands	r2, r1
}

static inline void hri_osc32kctrl_write_OSCULP32K_reg(const void *const hw, hri_osc32kctrl_osculp32k_reg_t data)
{
	OSC32KCTRL_CRITICAL_SECTION_ENTER();
	((Osc32kctrl *)hw)->OSCULP32K.reg = data;
     6d2:	61da      	str	r2, [r3, #28]
	((Osc32kctrl *)hw)->RTCCTRL.reg = data;
     6d4:	2201      	movs	r2, #1
     6d6:	611a      	str	r2, [r3, #16]
		;
#endif
#endif
	hri_osc32kctrl_write_RTCCTRL_reg(hw, OSC32KCTRL_RTCCTRL_RTCSEL(CONF_RTCCTRL));
	(void)calib;
}
     6d8:	4770      	bx	lr
     6da:	46c0      	nop			; (mov r8, r8)
     6dc:	40001000 	.word	0x40001000

000006e0 <_oscctrl_init_sources>:
}

static inline void hri_oscctrl_write_OSC16MCTRL_reg(const void *const hw, hri_oscctrl_osc16mctrl_reg_t data)
{
	OSCCTRL_CRITICAL_SECTION_ENTER();
	((Oscctrl *)hw)->OSC16MCTRL.reg = data;
     6e0:	238a      	movs	r3, #138	; 0x8a
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
     6e2:	2038      	movs	r0, #56	; 0x38
     6e4:	2102      	movs	r1, #2
	((Oscctrl *)hw)->OSC16MCTRL.reg = data;
     6e6:	4a0a      	ldr	r2, [pc, #40]	; (710 <_oscctrl_init_sources+0x30>)
     6e8:	7513      	strb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
     6ea:	5c13      	ldrb	r3, [r2, r0]
     6ec:	4219      	tst	r1, r3
     6ee:	d1fc      	bne.n	6ea <_oscctrl_init_sources+0xa>
#endif
#endif

#if CONF_OSC16M_CONFIG == 1
#if CONF_OSC16M_ENABLE == 1
	while (!hri_oscctrl_get_STATUS_OSC16MRDY_bit(hw))
     6f0:	2110      	movs	r1, #16
	return (((Oscctrl *)hw)->STATUS.reg & OSCCTRL_STATUS_OSC16MRDY) >> OSCCTRL_STATUS_OSC16MRDY_Pos;
     6f2:	4a07      	ldr	r2, [pc, #28]	; (710 <_oscctrl_init_sources+0x30>)
     6f4:	68d3      	ldr	r3, [r2, #12]
     6f6:	4219      	tst	r1, r3
     6f8:	d0fc      	beq.n	6f4 <_oscctrl_init_sources+0x14>
	((Oscctrl *)hw)->OSC16MCTRL.reg |= OSCCTRL_OSC16MCTRL_ONDEMAND;
     6fa:	2180      	movs	r1, #128	; 0x80
     6fc:	7d13      	ldrb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
     6fe:	4804      	ldr	r0, [pc, #16]	; (710 <_oscctrl_init_sources+0x30>)
	((Oscctrl *)hw)->OSC16MCTRL.reg |= OSCCTRL_OSC16MCTRL_ONDEMAND;
     700:	430b      	orrs	r3, r1
     702:	7513      	strb	r3, [r2, #20]
	while (((Oscctrl *)hw)->DPLLSYNCBUSY.reg & reg) {
     704:	220e      	movs	r2, #14
     706:	3948      	subs	r1, #72	; 0x48
     708:	5c43      	ldrb	r3, [r0, r1]
     70a:	421a      	tst	r2, r3
     70c:	d1fc      	bne.n	708 <_oscctrl_init_sources+0x28>
#if CONF_OSC16M_ONDEMAND == 1
	hri_oscctrl_set_OSC16MCTRL_ONDEMAND_bit(hw);
#endif
#endif
	(void)hw;
}
     70e:	4770      	bx	lr
     710:	40000c00 	.word	0x40000c00

00000714 <_oscctrl_init_referenced_generators>:
#if CONF_DFLL_CONFIG == 1
	while (hri_gclk_read_SYNCBUSY_reg(GCLK))
		;
#endif
	(void)hw, (void)tmp;
}
     714:	4770      	bx	lr
     716:	46c0      	nop			; (mov r8, r8)

00000718 <_set_performance_level>:
}

static inline hri_pm_plcfg_reg_t hri_pm_get_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t mask)
{
	uint8_t tmp;
	tmp = ((Pm *)hw)->PLCFG.reg;
     718:	2280      	movs	r2, #128	; 0x80
	tmp = (tmp & PM_PLCFG_PLSEL(mask)) >> PM_PLCFG_PLSEL_Pos;
     71a:	2303      	movs	r3, #3
	tmp = ((Pm *)hw)->PLCFG.reg;
     71c:	05d2      	lsls	r2, r2, #23
     71e:	7891      	ldrb	r1, [r2, #2]
/**
 * \brief Set performance level
 */
void _set_performance_level(const uint8_t level)
{
	if (hri_pm_get_PLCFG_PLSEL_bf(PM, PM_PLCFG_PLSEL_Msk) != level) {
     720:	4019      	ands	r1, r3
     722:	4288      	cmp	r0, r1
     724:	d009      	beq.n	73a <_set_performance_level+0x22>
	((Pm *)hw)->INTFLAG.reg = mask;
     726:	21ff      	movs	r1, #255	; 0xff
     728:	7191      	strb	r1, [r2, #6]

static inline void hri_pm_write_PLCFG_PLSEL_bf(const void *const hw, hri_pm_plcfg_reg_t data)
{
	uint8_t tmp;
	PM_CRITICAL_SECTION_ENTER();
	tmp = ((Pm *)hw)->PLCFG.reg;
     72a:	7891      	ldrb	r1, [r2, #2]
	tmp &= ~PM_PLCFG_PLSEL_Msk;
     72c:	4399      	bics	r1, r3
	tmp |= PM_PLCFG_PLSEL(data);
     72e:	4003      	ands	r3, r0
     730:	430b      	orrs	r3, r1
	((Pm *)hw)->PLCFG.reg = tmp;
     732:	7093      	strb	r3, [r2, #2]
	return ((Pm *)hw)->INTFLAG.reg;
     734:	7993      	ldrb	r3, [r2, #6]
		hri_pm_clear_INTFLAG_reg(PM, 0xFF);
		hri_pm_write_PLCFG_PLSEL_bf(PM, level);
		while (!hri_pm_read_INTFLAG_reg(PM))
     736:	2b00      	cmp	r3, #0
     738:	d0fc      	beq.n	734 <_set_performance_level+0x1c>
			;
	}
}
     73a:	4770      	bx	lr

0000073c <_delay_init>:
 * \brief Initialize system time module
 */
void _system_time_init(void *const hw)
{
	(void)hw;
	SysTick->LOAD = (0xFFFFFF << SysTick_LOAD_RELOAD_Pos);
     73c:	4b02      	ldr	r3, [pc, #8]	; (748 <_delay_init+0xc>)
     73e:	4a03      	ldr	r2, [pc, #12]	; (74c <_delay_init+0x10>)
     740:	605a      	str	r2, [r3, #4]
	SysTick->CTRL = (1 << SysTick_CTRL_ENABLE_Pos) | (CONF_SYSTICK_TICKINT << SysTick_CTRL_TICKINT_Pos)
     742:	2205      	movs	r2, #5
     744:	601a      	str	r2, [r3, #0]
 * \brief Initialize delay functionality
 */
void _delay_init(void *const hw)
{
	_system_time_init(hw);
}
     746:	4770      	bx	lr
     748:	e000e010 	.word	0xe000e010
     74c:	00ffffff 	.word	0x00ffffff

00000750 <_delay_cycles>:
 * \brief Delay loop to delay n number of cycles
 */
void _delay_cycles(void *const hw, uint32_t cycles)
{
	(void)hw;
	uint8_t  n   = cycles >> 24;
     750:	0e0b      	lsrs	r3, r1, #24
{
     752:	b570      	push	{r4, r5, r6, lr}
	uint32_t buf = cycles;

	while (n--) {
     754:	1e5e      	subs	r6, r3, #1
     756:	b2f6      	uxtb	r6, r6
     758:	2b00      	cmp	r3, #0
     75a:	d013      	beq.n	784 <_delay_cycles+0x34>
		SysTick->LOAD = 0xFFFFFF;
		SysTick->VAL  = 0xFFFFFF;
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
     75c:	2080      	movs	r0, #128	; 0x80
	while (n--) {
     75e:	0034      	movs	r4, r6
		SysTick->LOAD = 0xFFFFFF;
     760:	4a0d      	ldr	r2, [pc, #52]	; (798 <_delay_cycles+0x48>)
     762:	4d0e      	ldr	r5, [pc, #56]	; (79c <_delay_cycles+0x4c>)
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
     764:	0240      	lsls	r0, r0, #9
		SysTick->LOAD = 0xFFFFFF;
     766:	6055      	str	r5, [r2, #4]
		SysTick->VAL  = 0xFFFFFF;
     768:	6095      	str	r5, [r2, #8]
		while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
     76a:	6813      	ldr	r3, [r2, #0]
     76c:	4203      	tst	r3, r0
     76e:	d0fc      	beq.n	76a <_delay_cycles+0x1a>
	while (n--) {
     770:	3c01      	subs	r4, #1
     772:	b2e4      	uxtb	r4, r4
     774:	2cff      	cmp	r4, #255	; 0xff
     776:	d1f6      	bne.n	766 <_delay_cycles+0x16>
     778:	0633      	lsls	r3, r6, #24
     77a:	1af6      	subs	r6, r6, r3
     77c:	4b08      	ldr	r3, [pc, #32]	; (7a0 <_delay_cycles+0x50>)
     77e:	469c      	mov	ip, r3
     780:	4461      	add	r1, ip
     782:	1871      	adds	r1, r6, r1
			;
		buf -= 0xFFFFFF;
	}

	SysTick->LOAD = buf;
     784:	4a04      	ldr	r2, [pc, #16]	; (798 <_delay_cycles+0x48>)
     786:	6051      	str	r1, [r2, #4]
	SysTick->VAL  = buf;
     788:	6091      	str	r1, [r2, #8]
	while (!(SysTick->CTRL & SysTick_CTRL_COUNTFLAG_Msk))
     78a:	2180      	movs	r1, #128	; 0x80
     78c:	0249      	lsls	r1, r1, #9
     78e:	6813      	ldr	r3, [r2, #0]
     790:	420b      	tst	r3, r1
     792:	d0fc      	beq.n	78e <_delay_cycles+0x3e>
		;
}
     794:	bd70      	pop	{r4, r5, r6, pc}
     796:	46c0      	nop			; (mov r8, r8)
     798:	e000e010 	.word	0xe000e010
     79c:	00ffffff 	.word	0x00ffffff
     7a0:	ff000001 	.word	0xff000001

000007a4 <aes_measurement>:
static uint8_t iv[16] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f };
static uint8_t iv2[16] = { 0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f }; /*(This is same but needed for decryption. Note: AES Module was not doing decryption without iv2  )*/


void aes_measurement(void)
{
     7a4:	b5f0      	push	{r4, r5, r6, r7, lr}
     7a6:	46de      	mov	lr, fp
     7a8:	4657      	mov	r7, sl
     7aa:	464e      	mov	r6, r9
     7ac:	4645      	mov	r5, r8
     7ae:	b5e0      	push	{r5, r6, r7, lr}
     7b0:	4c49      	ldr	r4, [pc, #292]	; (8d8 <aes_measurement+0x134>)
	Aes enc;
	Aes dec;
	
	
	// Allocate buffer memory
	uint8_t *input = malloc(sizeof(uint8_t) * MAX_NUM_BYTES);
     7b2:	4b4a      	ldr	r3, [pc, #296]	; (8dc <aes_measurement+0x138>)
{
     7b4:	44a5      	add	sp, r4
	uint8_t *input = malloc(sizeof(uint8_t) * MAX_NUM_BYTES);
     7b6:	484a      	ldr	r0, [pc, #296]	; (8e0 <aes_measurement+0x13c>)
     7b8:	4798      	blx	r3
	
	// Allocate buffer memory
	uint8_t *output = malloc(sizeof(uint8_t) * MAX_NUM_BYTES);
	//uint8_t output[MAX_NUM_BYTES];

    delay_ms(10);
     7ba:	4e4a      	ldr	r6, [pc, #296]	; (8e4 <aes_measurement+0x140>)
	uint8_t *input = malloc(sizeof(uint8_t) * MAX_NUM_BYTES);
     7bc:	0005      	movs	r5, r0
    delay_ms(10);
     7be:	200a      	movs	r0, #10
     7c0:	47b0      	blx	r6
     7c2:	4a49      	ldr	r2, [pc, #292]	; (8e8 <aes_measurement+0x144>)
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     7c4:	27c0      	movs	r7, #192	; 0xc0
     7c6:	4693      	mov	fp, r2
     7c8:	4a48      	ldr	r2, [pc, #288]	; (8ec <aes_measurement+0x148>)

	for (size_t num_bytes = MIN_NUM_BYTES; num_bytes <= MAX_NUM_BYTES; num_bytes += STEP_SIZE) {
     7ca:	2310      	movs	r3, #16
     7cc:	4692      	mov	sl, r2
     7ce:	05ff      	lsls	r7, r7, #23
{
     7d0:	2200      	movs	r2, #0
     7d2:	0014      	movs	r4, r2
		
		// Fill with sequential data.
		for (size_t byte = 0; byte < num_bytes; byte++) {
			input[byte] = byte; // 0x00 to write 0's OR 0xFF to write 1's.
     7d4:	552c      	strb	r4, [r5, r4]
		for (size_t byte = 0; byte < num_bytes; byte++) {
     7d6:	3401      	adds	r4, #1
     7d8:	429c      	cmp	r4, r3
     7da:	d1fb      	bne.n	7d4 <aes_measurement+0x30>
			//input[byte] = 0xfa;
		}
			
		wc_AesSetKey(&enc, key, sizeof(key), iv, AES_ENCRYPTION);
     7dc:	2300      	movs	r3, #0
     7de:	46a0      	mov	r8, r4
     7e0:	2220      	movs	r2, #32
     7e2:	4651      	mov	r1, sl
     7e4:	9403      	str	r4, [sp, #12]
     7e6:	9300      	str	r3, [sp, #0]
     7e8:	4c41      	ldr	r4, [pc, #260]	; (8f0 <aes_measurement+0x14c>)
     7ea:	465b      	mov	r3, fp
     7ec:	a804      	add	r0, sp, #16
     7ee:	47a0      	blx	r4

		// Start encryption
		START_MEASURE(DGI_GPIO2);
     7f0:	2002      	movs	r0, #2
     7f2:	47b0      	blx	r6
     7f4:	2380      	movs	r3, #128	; 0x80
     7f6:	035b      	lsls	r3, r3, #13
     7f8:	61bb      	str	r3, [r7, #24]
     7fa:	4699      	mov	r9, r3
		//io_write(terminal_io, "Encryption", sizeof(uint8_t)*10);
		/*encrypt*/		
		wc_AesCbcEncrypt(&enc, input, input, num_bytes);
     7fc:	4643      	mov	r3, r8
     7fe:	002a      	movs	r2, r5
     800:	0029      	movs	r1, r5
     802:	4c3c      	ldr	r4, [pc, #240]	; (8f4 <aes_measurement+0x150>)
     804:	a804      	add	r0, sp, #16
     806:	9303      	str	r3, [sp, #12]
     808:	47a0      	blx	r4
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     80a:	464b      	mov	r3, r9
		STOP_MEASURE(DGI_GPIO2);
     80c:	2002      	movs	r0, #2
     80e:	617b      	str	r3, [r7, #20]
     810:	47b0      	blx	r6
		
		/* Save to flash
		   Put data at end of flash.
	    **/		
		START_MEASURE(DGI_GPIO3);
     812:	2002      	movs	r0, #2
     814:	47b0      	blx	r6
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     816:	2380      	movs	r3, #128	; 0x80
		//********************************************** Solution - 1 @ To write on emulation (RWW) Area
		if (_rww_flash_write(&FLASH_0.dev, NVMCTRL_RWW_EEPROM_ADDR, input, num_bytes ) != ERR_NONE) {
     818:	2180      	movs	r1, #128	; 0x80
     81a:	039b      	lsls	r3, r3, #14
     81c:	61bb      	str	r3, [r7, #24]
     81e:	4698      	mov	r8, r3
     820:	002a      	movs	r2, r5
     822:	9b03      	ldr	r3, [sp, #12]
     824:	03c9      	lsls	r1, r1, #15
     826:	4834      	ldr	r0, [pc, #208]	; (8f8 <aes_measurement+0x154>)
     828:	4c34      	ldr	r4, [pc, #208]	; (8fc <aes_measurement+0x158>)
     82a:	47a0      	blx	r4
     82c:	2800      	cmp	r0, #0
     82e:	d151      	bne.n	8d4 <aes_measurement+0x130>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     830:	4643      	mov	r3, r8
		// ------------------------------------------- To write page by page use the code below (Avoid loops)---------
		//for (uint32_t page_index = 0; page_index * FLASH_PAGE_SIZE < num_bytes; page_index += 1) {
			/* Write data to flash */
			//flash_write(&FLASH_0, target_addr + page_index * FLASH_PAGE_SIZE, &input[page_index * FLASH_PAGE_SIZE], FLASH_PAGE_SIZE);
		//}
		STOP_MEASURE(DGI_GPIO3);
     832:	2002      	movs	r0, #2
     834:	617b      	str	r3, [r7, #20]
     836:	47b0      	blx	r6
		
		SLEEP
     838:	2002      	movs	r0, #2
     83a:	47b0      	blx	r6
     83c:	9c03      	ldr	r4, [sp, #12]
     83e:	21fe      	movs	r1, #254	; 0xfe
     840:	0022      	movs	r2, r4
     842:	4b2f      	ldr	r3, [pc, #188]	; (900 <aes_measurement+0x15c>)
     844:	0028      	movs	r0, r5
     846:	4798      	blx	r3
		for (size_t byte = 0; byte < num_bytes; byte++) {
			input[byte] = 0xfe;
		}

		// Start reading from flash
		START_MEASURE(DGI_GPIO3);
     848:	2002      	movs	r0, #2
     84a:	47b0      	blx	r6
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     84c:	4643      	mov	r3, r8
		
		/* Read data from RWWEE flash (Solution 1) */
		if (_rww_flash_read(&FLASH_0.dev, NVMCTRL_RWW_EEPROM_ADDR, input, num_bytes) != ERR_NONE) {
     84e:	2180      	movs	r1, #128	; 0x80
     850:	61bb      	str	r3, [r7, #24]
     852:	002a      	movs	r2, r5
     854:	0023      	movs	r3, r4
     856:	03c9      	lsls	r1, r1, #15
     858:	4827      	ldr	r0, [pc, #156]	; (8f8 <aes_measurement+0x154>)
     85a:	4c2a      	ldr	r4, [pc, #168]	; (904 <aes_measurement+0x160>)
     85c:	47a0      	blx	r4
     85e:	2800      	cmp	r0, #0
     860:	d139      	bne.n	8d6 <aes_measurement+0x132>
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     862:	4643      	mov	r3, r8
			; /* Trap here when flash read error happen */
		}
		
		/* Read data from flash (Solution 2) */
		//flash_read(&FLASH_0, target_addr, output, num_bytes);
		STOP_MEASURE(DGI_GPIO3);
     864:	2002      	movs	r0, #2
     866:	617b      	str	r3, [r7, #20]
     868:	47b0      	blx	r6
		
	
		wc_AesSetKey(&dec, key, sizeof(key), iv2, AES_DECRYPTION);
     86a:	2201      	movs	r2, #1
     86c:	465b      	mov	r3, fp
     86e:	4651      	mov	r1, sl
     870:	3310      	adds	r3, #16
     872:	9200      	str	r2, [sp, #0]
     874:	4c1e      	ldr	r4, [pc, #120]	; (8f0 <aes_measurement+0x14c>)
     876:	321f      	adds	r2, #31
     878:	a84b      	add	r0, sp, #300	; 0x12c
     87a:	47a0      	blx	r4

		// Start decryption
		START_MEASURE(DGI_GPIO2);
     87c:	2002      	movs	r0, #2
     87e:	47b0      	blx	r6
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     880:	464b      	mov	r3, r9
     882:	61bb      	str	r3, [r7, #24]
		/*decrypt*/
		wc_AesCbcDecrypt(&dec, input, input,num_bytes);
     884:	002a      	movs	r2, r5
     886:	9b03      	ldr	r3, [sp, #12]
     888:	0029      	movs	r1, r5
     88a:	a84b      	add	r0, sp, #300	; 0x12c
     88c:	4c1e      	ldr	r4, [pc, #120]	; (908 <aes_measurement+0x164>)
     88e:	47a0      	blx	r4
	((Port *)hw)->Group[submodule_index].OUTCLR.reg = mask;
     890:	464b      	mov	r3, r9
		STOP_MEASURE(DGI_GPIO2);
     892:	2002      	movs	r0, #2
     894:	617b      	str	r3, [r7, #20]
     896:	47b0      	blx	r6
	for (size_t num_bytes = MIN_NUM_BYTES; num_bytes <= MAX_NUM_BYTES; num_bytes += STEP_SIZE) {
     898:	22bc      	movs	r2, #188	; 0xbc
     89a:	9b03      	ldr	r3, [sp, #12]
     89c:	0152      	lsls	r2, r2, #5
     89e:	3310      	adds	r3, #16
     8a0:	4293      	cmp	r3, r2
     8a2:	d195      	bne.n	7d0 <aes_measurement+0x2c>
		
	}
	
	
		// Free the memory
		free(input);
     8a4:	0028      	movs	r0, r5
     8a6:	4b19      	ldr	r3, [pc, #100]	; (90c <aes_measurement+0x168>)
     8a8:	4798      	blx	r3

		END_MEASUREMENT;
     8aa:	200a      	movs	r0, #10
     8ac:	47b0      	blx	r6
	((Port *)hw)->Group[submodule_index].OUTSET.reg = mask;
     8ae:	2202      	movs	r2, #2
     8b0:	2398      	movs	r3, #152	; 0x98
     8b2:	50fa      	str	r2, [r7, r3]
     8b4:	2380      	movs	r3, #128	; 0x80
     8b6:	025b      	lsls	r3, r3, #9
     8b8:	61bb      	str	r3, [r7, #24]
     8ba:	464b      	mov	r3, r9
     8bc:	61bb      	str	r3, [r7, #24]
     8be:	4643      	mov	r3, r8
     8c0:	61bb      	str	r3, [r7, #24]
			
	
}
     8c2:	2393      	movs	r3, #147	; 0x93
     8c4:	009b      	lsls	r3, r3, #2
     8c6:	449d      	add	sp, r3
     8c8:	bc3c      	pop	{r2, r3, r4, r5}
     8ca:	4690      	mov	r8, r2
     8cc:	4699      	mov	r9, r3
     8ce:	46a2      	mov	sl, r4
     8d0:	46ab      	mov	fp, r5
     8d2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8d4:	e7fe      	b.n	8d4 <aes_measurement+0x130>
     8d6:	e7fe      	b.n	8d6 <aes_measurement+0x132>
     8d8:	fffffdb4 	.word	0xfffffdb4
     8dc:	00002461 	.word	0x00002461
     8e0:	00001770 	.word	0x00001770
     8e4:	000002e5 	.word	0x000002e5
     8e8:	20000000 	.word	0x20000000
     8ec:	0000265c 	.word	0x0000265c
     8f0:	00000929 	.word	0x00000929
     8f4:	00001815 	.word	0x00001815
     8f8:	200000b4 	.word	0x200000b4
     8fc:	00000511 	.word	0x00000511
     900:	0000249b 	.word	0x0000249b
     904:	000004a1 	.word	0x000004a1
     908:	00001e65 	.word	0x00001e65
     90c:	00002475 	.word	0x00002475

00000910 <main>:

int main(void)
{
     910:	b510      	push	{r4, lr}
	atmel_start_init();
     912:	4b03      	ldr	r3, [pc, #12]	; (920 <main+0x10>)
     914:	4798      	blx	r3

	aes_measurement();
     916:	4b03      	ldr	r3, [pc, #12]	; (924 <main+0x14>)
     918:	4798      	blx	r3
	/*while (true) {
		delay_ms(500);
		gpio_toggle_pin_level(LED0);
	}*/
	
     91a:	2000      	movs	r0, #0
     91c:	bd10      	pop	{r4, pc}
     91e:	46c0      	nop			; (mov r8, r8)
     920:	00000115 	.word	0x00000115
     924:	000007a5 	.word	0x000007a5

00000928 <wc_AesSetKey>:
        return wc_AesSetIV(aes, iv);
    }

    int wc_AesSetKey(Aes* aes, const byte* userKey, word32 keylen,
        const byte* iv, int dir)
    {
     928:	b5f0      	push	{r4, r5, r6, r7, lr}
     92a:	4657      	mov	r7, sl
     92c:	4645      	mov	r5, r8
     92e:	46de      	mov	lr, fp
     930:	464e      	mov	r6, r9
     932:	b5e0      	push	{r5, r6, r7, lr}
     934:	b087      	sub	sp, #28
     936:	0007      	movs	r7, r0
     938:	0015      	movs	r5, r2
     93a:	9302      	str	r3, [sp, #8]
            /* set local values */
            userKey = local;
            keylen = localSz;
        }
    #endif
        if (aes == NULL ||
     93c:	2800      	cmp	r0, #0
     93e:	d008      	beq.n	952 <wc_AesSetKey+0x2a>
     940:	2a10      	cmp	r2, #16
     942:	d101      	bne.n	948 <wc_AesSetKey+0x20>
     944:	f000 fc56 	bl	11f4 <wc_AesSetKey+0x8cc>
                !((keylen == 16) || (keylen == 24) || (keylen == 32))) {
     948:	0013      	movs	r3, r2
     94a:	2208      	movs	r2, #8
     94c:	3b18      	subs	r3, #24
     94e:	4393      	bics	r3, r2
     950:	d008      	beq.n	964 <wc_AesSetKey+0x3c>
            return BAD_FUNC_ARG;
     952:	20ad      	movs	r0, #173	; 0xad
     954:	4240      	negs	r0, r0
    #endif
    #ifdef WOLFSSL_IMX6_CAAM_BLOB
        ForceZero(local, sizeof(local));
    #endif
        return ret;
    }
     956:	b007      	add	sp, #28
     958:	bc3c      	pop	{r2, r3, r4, r5}
     95a:	4690      	mov	r8, r2
     95c:	4699      	mov	r9, r3
     95e:	46a2      	mov	sl, r4
     960:	46ab      	mov	fp, r5
     962:	bdf0      	pop	{r4, r5, r6, r7, pc}
        aes->keylen = keylen;
     964:	33f4      	adds	r3, #244	; 0xf4
        aes->rounds = keylen/4 + 6;
     966:	08ac      	lsrs	r4, r5, #2
        aes->keylen = keylen;
     968:	50c5      	str	r5, [r0, r3]
        aes->rounds = keylen/4 + 6;
     96a:	1da2      	adds	r2, r4, #6
     96c:	3b04      	subs	r3, #4
     96e:	50c2      	str	r2, [r0, r3]
        XMEMCPY(rk, userKey, keylen);
     970:	4bf4      	ldr	r3, [pc, #976]	; (d44 <wc_AesSetKey+0x41c>)
     972:	002a      	movs	r2, r5
        word32 *rk = aes->key;
     974:	4680      	mov	r8, r0
        XMEMCPY(rk, userKey, keylen);
     976:	9303      	str	r3, [sp, #12]
     978:	4798      	blx	r3
WC_STATIC WC_INLINE void ByteReverseWords(word32* out, const word32* in,
                                    word32 byteCount)
{
    word32 count = byteCount/(word32)sizeof(word32), i;

    for (i = 0; i < count; i++)
     97a:	2c00      	cmp	r4, #0
     97c:	d025      	beq.n	9ca <wc_AesSetKey+0xa2>
     97e:	683b      	ldr	r3, [r7, #0]
     980:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     982:	603b      	str	r3, [r7, #0]
    for (i = 0; i < count; i++)
     984:	2c01      	cmp	r4, #1
     986:	d020      	beq.n	9ca <wc_AesSetKey+0xa2>
     988:	687b      	ldr	r3, [r7, #4]
     98a:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     98c:	607b      	str	r3, [r7, #4]
    for (i = 0; i < count; i++)
     98e:	2c02      	cmp	r4, #2
     990:	d01b      	beq.n	9ca <wc_AesSetKey+0xa2>
     992:	68bb      	ldr	r3, [r7, #8]
     994:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     996:	60bb      	str	r3, [r7, #8]
    for (i = 0; i < count; i++)
     998:	2c03      	cmp	r4, #3
     99a:	d016      	beq.n	9ca <wc_AesSetKey+0xa2>
     99c:	68fb      	ldr	r3, [r7, #12]
     99e:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     9a0:	60fb      	str	r3, [r7, #12]
    for (i = 0; i < count; i++)
     9a2:	2c04      	cmp	r4, #4
     9a4:	d011      	beq.n	9ca <wc_AesSetKey+0xa2>
     9a6:	693b      	ldr	r3, [r7, #16]
     9a8:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     9aa:	613b      	str	r3, [r7, #16]
    for (i = 0; i < count; i++)
     9ac:	2c05      	cmp	r4, #5
     9ae:	d00c      	beq.n	9ca <wc_AesSetKey+0xa2>
     9b0:	697b      	ldr	r3, [r7, #20]
     9b2:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     9b4:	617b      	str	r3, [r7, #20]
    for (i = 0; i < count; i++)
     9b6:	2c06      	cmp	r4, #6
     9b8:	d007      	beq.n	9ca <wc_AesSetKey+0xa2>
     9ba:	69bb      	ldr	r3, [r7, #24]
     9bc:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     9be:	61bb      	str	r3, [r7, #24]
    for (i = 0; i < count; i++)
     9c0:	2c08      	cmp	r4, #8
     9c2:	d102      	bne.n	9ca <wc_AesSetKey+0xa2>
     9c4:	69fb      	ldr	r3, [r7, #28]
     9c6:	ba1b      	rev	r3, r3
        out[i] = ByteReverseWord32(in[i]);
     9c8:	61fb      	str	r3, [r7, #28]
        switch (keylen) {
     9ca:	2d18      	cmp	r5, #24
     9cc:	d101      	bne.n	9d2 <wc_AesSetKey+0xaa>
     9ce:	f000 fc2f 	bl	1230 <wc_AesSetKey+0x908>
     9d2:	2d20      	cmp	r5, #32
     9d4:	d100      	bne.n	9d8 <wc_AesSetKey+0xb0>
     9d6:	e36b      	b.n	10b0 <wc_AesSetKey+0x788>
     9d8:	2d10      	cmp	r5, #16
     9da:	d1ba      	bne.n	952 <wc_AesSetKey+0x2a>
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     9dc:	21ff      	movs	r1, #255	; 0xff
     9de:	4bda      	ldr	r3, [pc, #872]	; (d48 <wc_AesSetKey+0x420>)
     9e0:	000a      	movs	r2, r1
     9e2:	469b      	mov	fp, r3
     9e4:	68fc      	ldr	r4, [r7, #12]
     9e6:	9301      	str	r3, [sp, #4]
     9e8:	4022      	ands	r2, r4
     9ea:	0092      	lsls	r2, r2, #2
     9ec:	445a      	add	r2, fp
     9ee:	6a95      	ldr	r5, [r2, #40]	; 0x28
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     9f0:	2280      	movs	r2, #128	; 0x80
     9f2:	683b      	ldr	r3, [r7, #0]
     9f4:	0452      	lsls	r2, r2, #17
     9f6:	405a      	eors	r2, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     9f8:	2380      	movs	r3, #128	; 0x80
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     9fa:	26ff      	movs	r6, #255	; 0xff
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     9fc:	009b      	lsls	r3, r3, #2
     9fe:	469c      	mov	ip, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a00:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a02:	0e20      	lsrs	r0, r4, #24
     a04:	3001      	adds	r0, #1
     a06:	30ff      	adds	r0, #255	; 0xff
     a08:	0080      	lsls	r0, r0, #2
     a0a:	4458      	add	r0, fp
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     a0c:	0236      	lsls	r6, r6, #8
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a0e:	6a80      	ldr	r0, [r0, #40]	; 0x28
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     a10:	4035      	ands	r5, r6
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a12:	4008      	ands	r0, r1
     a14:	406a      	eors	r2, r5
     a16:	4042      	eors	r2, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a18:	0c20      	lsrs	r0, r4, #16
     a1a:	4008      	ands	r0, r1
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a1c:	009b      	lsls	r3, r3, #2
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a1e:	4460      	add	r0, ip
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a20:	469c      	mov	ip, r3
     a22:	25ff      	movs	r5, #255	; 0xff
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a24:	0080      	lsls	r0, r0, #2
     a26:	4458      	add	r0, fp
     a28:	6a80      	ldr	r0, [r0, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a2a:	042d      	lsls	r5, r5, #16
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a2c:	0e00      	lsrs	r0, r0, #24
     a2e:	0600      	lsls	r0, r0, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a30:	4042      	eors	r2, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a32:	0a20      	lsrs	r0, r4, #8
     a34:	4008      	ands	r0, r1
     a36:	4460      	add	r0, ip
     a38:	0080      	lsls	r0, r0, #2
     a3a:	4458      	add	r0, fp
     a3c:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[5] = rk[1] ^ rk[4];
     a3e:	687b      	ldr	r3, [r7, #4]
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a40:	4028      	ands	r0, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a42:	4042      	eors	r2, r0
                rk[5] = rk[1] ^ rk[4];
     a44:	4053      	eors	r3, r2
     a46:	4699      	mov	r9, r3
                rk[6] = rk[2] ^ rk[5];
     a48:	4648      	mov	r0, r9
                rk[5] = rk[1] ^ rk[4];
     a4a:	617b      	str	r3, [r7, #20]
                rk[6] = rk[2] ^ rk[5];
     a4c:	68bb      	ldr	r3, [r7, #8]
                rk[4] = rk[0] ^
     a4e:	613a      	str	r2, [r7, #16]
                rk[6] = rk[2] ^ rk[5];
     a50:	4043      	eors	r3, r0
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     a52:	0008      	movs	r0, r1
                rk[7] = rk[3] ^ rk[6];
     a54:	405c      	eors	r4, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     a56:	4020      	ands	r0, r4
     a58:	0080      	lsls	r0, r0, #2
     a5a:	4458      	add	r0, fp
     a5c:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     a5e:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     a60:	4030      	ands	r0, r6
     a62:	4682      	mov	sl, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a64:	2080      	movs	r0, #128	; 0x80
                rk[6] = rk[2] ^ rk[5];
     a66:	61bb      	str	r3, [r7, #24]
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a68:	4653      	mov	r3, sl
     a6a:	0480      	lsls	r0, r0, #18
     a6c:	4050      	eors	r0, r2
     a6e:	4058      	eors	r0, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a70:	2380      	movs	r3, #128	; 0x80
     a72:	009b      	lsls	r3, r3, #2
     a74:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a76:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a78:	0e22      	lsrs	r2, r4, #24
     a7a:	3201      	adds	r2, #1
     a7c:	32ff      	adds	r2, #255	; 0xff
     a7e:	0092      	lsls	r2, r2, #2
     a80:	445a      	add	r2, fp
     a82:	6a92      	ldr	r2, [r2, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a84:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     a86:	400a      	ands	r2, r1
     a88:	4050      	eors	r0, r2
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a8a:	0c22      	lsrs	r2, r4, #16
     a8c:	400a      	ands	r2, r1
     a8e:	4452      	add	r2, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     a90:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     a92:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a94:	0092      	lsls	r2, r2, #2
     a96:	445a      	add	r2, fp
     a98:	6a92      	ldr	r2, [r2, #40]	; 0x28
                rk[7] = rk[3] ^ rk[6];
     a9a:	61fc      	str	r4, [r7, #28]
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     a9c:	0e12      	lsrs	r2, r2, #24
     a9e:	0612      	lsls	r2, r2, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     aa0:	4050      	eors	r0, r2
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     aa2:	0a22      	lsrs	r2, r4, #8
     aa4:	400a      	ands	r2, r1
     aa6:	4452      	add	r2, sl
     aa8:	0092      	lsls	r2, r2, #2
     aaa:	445a      	add	r2, fp
     aac:	6a92      	ldr	r2, [r2, #40]	; 0x28
     aae:	402a      	ands	r2, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     ab0:	4050      	eors	r0, r2
                rk[5] = rk[1] ^ rk[4];
     ab2:	4043      	eors	r3, r0
     ab4:	4699      	mov	r9, r3
     ab6:	627b      	str	r3, [r7, #36]	; 0x24
                rk[6] = rk[2] ^ rk[5];
     ab8:	464a      	mov	r2, r9
     aba:	4663      	mov	r3, ip
     abc:	4053      	eors	r3, r2
                rk[7] = rk[3] ^ rk[6];
     abe:	001a      	movs	r2, r3
     ac0:	4062      	eors	r2, r4
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     ac2:	000c      	movs	r4, r1
     ac4:	4014      	ands	r4, r2
     ac6:	00a4      	lsls	r4, r4, #2
     ac8:	445c      	add	r4, fp
     aca:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     acc:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     ace:	4034      	ands	r4, r6
     ad0:	46a2      	mov	sl, r4
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     ad2:	2480      	movs	r4, #128	; 0x80
                rk[6] = rk[2] ^ rk[5];
     ad4:	62bb      	str	r3, [r7, #40]	; 0x28
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     ad6:	4653      	mov	r3, sl
     ad8:	04e4      	lsls	r4, r4, #19
     ada:	4044      	eors	r4, r0
     adc:	405c      	eors	r4, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     ade:	2380      	movs	r3, #128	; 0x80
     ae0:	009b      	lsls	r3, r3, #2
     ae2:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     ae4:	23c0      	movs	r3, #192	; 0xc0
                rk[4] = rk[0] ^
     ae6:	6238      	str	r0, [r7, #32]
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     ae8:	0e10      	lsrs	r0, r2, #24
     aea:	3001      	adds	r0, #1
     aec:	30ff      	adds	r0, #255	; 0xff
     aee:	0080      	lsls	r0, r0, #2
     af0:	4458      	add	r0, fp
     af2:	6a80      	ldr	r0, [r0, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     af4:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     af6:	4008      	ands	r0, r1
     af8:	4044      	eors	r4, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     afa:	0c10      	lsrs	r0, r2, #16
     afc:	4008      	ands	r0, r1
     afe:	4450      	add	r0, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     b00:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     b02:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     b04:	0080      	lsls	r0, r0, #2
     b06:	4458      	add	r0, fp
     b08:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[7] = rk[3] ^ rk[6];
     b0a:	62fa      	str	r2, [r7, #44]	; 0x2c
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     b0c:	0e00      	lsrs	r0, r0, #24
     b0e:	0600      	lsls	r0, r0, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b10:	4044      	eors	r4, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     b12:	0a10      	lsrs	r0, r2, #8
     b14:	4008      	ands	r0, r1
     b16:	4450      	add	r0, sl
     b18:	0080      	lsls	r0, r0, #2
     b1a:	4458      	add	r0, fp
     b1c:	6a80      	ldr	r0, [r0, #40]	; 0x28
     b1e:	4028      	ands	r0, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b20:	4044      	eors	r4, r0
                rk[5] = rk[1] ^ rk[4];
     b22:	4063      	eors	r3, r4
     b24:	4699      	mov	r9, r3
     b26:	637b      	str	r3, [r7, #52]	; 0x34
                rk[6] = rk[2] ^ rk[5];
     b28:	4648      	mov	r0, r9
     b2a:	4663      	mov	r3, ip
     b2c:	4043      	eors	r3, r0
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     b2e:	0008      	movs	r0, r1
                rk[7] = rk[3] ^ rk[6];
     b30:	405a      	eors	r2, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     b32:	4010      	ands	r0, r2
     b34:	0080      	lsls	r0, r0, #2
     b36:	4458      	add	r0, fp
     b38:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     b3a:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     b3c:	4030      	ands	r0, r6
     b3e:	4682      	mov	sl, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b40:	2080      	movs	r0, #128	; 0x80
                rk[6] = rk[2] ^ rk[5];
     b42:	63bb      	str	r3, [r7, #56]	; 0x38
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b44:	4653      	mov	r3, sl
     b46:	0500      	lsls	r0, r0, #20
                rk[4] = rk[0] ^
     b48:	633c      	str	r4, [r7, #48]	; 0x30
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b4a:	4044      	eors	r4, r0
     b4c:	405c      	eors	r4, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     b4e:	2380      	movs	r3, #128	; 0x80
     b50:	009b      	lsls	r3, r3, #2
     b52:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     b54:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b56:	0e10      	lsrs	r0, r2, #24
     b58:	3001      	adds	r0, #1
     b5a:	30ff      	adds	r0, #255	; 0xff
     b5c:	0080      	lsls	r0, r0, #2
     b5e:	4458      	add	r0, fp
     b60:	6a80      	ldr	r0, [r0, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     b62:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b64:	4008      	ands	r0, r1
     b66:	4044      	eors	r4, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     b68:	0c10      	lsrs	r0, r2, #16
     b6a:	4008      	ands	r0, r1
     b6c:	4450      	add	r0, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     b6e:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     b70:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     b72:	0080      	lsls	r0, r0, #2
     b74:	4458      	add	r0, fp
                rk[7] = rk[3] ^ rk[6];
     b76:	63fa      	str	r2, [r7, #60]	; 0x3c
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     b78:	6a80      	ldr	r0, [r0, #40]	; 0x28
     b7a:	0e00      	lsrs	r0, r0, #24
     b7c:	0600      	lsls	r0, r0, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b7e:	4044      	eors	r4, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     b80:	0a10      	lsrs	r0, r2, #8
     b82:	4008      	ands	r0, r1
     b84:	4450      	add	r0, sl
     b86:	0080      	lsls	r0, r0, #2
     b88:	4458      	add	r0, fp
     b8a:	6a80      	ldr	r0, [r0, #40]	; 0x28
     b8c:	4028      	ands	r0, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     b8e:	4044      	eors	r4, r0
                rk[5] = rk[1] ^ rk[4];
     b90:	4063      	eors	r3, r4
     b92:	4699      	mov	r9, r3
     b94:	647b      	str	r3, [r7, #68]	; 0x44
                rk[6] = rk[2] ^ rk[5];
     b96:	4648      	mov	r0, r9
     b98:	4663      	mov	r3, ip
     b9a:	4043      	eors	r3, r0
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     b9c:	0008      	movs	r0, r1
                rk[7] = rk[3] ^ rk[6];
     b9e:	405a      	eors	r2, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     ba0:	4010      	ands	r0, r2
     ba2:	0080      	lsls	r0, r0, #2
     ba4:	4458      	add	r0, fp
     ba6:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     ba8:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     baa:	4030      	ands	r0, r6
     bac:	4682      	mov	sl, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bae:	2080      	movs	r0, #128	; 0x80
                rk[6] = rk[2] ^ rk[5];
     bb0:	64bb      	str	r3, [r7, #72]	; 0x48
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bb2:	4653      	mov	r3, sl
     bb4:	0540      	lsls	r0, r0, #21
                rk[4] = rk[0] ^
     bb6:	643c      	str	r4, [r7, #64]	; 0x40
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bb8:	4044      	eors	r4, r0
     bba:	405c      	eors	r4, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     bbc:	2380      	movs	r3, #128	; 0x80
     bbe:	009b      	lsls	r3, r3, #2
     bc0:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     bc2:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bc4:	0e10      	lsrs	r0, r2, #24
     bc6:	3001      	adds	r0, #1
     bc8:	30ff      	adds	r0, #255	; 0xff
     bca:	0080      	lsls	r0, r0, #2
     bcc:	4458      	add	r0, fp
     bce:	6a80      	ldr	r0, [r0, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     bd0:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bd2:	4008      	ands	r0, r1
     bd4:	4044      	eors	r4, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     bd6:	0c10      	lsrs	r0, r2, #16
     bd8:	4008      	ands	r0, r1
     bda:	4450      	add	r0, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     bdc:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     bde:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     be0:	0080      	lsls	r0, r0, #2
     be2:	4458      	add	r0, fp
     be4:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[7] = rk[3] ^ rk[6];
     be6:	64fa      	str	r2, [r7, #76]	; 0x4c
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     be8:	0e00      	lsrs	r0, r0, #24
     bea:	0600      	lsls	r0, r0, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bec:	4044      	eors	r4, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     bee:	0a10      	lsrs	r0, r2, #8
     bf0:	4008      	ands	r0, r1
     bf2:	4450      	add	r0, sl
     bf4:	0080      	lsls	r0, r0, #2
     bf6:	4458      	add	r0, fp
     bf8:	6a80      	ldr	r0, [r0, #40]	; 0x28
     bfa:	4028      	ands	r0, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     bfc:	4044      	eors	r4, r0
                rk[5] = rk[1] ^ rk[4];
     bfe:	4063      	eors	r3, r4
     c00:	4699      	mov	r9, r3
     c02:	657b      	str	r3, [r7, #84]	; 0x54
                rk[6] = rk[2] ^ rk[5];
     c04:	4648      	mov	r0, r9
     c06:	4663      	mov	r3, ip
     c08:	4043      	eors	r3, r0
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     c0a:	0008      	movs	r0, r1
                rk[7] = rk[3] ^ rk[6];
     c0c:	405a      	eors	r2, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     c0e:	4010      	ands	r0, r2
     c10:	0080      	lsls	r0, r0, #2
     c12:	4458      	add	r0, fp
     c14:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     c16:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     c18:	4030      	ands	r0, r6
     c1a:	4682      	mov	sl, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c1c:	2080      	movs	r0, #128	; 0x80
                rk[6] = rk[2] ^ rk[5];
     c1e:	65bb      	str	r3, [r7, #88]	; 0x58
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c20:	4653      	mov	r3, sl
     c22:	0580      	lsls	r0, r0, #22
                rk[4] = rk[0] ^
     c24:	653c      	str	r4, [r7, #80]	; 0x50
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c26:	4044      	eors	r4, r0
     c28:	405c      	eors	r4, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     c2a:	2380      	movs	r3, #128	; 0x80
     c2c:	009b      	lsls	r3, r3, #2
     c2e:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     c30:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c32:	0e10      	lsrs	r0, r2, #24
     c34:	3001      	adds	r0, #1
     c36:	30ff      	adds	r0, #255	; 0xff
     c38:	0080      	lsls	r0, r0, #2
     c3a:	4458      	add	r0, fp
     c3c:	6a80      	ldr	r0, [r0, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     c3e:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c40:	4008      	ands	r0, r1
     c42:	4044      	eors	r4, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     c44:	0c10      	lsrs	r0, r2, #16
     c46:	4008      	ands	r0, r1
     c48:	4450      	add	r0, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     c4a:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     c4c:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     c4e:	0080      	lsls	r0, r0, #2
     c50:	4458      	add	r0, fp
     c52:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[7] = rk[3] ^ rk[6];
     c54:	65fa      	str	r2, [r7, #92]	; 0x5c
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     c56:	0e00      	lsrs	r0, r0, #24
     c58:	0600      	lsls	r0, r0, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c5a:	4044      	eors	r4, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     c5c:	0a10      	lsrs	r0, r2, #8
     c5e:	4008      	ands	r0, r1
     c60:	4450      	add	r0, sl
     c62:	0080      	lsls	r0, r0, #2
     c64:	4458      	add	r0, fp
     c66:	6a80      	ldr	r0, [r0, #40]	; 0x28
     c68:	4028      	ands	r0, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c6a:	4044      	eors	r4, r0
                rk[5] = rk[1] ^ rk[4];
     c6c:	4063      	eors	r3, r4
     c6e:	4699      	mov	r9, r3
     c70:	667b      	str	r3, [r7, #100]	; 0x64
                rk[6] = rk[2] ^ rk[5];
     c72:	4648      	mov	r0, r9
     c74:	4663      	mov	r3, ip
     c76:	4043      	eors	r3, r0
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     c78:	0008      	movs	r0, r1
                rk[7] = rk[3] ^ rk[6];
     c7a:	405a      	eors	r2, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     c7c:	4010      	ands	r0, r2
     c7e:	0080      	lsls	r0, r0, #2
     c80:	4458      	add	r0, fp
     c82:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     c84:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     c86:	4030      	ands	r0, r6
     c88:	4682      	mov	sl, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c8a:	2080      	movs	r0, #128	; 0x80
                rk[6] = rk[2] ^ rk[5];
     c8c:	66bb      	str	r3, [r7, #104]	; 0x68
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     c8e:	4653      	mov	r3, sl
     c90:	05c0      	lsls	r0, r0, #23
     c92:	4060      	eors	r0, r4
     c94:	4058      	eors	r0, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     c96:	2380      	movs	r3, #128	; 0x80
     c98:	009b      	lsls	r3, r3, #2
     c9a:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     c9c:	23c0      	movs	r3, #192	; 0xc0
                rk[4] = rk[0] ^
     c9e:	663c      	str	r4, [r7, #96]	; 0x60
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     ca0:	0e14      	lsrs	r4, r2, #24
     ca2:	3401      	adds	r4, #1
     ca4:	34ff      	adds	r4, #255	; 0xff
     ca6:	00a4      	lsls	r4, r4, #2
     ca8:	445c      	add	r4, fp
     caa:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     cac:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     cae:	400c      	ands	r4, r1
     cb0:	4060      	eors	r0, r4
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     cb2:	0c14      	lsrs	r4, r2, #16
     cb4:	400c      	ands	r4, r1
     cb6:	4454      	add	r4, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     cb8:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     cba:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     cbc:	00a4      	lsls	r4, r4, #2
     cbe:	445c      	add	r4, fp
     cc0:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                rk[7] = rk[3] ^ rk[6];
     cc2:	66fa      	str	r2, [r7, #108]	; 0x6c
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     cc4:	0e24      	lsrs	r4, r4, #24
     cc6:	0624      	lsls	r4, r4, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     cc8:	4060      	eors	r0, r4
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     cca:	0a14      	lsrs	r4, r2, #8
     ccc:	400c      	ands	r4, r1
     cce:	4454      	add	r4, sl
     cd0:	00a4      	lsls	r4, r4, #2
     cd2:	445c      	add	r4, fp
     cd4:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     cd6:	402c      	ands	r4, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     cd8:	4060      	eors	r0, r4
                rk[5] = rk[1] ^ rk[4];
     cda:	4043      	eors	r3, r0
     cdc:	4699      	mov	r9, r3
     cde:	677b      	str	r3, [r7, #116]	; 0x74
                rk[6] = rk[2] ^ rk[5];
     ce0:	464c      	mov	r4, r9
     ce2:	4663      	mov	r3, ip
     ce4:	4063      	eors	r3, r4
                rk[7] = rk[3] ^ rk[6];
     ce6:	405a      	eors	r2, r3
                rk[6] = rk[2] ^ rk[5];
     ce8:	469c      	mov	ip, r3
     cea:	67bb      	str	r3, [r7, #120]	; 0x78
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     cec:	2380      	movs	r3, #128	; 0x80
     cee:	061b      	lsls	r3, r3, #24
     cf0:	469a      	mov	sl, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     cf2:	2380      	movs	r3, #128	; 0x80
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     cf4:	000c      	movs	r4, r1
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     cf6:	009b      	lsls	r3, r3, #2
                rk[4] = rk[0] ^
     cf8:	6738      	str	r0, [r7, #112]	; 0x70
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     cfa:	4450      	add	r0, sl
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     cfc:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     cfe:	23c0      	movs	r3, #192	; 0xc0
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     d00:	4014      	ands	r4, r2
     d02:	00a4      	lsls	r4, r4, #2
     d04:	445c      	add	r4, fp
     d06:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     d08:	009b      	lsls	r3, r3, #2
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     d0a:	4034      	ands	r4, r6
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d0c:	4044      	eors	r4, r0
     d0e:	0e10      	lsrs	r0, r2, #24
     d10:	3001      	adds	r0, #1
     d12:	30ff      	adds	r0, #255	; 0xff
     d14:	0080      	lsls	r0, r0, #2
     d16:	4458      	add	r0, fp
     d18:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[7] = rk[3] ^ rk[6];
     d1a:	67fa      	str	r2, [r7, #124]	; 0x7c
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d1c:	4008      	ands	r0, r1
     d1e:	4044      	eors	r4, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     d20:	0c10      	lsrs	r0, r2, #16
     d22:	4008      	ands	r0, r1
     d24:	4450      	add	r0, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     d26:	469a      	mov	sl, r3
                rk[5] = rk[1] ^ rk[4];
     d28:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     d2a:	0080      	lsls	r0, r0, #2
     d2c:	4458      	add	r0, fp
     d2e:	6a80      	ldr	r0, [r0, #40]	; 0x28
     d30:	0e00      	lsrs	r0, r0, #24
     d32:	0600      	lsls	r0, r0, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d34:	4044      	eors	r4, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     d36:	0a10      	lsrs	r0, r2, #8
     d38:	4008      	ands	r0, r1
     d3a:	4450      	add	r0, sl
     d3c:	0080      	lsls	r0, r0, #2
     d3e:	4458      	add	r0, fp
     d40:	6a80      	ldr	r0, [r0, #40]	; 0x28
     d42:	e003      	b.n	d4c <wc_AesSetKey+0x424>
     d44:	00002489 	.word	0x00002489
     d48:	0000267c 	.word	0x0000267c
     d4c:	4028      	ands	r0, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d4e:	4044      	eors	r4, r0
                rk[5] = rk[1] ^ rk[4];
     d50:	4063      	eors	r3, r4
                rk[4] = rk[0] ^
     d52:	2080      	movs	r0, #128	; 0x80
                rk[5] = rk[1] ^ rk[4];
     d54:	4699      	mov	r9, r3
                rk[4] = rk[0] ^
     d56:	503c      	str	r4, [r7, r0]
                rk[5] = rk[1] ^ rk[4];
     d58:	3004      	adds	r0, #4
     d5a:	503b      	str	r3, [r7, r0]
                rk[6] = rk[2] ^ rk[5];
     d5c:	4648      	mov	r0, r9
     d5e:	4663      	mov	r3, ip
     d60:	4043      	eors	r3, r0
     d62:	2088      	movs	r0, #136	; 0x88
                rk[7] = rk[3] ^ rk[6];
     d64:	405a      	eors	r2, r3
                rk[6] = rk[2] ^ rk[5];
     d66:	503b      	str	r3, [r7, r0]
                rk[7] = rk[3] ^ rk[6];
     d68:	3004      	adds	r0, #4
     d6a:	503a      	str	r2, [r7, r0]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     d6c:	0008      	movs	r0, r1
     d6e:	4010      	ands	r0, r2
     d70:	0080      	lsls	r0, r0, #2
     d72:	4458      	add	r0, fp
     d74:	6a80      	ldr	r0, [r0, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     d76:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     d78:	4030      	ands	r0, r6
     d7a:	4682      	mov	sl, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d7c:	20d8      	movs	r0, #216	; 0xd8
     d7e:	4653      	mov	r3, sl
     d80:	0540      	lsls	r0, r0, #21
     d82:	4060      	eors	r0, r4
     d84:	4058      	eors	r0, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     d86:	2380      	movs	r3, #128	; 0x80
     d88:	009b      	lsls	r3, r3, #2
     d8a:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     d8c:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d8e:	0e14      	lsrs	r4, r2, #24
     d90:	3401      	adds	r4, #1
     d92:	34ff      	adds	r4, #255	; 0xff
     d94:	00a4      	lsls	r4, r4, #2
     d96:	445c      	add	r4, fp
     d98:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     d9a:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     d9c:	400c      	ands	r4, r1
     d9e:	4060      	eors	r0, r4
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     da0:	0c14      	lsrs	r4, r2, #16
     da2:	400c      	ands	r4, r1
     da4:	4454      	add	r4, sl
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     da6:	469a      	mov	sl, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     da8:	00a4      	lsls	r4, r4, #2
     daa:	445c      	add	r4, fp
     dac:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                rk[5] = rk[1] ^ rk[4];
     dae:	2394      	movs	r3, #148	; 0x94
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     db0:	0e24      	lsrs	r4, r4, #24
     db2:	0624      	lsls	r4, r4, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     db4:	4060      	eors	r0, r4
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     db6:	0a14      	lsrs	r4, r2, #8
     db8:	400c      	ands	r4, r1
     dba:	4454      	add	r4, sl
     dbc:	00a4      	lsls	r4, r4, #2
     dbe:	445c      	add	r4, fp
     dc0:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     dc2:	402c      	ands	r4, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     dc4:	4060      	eors	r0, r4
                rk[4] = rk[0] ^
     dc6:	2490      	movs	r4, #144	; 0x90
     dc8:	5138      	str	r0, [r7, r4]
                rk[5] = rk[1] ^ rk[4];
     dca:	464c      	mov	r4, r9
     dcc:	4044      	eors	r4, r0
     dce:	50fc      	str	r4, [r7, r3]
                rk[6] = rk[2] ^ rk[5];
     dd0:	4663      	mov	r3, ip
     dd2:	4063      	eors	r3, r4
     dd4:	469c      	mov	ip, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     dd6:	4682      	mov	sl, r0
                rk[6] = rk[2] ^ rk[5];
     dd8:	2398      	movs	r3, #152	; 0x98
     dda:	4660      	mov	r0, ip
     ddc:	50f8      	str	r0, [r7, r3]
                rk[7] = rk[3] ^ rk[6];
     dde:	239c      	movs	r3, #156	; 0x9c
     de0:	4042      	eors	r2, r0
     de2:	50fa      	str	r2, [r7, r3]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     de4:	000b      	movs	r3, r1
     de6:	4013      	ands	r3, r2
     de8:	009b      	lsls	r3, r3, #2
     dea:	4699      	mov	r9, r3
     dec:	44d9      	add	r9, fp
     dee:	464b      	mov	r3, r9
     df0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     df2:	4650      	mov	r0, sl
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
     df4:	401e      	ands	r6, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     df6:	23d8      	movs	r3, #216	; 0xd8
     df8:	059b      	lsls	r3, r3, #22
     dfa:	4058      	eors	r0, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     dfc:	2380      	movs	r3, #128	; 0x80
     dfe:	009b      	lsls	r3, r3, #2
     e00:	4699      	mov	r9, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     e02:	23c0      	movs	r3, #192	; 0xc0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     e04:	4070      	eors	r0, r6
     e06:	0e16      	lsrs	r6, r2, #24
     e08:	3601      	adds	r6, #1
     e0a:	36ff      	adds	r6, #255	; 0xff
     e0c:	00b6      	lsls	r6, r6, #2
     e0e:	445e      	add	r6, fp
     e10:	6ab6      	ldr	r6, [r6, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     e12:	009b      	lsls	r3, r3, #2
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     e14:	400e      	ands	r6, r1
     e16:	4070      	eors	r0, r6
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     e18:	0c16      	lsrs	r6, r2, #16
     e1a:	400e      	ands	r6, r1
     e1c:	444e      	add	r6, r9
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     e1e:	4699      	mov	r9, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     e20:	00b6      	lsls	r6, r6, #2
     e22:	445e      	add	r6, fp
     e24:	6ab6      	ldr	r6, [r6, #40]	; 0x28
                rk[6] = rk[2] ^ rk[5];
     e26:	4663      	mov	r3, ip
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
     e28:	0e36      	lsrs	r6, r6, #24
     e2a:	0636      	lsls	r6, r6, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     e2c:	4070      	eors	r0, r6
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
     e2e:	0a16      	lsrs	r6, r2, #8
     e30:	4031      	ands	r1, r6
     e32:	4449      	add	r1, r9
     e34:	0089      	lsls	r1, r1, #2
     e36:	4459      	add	r1, fp
     e38:	6a89      	ldr	r1, [r1, #40]	; 0x28
     e3a:	400d      	ands	r5, r1
                rk[4] = rk[0] ^
     e3c:	21a0      	movs	r1, #160	; 0xa0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
     e3e:	4068      	eors	r0, r5
                rk[4] = rk[0] ^
     e40:	5078      	str	r0, [r7, r1]
                rk[5] = rk[1] ^ rk[4];
     e42:	4044      	eors	r4, r0
     e44:	3104      	adds	r1, #4
     e46:	507c      	str	r4, [r7, r1]
                rk[6] = rk[2] ^ rk[5];
     e48:	405c      	eors	r4, r3
     e4a:	3104      	adds	r1, #4
     e4c:	507c      	str	r4, [r7, r1]
                rk[7] = rk[3] ^ rk[6];
     e4e:	4062      	eors	r2, r4
     e50:	3104      	adds	r1, #4
     e52:	507a      	str	r2, [r7, r1]
        if (dir == AES_DECRYPTION) {
     e54:	9a10      	ldr	r2, [sp, #64]	; 0x40
     e56:	2a01      	cmp	r2, #1
     e58:	d000      	beq.n	e5c <wc_AesSetKey+0x534>
     e5a:	e1be      	b.n	11da <wc_AesSetKey+0x8b2>
            for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
     e5c:	22f0      	movs	r2, #240	; 0xf0
     e5e:	58ba      	ldr	r2, [r7, r2]
     e60:	0095      	lsls	r5, r2, #2
     e62:	d01d      	beq.n	ea0 <wc_AesSetKey+0x578>
     e64:	0039      	movs	r1, r7
     e66:	2000      	movs	r0, #0
     e68:	0112      	lsls	r2, r2, #4
     e6a:	9b01      	ldr	r3, [sp, #4]
     e6c:	18ba      	adds	r2, r7, r2
                temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
     e6e:	680c      	ldr	r4, [r1, #0]
     e70:	6816      	ldr	r6, [r2, #0]
            for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
     e72:	3004      	adds	r0, #4
                temp = rk[i    ]; rk[i    ] = rk[j    ]; rk[j    ] = temp;
     e74:	600e      	str	r6, [r1, #0]
     e76:	6014      	str	r4, [r2, #0]
                temp = rk[i + 1]; rk[i + 1] = rk[j + 1]; rk[j + 1] = temp;
     e78:	684c      	ldr	r4, [r1, #4]
     e7a:	6856      	ldr	r6, [r2, #4]
     e7c:	3a10      	subs	r2, #16
     e7e:	604e      	str	r6, [r1, #4]
     e80:	6154      	str	r4, [r2, #20]
                temp = rk[i + 2]; rk[i + 2] = rk[j + 2]; rk[j + 2] = temp;
     e82:	688c      	ldr	r4, [r1, #8]
     e84:	6996      	ldr	r6, [r2, #24]
     e86:	608e      	str	r6, [r1, #8]
     e88:	6194      	str	r4, [r2, #24]
                temp = rk[i + 3]; rk[i + 3] = rk[j + 3]; rk[j + 3] = temp;
     e8a:	68cc      	ldr	r4, [r1, #12]
     e8c:	69d6      	ldr	r6, [r2, #28]
     e8e:	60ce      	str	r6, [r1, #12]
     e90:	61d4      	str	r4, [r2, #28]
     e92:	3110      	adds	r1, #16
            for (i = 0, j = 4* aes->rounds; i < j; i += 4, j -= 4) {
     e94:	1a2c      	subs	r4, r5, r0
     e96:	42a0      	cmp	r0, r4
     e98:	d3e9      	bcc.n	e6e <wc_AesSetKey+0x546>
     e9a:	22f0      	movs	r2, #240	; 0xf0
     e9c:	58ba      	ldr	r2, [r7, r2]
     e9e:	9301      	str	r3, [sp, #4]
            for (i = 1; i < aes->rounds; i++) {
     ea0:	2a01      	cmp	r2, #1
     ea2:	d800      	bhi.n	ea6 <wc_AesSetKey+0x57e>
     ea4:	e199      	b.n	11da <wc_AesSetKey+0x8b2>
     ea6:	2401      	movs	r4, #1
     ea8:	23f0      	movs	r3, #240	; 0xf0
     eaa:	46bc      	mov	ip, r7
                    Td[0][Te[1][GETBYTE(rk[0], 3)] & 0xff] ^
     eac:	22ff      	movs	r2, #255	; 0xff
            for (i = 1; i < aes->rounds; i++) {
     eae:	4646      	mov	r6, r8
     eb0:	0027      	movs	r7, r4
     eb2:	469a      	mov	sl, r3
     eb4:	49d9      	ldr	r1, [pc, #868]	; (121c <wc_AesSetKey+0x8f4>)
     eb6:	9b01      	ldr	r3, [sp, #4]
                rk += 4;
     eb8:	3610      	adds	r6, #16
                    Td[0][Te[1][GETBYTE(rk[0], 3)] & 0xff] ^
     eba:	6830      	ldr	r0, [r6, #0]
                    Td[3][Te[1][GETBYTE(rk[0], 0)] & 0xff];
     ebc:	25c0      	movs	r5, #192	; 0xc0
                    Td[0][Te[1][GETBYTE(rk[0], 3)] & 0xff] ^
     ebe:	0e04      	lsrs	r4, r0, #24
     ec0:	3401      	adds	r4, #1
     ec2:	34ff      	adds	r4, #255	; 0xff
     ec4:	00a4      	lsls	r4, r4, #2
     ec6:	191c      	adds	r4, r3, r4
     ec8:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[3][Te[1][GETBYTE(rk[0], 0)] & 0xff];
     eca:	00ad      	lsls	r5, r5, #2
                    Td[0][Te[1][GETBYTE(rk[0], 3)] & 0xff] ^
     ecc:	4014      	ands	r4, r2
     ece:	00a4      	lsls	r4, r4, #2
     ed0:	46a0      	mov	r8, r4
                    Td[3][Te[1][GETBYTE(rk[0], 0)] & 0xff];
     ed2:	0014      	movs	r4, r2
     ed4:	46a9      	mov	r9, r5
                    Td[0][Te[1][GETBYTE(rk[0], 3)] & 0xff] ^
     ed6:	4488      	add	r8, r1
                    Td[2][Te[1][GETBYTE(rk[0], 1)] & 0xff] ^
     ed8:	4645      	mov	r5, r8
                    Td[3][Te[1][GETBYTE(rk[0], 0)] & 0xff];
     eda:	4004      	ands	r4, r0
     edc:	3401      	adds	r4, #1
     ede:	34ff      	adds	r4, #255	; 0xff
     ee0:	00a4      	lsls	r4, r4, #2
     ee2:	191c      	adds	r4, r3, r4
     ee4:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[0], 1)] & 0xff] ^
     ee6:	6aad      	ldr	r5, [r5, #40]	; 0x28
                    Td[3][Te[1][GETBYTE(rk[0], 0)] & 0xff];
     ee8:	4014      	ands	r4, r2
     eea:	444c      	add	r4, r9
     eec:	00a4      	lsls	r4, r4, #2
     eee:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[0], 1)] & 0xff] ^
     ef0:	6aa4      	ldr	r4, [r4, #40]	; 0x28
            for (i = 1; i < aes->rounds; i++) {
     ef2:	3701      	adds	r7, #1
                    Td[2][Te[1][GETBYTE(rk[0], 1)] & 0xff] ^
     ef4:	4065      	eors	r5, r4
                    Td[1][Te[1][GETBYTE(rk[0], 2)] & 0xff] ^
     ef6:	0c04      	lsrs	r4, r0, #16
     ef8:	4014      	ands	r4, r2
     efa:	3401      	adds	r4, #1
     efc:	34ff      	adds	r4, #255	; 0xff
     efe:	00a4      	lsls	r4, r4, #2
     f00:	191c      	adds	r4, r3, r4
     f02:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[0], 1)] & 0xff] ^
     f04:	0a00      	lsrs	r0, r0, #8
                    Td[1][Te[1][GETBYTE(rk[0], 2)] & 0xff] ^
     f06:	4014      	ands	r4, r2
     f08:	3401      	adds	r4, #1
     f0a:	34ff      	adds	r4, #255	; 0xff
     f0c:	00a4      	lsls	r4, r4, #2
     f0e:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[0], 1)] & 0xff] ^
     f10:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     f12:	4010      	ands	r0, r2
     f14:	406c      	eors	r4, r5
     f16:	2580      	movs	r5, #128	; 0x80
     f18:	00ad      	lsls	r5, r5, #2
     f1a:	46a8      	mov	r8, r5
     f1c:	3001      	adds	r0, #1
     f1e:	30ff      	adds	r0, #255	; 0xff
     f20:	0080      	lsls	r0, r0, #2
     f22:	1818      	adds	r0, r3, r0
     f24:	6a80      	ldr	r0, [r0, #40]	; 0x28
     f26:	4010      	ands	r0, r2
     f28:	4440      	add	r0, r8
     f2a:	0080      	lsls	r0, r0, #2
     f2c:	1808      	adds	r0, r1, r0
     f2e:	6a80      	ldr	r0, [r0, #40]	; 0x28
     f30:	4044      	eors	r4, r0
                    Td[0][Te[1][GETBYTE(rk[1], 3)] & 0xff] ^
     f32:	6870      	ldr	r0, [r6, #4]
                rk[0] =
     f34:	6034      	str	r4, [r6, #0]
                    Td[0][Te[1][GETBYTE(rk[1], 3)] & 0xff] ^
     f36:	0e04      	lsrs	r4, r0, #24
     f38:	3401      	adds	r4, #1
     f3a:	34ff      	adds	r4, #255	; 0xff
     f3c:	00a4      	lsls	r4, r4, #2
     f3e:	191c      	adds	r4, r3, r4
     f40:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     f42:	4014      	ands	r4, r2
     f44:	00a4      	lsls	r4, r4, #2
     f46:	46a0      	mov	r8, r4
                    Td[3][Te[1][GETBYTE(rk[1], 0)] & 0xff];
     f48:	0014      	movs	r4, r2
                    Td[0][Te[1][GETBYTE(rk[1], 3)] & 0xff] ^
     f4a:	4488      	add	r8, r1
                    Td[2][Te[1][GETBYTE(rk[1], 1)] & 0xff] ^
     f4c:	4645      	mov	r5, r8
                    Td[3][Te[1][GETBYTE(rk[1], 0)] & 0xff];
     f4e:	4004      	ands	r4, r0
     f50:	3401      	adds	r4, #1
     f52:	34ff      	adds	r4, #255	; 0xff
     f54:	00a4      	lsls	r4, r4, #2
     f56:	191c      	adds	r4, r3, r4
     f58:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[1], 1)] & 0xff] ^
     f5a:	6aad      	ldr	r5, [r5, #40]	; 0x28
                    Td[3][Te[1][GETBYTE(rk[1], 0)] & 0xff];
     f5c:	4014      	ands	r4, r2
     f5e:	444c      	add	r4, r9
     f60:	00a4      	lsls	r4, r4, #2
     f62:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[1], 1)] & 0xff] ^
     f64:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     f66:	4065      	eors	r5, r4
                    Td[1][Te[1][GETBYTE(rk[1], 2)] & 0xff] ^
     f68:	0c04      	lsrs	r4, r0, #16
     f6a:	4014      	ands	r4, r2
     f6c:	3401      	adds	r4, #1
     f6e:	34ff      	adds	r4, #255	; 0xff
     f70:	00a4      	lsls	r4, r4, #2
     f72:	191c      	adds	r4, r3, r4
     f74:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[1], 1)] & 0xff] ^
     f76:	0a00      	lsrs	r0, r0, #8
                    Td[1][Te[1][GETBYTE(rk[1], 2)] & 0xff] ^
     f78:	4014      	ands	r4, r2
     f7a:	3401      	adds	r4, #1
     f7c:	34ff      	adds	r4, #255	; 0xff
     f7e:	00a4      	lsls	r4, r4, #2
     f80:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[1], 1)] & 0xff] ^
     f82:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     f84:	4010      	ands	r0, r2
     f86:	406c      	eors	r4, r5
     f88:	2580      	movs	r5, #128	; 0x80
     f8a:	00ad      	lsls	r5, r5, #2
     f8c:	46a8      	mov	r8, r5
     f8e:	3001      	adds	r0, #1
     f90:	30ff      	adds	r0, #255	; 0xff
     f92:	0080      	lsls	r0, r0, #2
     f94:	1818      	adds	r0, r3, r0
     f96:	6a80      	ldr	r0, [r0, #40]	; 0x28
     f98:	4010      	ands	r0, r2
     f9a:	4440      	add	r0, r8
     f9c:	0080      	lsls	r0, r0, #2
     f9e:	1808      	adds	r0, r1, r0
     fa0:	6a80      	ldr	r0, [r0, #40]	; 0x28
     fa2:	4044      	eors	r4, r0
                    Td[0][Te[1][GETBYTE(rk[2], 3)] & 0xff] ^
     fa4:	68b0      	ldr	r0, [r6, #8]
                rk[1] =
     fa6:	6074      	str	r4, [r6, #4]
                    Td[0][Te[1][GETBYTE(rk[2], 3)] & 0xff] ^
     fa8:	0e04      	lsrs	r4, r0, #24
     faa:	3401      	adds	r4, #1
     fac:	34ff      	adds	r4, #255	; 0xff
     fae:	00a4      	lsls	r4, r4, #2
     fb0:	191c      	adds	r4, r3, r4
     fb2:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     fb4:	4014      	ands	r4, r2
     fb6:	00a4      	lsls	r4, r4, #2
     fb8:	46a0      	mov	r8, r4
                    Td[3][Te[1][GETBYTE(rk[2], 0)] & 0xff];
     fba:	0014      	movs	r4, r2
                    Td[0][Te[1][GETBYTE(rk[2], 3)] & 0xff] ^
     fbc:	4488      	add	r8, r1
                    Td[2][Te[1][GETBYTE(rk[2], 1)] & 0xff] ^
     fbe:	4645      	mov	r5, r8
                    Td[3][Te[1][GETBYTE(rk[2], 0)] & 0xff];
     fc0:	4004      	ands	r4, r0
     fc2:	3401      	adds	r4, #1
     fc4:	34ff      	adds	r4, #255	; 0xff
     fc6:	00a4      	lsls	r4, r4, #2
     fc8:	191c      	adds	r4, r3, r4
     fca:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[2], 1)] & 0xff] ^
     fcc:	6aad      	ldr	r5, [r5, #40]	; 0x28
                    Td[3][Te[1][GETBYTE(rk[2], 0)] & 0xff];
     fce:	4014      	ands	r4, r2
     fd0:	444c      	add	r4, r9
     fd2:	00a4      	lsls	r4, r4, #2
     fd4:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[2], 1)] & 0xff] ^
     fd6:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     fd8:	4065      	eors	r5, r4
                    Td[1][Te[1][GETBYTE(rk[2], 2)] & 0xff] ^
     fda:	0c04      	lsrs	r4, r0, #16
     fdc:	4014      	ands	r4, r2
     fde:	3401      	adds	r4, #1
     fe0:	34ff      	adds	r4, #255	; 0xff
     fe2:	00a4      	lsls	r4, r4, #2
     fe4:	191c      	adds	r4, r3, r4
     fe6:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[2], 1)] & 0xff] ^
     fe8:	0a00      	lsrs	r0, r0, #8
                    Td[1][Te[1][GETBYTE(rk[2], 2)] & 0xff] ^
     fea:	4014      	ands	r4, r2
     fec:	3401      	adds	r4, #1
     fee:	34ff      	adds	r4, #255	; 0xff
     ff0:	00a4      	lsls	r4, r4, #2
     ff2:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[2], 1)] & 0xff] ^
     ff4:	6aa4      	ldr	r4, [r4, #40]	; 0x28
     ff6:	4010      	ands	r0, r2
     ff8:	406c      	eors	r4, r5
     ffa:	2580      	movs	r5, #128	; 0x80
     ffc:	00ad      	lsls	r5, r5, #2
     ffe:	46a8      	mov	r8, r5
    1000:	3001      	adds	r0, #1
    1002:	30ff      	adds	r0, #255	; 0xff
    1004:	0080      	lsls	r0, r0, #2
    1006:	1818      	adds	r0, r3, r0
    1008:	6a80      	ldr	r0, [r0, #40]	; 0x28
    100a:	4010      	ands	r0, r2
    100c:	4440      	add	r0, r8
    100e:	0080      	lsls	r0, r0, #2
    1010:	1808      	adds	r0, r1, r0
    1012:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1014:	4044      	eors	r4, r0
                    Td[0][Te[1][GETBYTE(rk[3], 3)] & 0xff] ^
    1016:	68f0      	ldr	r0, [r6, #12]
                rk[2] =
    1018:	60b4      	str	r4, [r6, #8]
                    Td[0][Te[1][GETBYTE(rk[3], 3)] & 0xff] ^
    101a:	0e04      	lsrs	r4, r0, #24
    101c:	3401      	adds	r4, #1
    101e:	34ff      	adds	r4, #255	; 0xff
    1020:	00a4      	lsls	r4, r4, #2
    1022:	191c      	adds	r4, r3, r4
    1024:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1026:	4014      	ands	r4, r2
    1028:	00a4      	lsls	r4, r4, #2
    102a:	46a0      	mov	r8, r4
                    Td[3][Te[1][GETBYTE(rk[3], 0)] & 0xff];
    102c:	0014      	movs	r4, r2
                    Td[0][Te[1][GETBYTE(rk[3], 3)] & 0xff] ^
    102e:	4488      	add	r8, r1
                    Td[2][Te[1][GETBYTE(rk[3], 1)] & 0xff] ^
    1030:	4645      	mov	r5, r8
                    Td[3][Te[1][GETBYTE(rk[3], 0)] & 0xff];
    1032:	4004      	ands	r4, r0
    1034:	3401      	adds	r4, #1
    1036:	34ff      	adds	r4, #255	; 0xff
    1038:	00a4      	lsls	r4, r4, #2
    103a:	191c      	adds	r4, r3, r4
    103c:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[3], 1)] & 0xff] ^
    103e:	6aad      	ldr	r5, [r5, #40]	; 0x28
                    Td[3][Te[1][GETBYTE(rk[3], 0)] & 0xff];
    1040:	4014      	ands	r4, r2
    1042:	444c      	add	r4, r9
    1044:	00a4      	lsls	r4, r4, #2
    1046:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[3], 1)] & 0xff] ^
    1048:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    104a:	4065      	eors	r5, r4
                    Td[1][Te[1][GETBYTE(rk[3], 2)] & 0xff] ^
    104c:	0c04      	lsrs	r4, r0, #16
    104e:	4014      	ands	r4, r2
    1050:	3401      	adds	r4, #1
    1052:	34ff      	adds	r4, #255	; 0xff
    1054:	00a4      	lsls	r4, r4, #2
    1056:	191c      	adds	r4, r3, r4
    1058:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    Td[2][Te[1][GETBYTE(rk[3], 1)] & 0xff] ^
    105a:	0a00      	lsrs	r0, r0, #8
                    Td[1][Te[1][GETBYTE(rk[3], 2)] & 0xff] ^
    105c:	4014      	ands	r4, r2
    105e:	3401      	adds	r4, #1
    1060:	34ff      	adds	r4, #255	; 0xff
    1062:	00a4      	lsls	r4, r4, #2
    1064:	190c      	adds	r4, r1, r4
                    Td[2][Te[1][GETBYTE(rk[3], 1)] & 0xff] ^
    1066:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1068:	4010      	ands	r0, r2
    106a:	406c      	eors	r4, r5
    106c:	2580      	movs	r5, #128	; 0x80
    106e:	00ad      	lsls	r5, r5, #2
    1070:	46a8      	mov	r8, r5
    1072:	3001      	adds	r0, #1
    1074:	30ff      	adds	r0, #255	; 0xff
    1076:	0080      	lsls	r0, r0, #2
    1078:	1818      	adds	r0, r3, r0
    107a:	6a80      	ldr	r0, [r0, #40]	; 0x28
    107c:	4010      	ands	r0, r2
    107e:	4440      	add	r0, r8
    1080:	0080      	lsls	r0, r0, #2
    1082:	1808      	adds	r0, r1, r0
    1084:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1086:	4044      	eors	r4, r0
                rk[3] =
    1088:	60f4      	str	r4, [r6, #12]
            for (i = 1; i < aes->rounds; i++) {
    108a:	4660      	mov	r0, ip
    108c:	4654      	mov	r4, sl
    108e:	5900      	ldr	r0, [r0, r4]
    1090:	4287      	cmp	r7, r0
    1092:	d200      	bcs.n	1096 <wc_AesSetKey+0x76e>
    1094:	e710      	b.n	eb8 <wc_AesSetKey+0x590>
int wc_AesSetIV(Aes* aes, const byte* iv)
{
    if (aes == NULL)
        return BAD_FUNC_ARG;

    if (iv)
    1096:	9b02      	ldr	r3, [sp, #8]
    1098:	4667      	mov	r7, ip
    109a:	2b00      	cmp	r3, #0
    109c:	d000      	beq.n	10a0 <wc_AesSetKey+0x778>
    109e:	e0a0      	b.n	11e2 <wc_AesSetKey+0x8ba>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
    else
        XMEMSET(aes->reg,  0, AES_BLOCK_SIZE);
    10a0:	0038      	movs	r0, r7
    10a2:	2210      	movs	r2, #16
    10a4:	30f8      	adds	r0, #248	; 0xf8
    10a6:	2100      	movs	r1, #0
    10a8:	4b5d      	ldr	r3, [pc, #372]	; (1220 <wc_AesSetKey+0x8f8>)
    10aa:	4798      	blx	r3
        return wc_AesSetIV(aes, iv);
    10ac:	2000      	movs	r0, #0
    10ae:	e452      	b.n	956 <wc_AesSetKey+0x2e>
    10b0:	68f9      	ldr	r1, [r7, #12]
    10b2:	0038      	movs	r0, r7
    10b4:	4689      	mov	r9, r1
    10b6:	495b      	ldr	r1, [pc, #364]	; (1224 <wc_AesSetKey+0x8fc>)
    10b8:	687b      	ldr	r3, [r7, #4]
    10ba:	000c      	movs	r4, r1
    10bc:	468a      	mov	sl, r1
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    10be:	21ff      	movs	r1, #255	; 0xff
    10c0:	468c      	mov	ip, r1
    10c2:	4641      	mov	r1, r8
    10c4:	9104      	str	r1, [sp, #16]
    10c6:	0039      	movs	r1, r7
    10c8:	469b      	mov	fp, r3
    10ca:	68bb      	ldr	r3, [r7, #8]
    10cc:	683a      	ldr	r2, [r7, #0]
    10ce:	4698      	mov	r8, r3
    10d0:	3010      	adds	r0, #16
    10d2:	464f      	mov	r7, r9
    10d4:	0023      	movs	r3, r4
    10d6:	9105      	str	r1, [sp, #20]
    10d8:	e036      	b.n	1148 <wc_AesSetKey+0x820>
                    (Te[3][GETBYTE(temp, 2)] & 0x00ff0000) ^
    10da:	4665      	mov	r5, ip
    10dc:	0c39      	lsrs	r1, r7, #16
    10de:	4029      	ands	r1, r5
    10e0:	25ff      	movs	r5, #255	; 0xff
                    (Te[0][GETBYTE(temp, 1)] & 0x0000ff00) ^
    10e2:	4666      	mov	r6, ip
                    (Te[3][GETBYTE(temp, 2)] & 0x00ff0000) ^
    10e4:	4449      	add	r1, r9
    10e6:	0089      	lsls	r1, r1, #2
    10e8:	1859      	adds	r1, r3, r1
    10ea:	6a89      	ldr	r1, [r1, #40]	; 0x28
    10ec:	042d      	lsls	r5, r5, #16
    10ee:	4029      	ands	r1, r5
                    (Te[0][GETBYTE(temp, 1)] & 0x0000ff00) ^
    10f0:	0a3d      	lsrs	r5, r7, #8
    10f2:	4035      	ands	r5, r6
    10f4:	26ff      	movs	r6, #255	; 0xff
    10f6:	00ad      	lsls	r5, r5, #2
    10f8:	195d      	adds	r5, r3, r5
    10fa:	6aad      	ldr	r5, [r5, #40]	; 0x28
    10fc:	0236      	lsls	r6, r6, #8
    10fe:	4035      	ands	r5, r6
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    1100:	2680      	movs	r6, #128	; 0x80
    1102:	00b6      	lsls	r6, r6, #2
    1104:	46b1      	mov	r9, r6
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    1106:	4666      	mov	r6, ip
                    (Te[0][GETBYTE(temp, 1)] & 0x0000ff00) ^
    1108:	4329      	orrs	r1, r5
    110a:	6805      	ldr	r5, [r0, #0]
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    110c:	403e      	ands	r6, r7
                    (Te[0][GETBYTE(temp, 1)] & 0x0000ff00) ^
    110e:	4069      	eors	r1, r5
    1110:	9101      	str	r1, [sp, #4]
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    1112:	4661      	mov	r1, ip
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    1114:	0e3d      	lsrs	r5, r7, #24
    1116:	444d      	add	r5, r9
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    1118:	3601      	adds	r6, #1
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    111a:	00ad      	lsls	r5, r5, #2
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    111c:	36ff      	adds	r6, #255	; 0xff
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    111e:	195d      	adds	r5, r3, r5
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    1120:	00b6      	lsls	r6, r6, #2
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    1122:	6aad      	ldr	r5, [r5, #40]	; 0x28
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    1124:	199e      	adds	r6, r3, r6
    1126:	6ab6      	ldr	r6, [r6, #40]	; 0x28
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    1128:	0e2d      	lsrs	r5, r5, #24
                    (Te[1][GETBYTE(temp, 0)] & 0x000000ff);
    112a:	400e      	ands	r6, r1
                    (Te[2][GETBYTE(temp, 3)] & 0xff000000) ^
    112c:	062d      	lsls	r5, r5, #24
                    (Te[0][GETBYTE(temp, 1)] & 0x0000ff00) ^
    112e:	9901      	ldr	r1, [sp, #4]
    1130:	4335      	orrs	r5, r6
    1132:	4069      	eors	r1, r5
                rk[13] = rk[ 5] ^ rk[12];
    1134:	6845      	ldr	r5, [r0, #4]
                rk[12] = rk[ 4] ^
    1136:	6201      	str	r1, [r0, #32]
                rk[13] = rk[ 5] ^ rk[12];
    1138:	4069      	eors	r1, r5
                rk[14] = rk[ 6] ^ rk[13];
    113a:	6885      	ldr	r5, [r0, #8]
                rk[13] = rk[ 5] ^ rk[12];
    113c:	6241      	str	r1, [r0, #36]	; 0x24
                rk[14] = rk[ 6] ^ rk[13];
    113e:	4069      	eors	r1, r5
                rk[15] = rk[ 7] ^ rk[14];
    1140:	404c      	eors	r4, r1
                rk[14] = rk[ 6] ^ rk[13];
    1142:	6281      	str	r1, [r0, #40]	; 0x28
                rk[15] = rk[ 7] ^ rk[14];
    1144:	62c4      	str	r4, [r0, #44]	; 0x2c
    1146:	3020      	adds	r0, #32
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1148:	4661      	mov	r1, ip
    114a:	25ff      	movs	r5, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    114c:	4656      	mov	r6, sl
                temp = rk[ 7];
    114e:	68c4      	ldr	r4, [r0, #12]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1150:	022d      	lsls	r5, r5, #8
    1152:	4021      	ands	r1, r4
    1154:	0089      	lsls	r1, r1, #2
    1156:	1859      	adds	r1, r3, r1
    1158:	6a89      	ldr	r1, [r1, #40]	; 0x28
    115a:	4029      	ands	r1, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    115c:	ce20      	ldmia	r6!, {r5}
    115e:	406a      	eors	r2, r5
    1160:	0e25      	lsrs	r5, r4, #24
    1162:	3501      	adds	r5, #1
    1164:	35ff      	adds	r5, #255	; 0xff
    1166:	00ad      	lsls	r5, r5, #2
    1168:	195d      	adds	r5, r3, r5
    116a:	404a      	eors	r2, r1
    116c:	6aa9      	ldr	r1, [r5, #40]	; 0x28
    116e:	4665      	mov	r5, ip
    1170:	4029      	ands	r1, r5
    1172:	404a      	eors	r2, r1
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1174:	4661      	mov	r1, ip
    1176:	0c25      	lsrs	r5, r4, #16
    1178:	400d      	ands	r5, r1
    117a:	2180      	movs	r1, #128	; 0x80
    117c:	0089      	lsls	r1, r1, #2
    117e:	4689      	mov	r9, r1
    1180:	444d      	add	r5, r9
    1182:	00ad      	lsls	r5, r5, #2
    1184:	195d      	adds	r5, r3, r5
    1186:	6aa9      	ldr	r1, [r5, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1188:	4665      	mov	r5, ip
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    118a:	0e09      	lsrs	r1, r1, #24
    118c:	0609      	lsls	r1, r1, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    118e:	4051      	eors	r1, r2
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1190:	0a22      	lsrs	r2, r4, #8
    1192:	402a      	ands	r2, r5
    1194:	25c0      	movs	r5, #192	; 0xc0
    1196:	00ad      	lsls	r5, r5, #2
    1198:	46a9      	mov	r9, r5
    119a:	25ff      	movs	r5, #255	; 0xff
    119c:	444a      	add	r2, r9
    119e:	0092      	lsls	r2, r2, #2
    11a0:	189a      	adds	r2, r3, r2
    11a2:	6a92      	ldr	r2, [r2, #40]	; 0x28
    11a4:	042d      	lsls	r5, r5, #16
    11a6:	402a      	ands	r2, r5
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    11a8:	404a      	eors	r2, r1
                rk[ 9] = rk[ 1] ^ rk[ 8];
    11aa:	4659      	mov	r1, fp
    11ac:	4051      	eors	r1, r2
    11ae:	468b      	mov	fp, r1
    11b0:	6141      	str	r1, [r0, #20]
                rk[10] = rk[ 2] ^ rk[ 9];
    11b2:	465d      	mov	r5, fp
    11b4:	4641      	mov	r1, r8
    11b6:	4069      	eors	r1, r5
                rk[11] = rk[ 3] ^ rk[10];
    11b8:	404f      	eors	r7, r1
                rk[10] = rk[ 2] ^ rk[ 9];
    11ba:	4688      	mov	r8, r1
    11bc:	6181      	str	r1, [r0, #24]
                if (++i == 7)
    11be:	491a      	ldr	r1, [pc, #104]	; (1228 <wc_AesSetKey+0x900>)
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    11c0:	46b2      	mov	sl, r6
                rk[ 8] = rk[ 0] ^
    11c2:	6102      	str	r2, [r0, #16]
                rk[11] = rk[ 3] ^ rk[10];
    11c4:	61c7      	str	r7, [r0, #28]
                if (++i == 7)
    11c6:	428e      	cmp	r6, r1
    11c8:	d187      	bne.n	10da <wc_AesSetKey+0x7b2>
    11ca:	9a04      	ldr	r2, [sp, #16]
    11cc:	9f05      	ldr	r7, [sp, #20]
    11ce:	4690      	mov	r8, r2
    11d0:	9301      	str	r3, [sp, #4]
        if (dir == AES_DECRYPTION) {
    11d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
    11d4:	2a01      	cmp	r2, #1
    11d6:	d100      	bne.n	11da <wc_AesSetKey+0x8b2>
    11d8:	e640      	b.n	e5c <wc_AesSetKey+0x534>
    if (iv)
    11da:	9b02      	ldr	r3, [sp, #8]
    11dc:	2b00      	cmp	r3, #0
    11de:	d100      	bne.n	11e2 <wc_AesSetKey+0x8ba>
    11e0:	e75e      	b.n	10a0 <wc_AesSetKey+0x778>
        XMEMCPY(aes->reg, iv, AES_BLOCK_SIZE);
    11e2:	0038      	movs	r0, r7
    11e4:	0019      	movs	r1, r3
    11e6:	30f8      	adds	r0, #248	; 0xf8
    11e8:	2210      	movs	r2, #16
    11ea:	9b03      	ldr	r3, [sp, #12]
    11ec:	4798      	blx	r3
        return wc_AesSetIV(aes, iv);
    11ee:	2000      	movs	r0, #0
    11f0:	f7ff fbb1 	bl	956 <wc_AesSetKey+0x2e>
        aes->keylen = keylen;
    11f4:	23f4      	movs	r3, #244	; 0xf4
    11f6:	50fa      	str	r2, [r7, r3]
        aes->rounds = keylen/4 + 6;
    11f8:	220a      	movs	r2, #10
    11fa:	3b04      	subs	r3, #4
    11fc:	50c2      	str	r2, [r0, r3]
        XMEMCPY(rk, userKey, keylen);
    11fe:	4b0b      	ldr	r3, [pc, #44]	; (122c <wc_AesSetKey+0x904>)
    1200:	3206      	adds	r2, #6
    1202:	9303      	str	r3, [sp, #12]
        word32 *rk = aes->key;
    1204:	4680      	mov	r8, r0
        XMEMCPY(rk, userKey, keylen);
    1206:	4798      	blx	r3
    1208:	683b      	ldr	r3, [r7, #0]
        aes->rounds = keylen/4 + 6;
    120a:	2404      	movs	r4, #4
    120c:	ba1b      	rev	r3, r3
    120e:	603b      	str	r3, [r7, #0]
    1210:	687b      	ldr	r3, [r7, #4]
    1212:	ba1b      	rev	r3, r3
    1214:	607b      	str	r3, [r7, #4]
    1216:	f7ff fbbc 	bl	992 <wc_AesSetKey+0x6a>
    121a:	46c0      	nop			; (mov r8, r8)
    121c:	0000367c 	.word	0x0000367c
    1220:	0000249b 	.word	0x0000249b
    1224:	0000267c 	.word	0x0000267c
    1228:	00002698 	.word	0x00002698
    122c:	00002489 	.word	0x00002489
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1230:	48fe      	ldr	r0, [pc, #1016]	; (162c <wc_AesSetKey+0xd04>)
    1232:	21ff      	movs	r1, #255	; 0xff
    1234:	4683      	mov	fp, r0
                temp = rk[ 5];
    1236:	697a      	ldr	r2, [r7, #20]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1238:	23ff      	movs	r3, #255	; 0xff
    123a:	4011      	ands	r1, r2
    123c:	0089      	lsls	r1, r1, #2
    123e:	4459      	add	r1, fp
    1240:	6a8d      	ldr	r5, [r1, #40]	; 0x28
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1242:	2180      	movs	r1, #128	; 0x80
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1244:	021b      	lsls	r3, r3, #8
    1246:	401d      	ands	r5, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1248:	683b      	ldr	r3, [r7, #0]
    124a:	0449      	lsls	r1, r1, #17
    124c:	4059      	eors	r1, r3
    124e:	23ff      	movs	r3, #255	; 0xff
    1250:	0e14      	lsrs	r4, r2, #24
    1252:	3401      	adds	r4, #1
    1254:	34ff      	adds	r4, #255	; 0xff
    1256:	00a4      	lsls	r4, r4, #2
    1258:	445c      	add	r4, fp
    125a:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    125c:	4069      	eors	r1, r5
    125e:	401c      	ands	r4, r3
    1260:	4061      	eors	r1, r4
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1262:	0c14      	lsrs	r4, r2, #16
    1264:	401c      	ands	r4, r3
    1266:	3302      	adds	r3, #2
    1268:	33ff      	adds	r3, #255	; 0xff
    126a:	469c      	mov	ip, r3
    126c:	4464      	add	r4, ip
    126e:	00a4      	lsls	r4, r4, #2
    1270:	445c      	add	r4, fp
    1272:	6aa4      	ldr	r4, [r4, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1274:	3b02      	subs	r3, #2
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1276:	0e24      	lsrs	r4, r4, #24
    1278:	0624      	lsls	r4, r4, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    127a:	4061      	eors	r1, r4
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    127c:	3bff      	subs	r3, #255	; 0xff
    127e:	0a14      	lsrs	r4, r2, #8
    1280:	401c      	ands	r4, r3
    1282:	23c0      	movs	r3, #192	; 0xc0
    1284:	009b      	lsls	r3, r3, #2
    1286:	469c      	mov	ip, r3
    1288:	23ff      	movs	r3, #255	; 0xff
    128a:	4464      	add	r4, ip
    128c:	00a4      	lsls	r4, r4, #2
    128e:	445c      	add	r4, fp
    1290:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1292:	041b      	lsls	r3, r3, #16
    1294:	401c      	ands	r4, r3
                rk[ 7] = rk[ 1] ^ rk[ 6];
    1296:	687e      	ldr	r6, [r7, #4]
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1298:	4061      	eors	r1, r4
                rk[ 8] = rk[ 2] ^ rk[ 7];
    129a:	68bd      	ldr	r5, [r7, #8]
                rk[ 7] = rk[ 1] ^ rk[ 6];
    129c:	404e      	eors	r6, r1
                rk[ 9] = rk[ 3] ^ rk[ 8];
    129e:	68fc      	ldr	r4, [r7, #12]
                rk[ 8] = rk[ 2] ^ rk[ 7];
    12a0:	4075      	eors	r5, r6
                rk[10] = rk[ 4] ^ rk[ 9];
    12a2:	693b      	ldr	r3, [r7, #16]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    12a4:	406c      	eors	r4, r5
                rk[10] = rk[ 4] ^ rk[ 9];
    12a6:	4063      	eors	r3, r4
                rk[11] = rk[ 5] ^ rk[10];
    12a8:	405a      	eors	r2, r3
                rk[10] = rk[ 4] ^ rk[ 9];
    12aa:	469a      	mov	sl, r3
    12ac:	62bb      	str	r3, [r7, #40]	; 0x28
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    12ae:	0e13      	lsrs	r3, r2, #24
    12b0:	469c      	mov	ip, r3
    12b2:	2380      	movs	r3, #128	; 0x80
    12b4:	005b      	lsls	r3, r3, #1
    12b6:	4699      	mov	r9, r3
    12b8:	44cc      	add	ip, r9
    12ba:	4663      	mov	r3, ip
    12bc:	009b      	lsls	r3, r3, #2
    12be:	469c      	mov	ip, r3
    12c0:	44dc      	add	ip, fp
    12c2:	4663      	mov	r3, ip
    12c4:	9001      	str	r0, [sp, #4]
    12c6:	20ff      	movs	r0, #255	; 0xff
    12c8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                rk[ 6] = rk[ 0] ^
    12ca:	61b9      	str	r1, [r7, #24]
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    12cc:	4003      	ands	r3, r0
    12ce:	469c      	mov	ip, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    12d0:	23ff      	movs	r3, #255	; 0xff
    12d2:	4013      	ands	r3, r2
    12d4:	009b      	lsls	r3, r3, #2
    12d6:	4699      	mov	r9, r3
    12d8:	44d9      	add	r9, fp
    12da:	464b      	mov	r3, r9
    12dc:	20ff      	movs	r0, #255	; 0xff
    12de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    12e0:	0200      	lsls	r0, r0, #8
    12e2:	4003      	ands	r3, r0
    12e4:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    12e6:	4663      	mov	r3, ip
    12e8:	4648      	mov	r0, r9
    12ea:	4303      	orrs	r3, r0
    12ec:	4699      	mov	r9, r3
    12ee:	2380      	movs	r3, #128	; 0x80
    12f0:	049b      	lsls	r3, r3, #18
    12f2:	469c      	mov	ip, r3
    12f4:	464b      	mov	r3, r9
    12f6:	4660      	mov	r0, ip
    12f8:	4043      	eors	r3, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    12fa:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    12fc:	4699      	mov	r9, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    12fe:	0c13      	lsrs	r3, r2, #16
    1300:	4003      	ands	r3, r0
    1302:	469b      	mov	fp, r3
    1304:	2380      	movs	r3, #128	; 0x80
    1306:	009b      	lsls	r3, r3, #2
    1308:	469c      	mov	ip, r3
    130a:	44e3      	add	fp, ip
    130c:	465b      	mov	r3, fp
    130e:	9801      	ldr	r0, [sp, #4]
    1310:	009b      	lsls	r3, r3, #2
    1312:	4684      	mov	ip, r0
    1314:	469b      	mov	fp, r3
    1316:	44e3      	add	fp, ip
    1318:	465b      	mov	r3, fp
    131a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                rk[ 7] = rk[ 1] ^ rk[ 6];
    131c:	61fe      	str	r6, [r7, #28]
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    131e:	0e1b      	lsrs	r3, r3, #24
    1320:	061b      	lsls	r3, r3, #24
    1322:	469c      	mov	ip, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1324:	464b      	mov	r3, r9
    1326:	4660      	mov	r0, ip
    1328:	4043      	eors	r3, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    132a:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    132c:	4699      	mov	r9, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    132e:	0a13      	lsrs	r3, r2, #8
    1330:	4003      	ands	r3, r0
    1332:	469b      	mov	fp, r3
    1334:	23c0      	movs	r3, #192	; 0xc0
    1336:	009b      	lsls	r3, r3, #2
    1338:	469c      	mov	ip, r3
    133a:	44e3      	add	fp, ip
    133c:	465b      	mov	r3, fp
    133e:	009b      	lsls	r3, r3, #2
    1340:	469b      	mov	fp, r3
    1342:	9b01      	ldr	r3, [sp, #4]
    1344:	20ff      	movs	r0, #255	; 0xff
    1346:	469c      	mov	ip, r3
    1348:	44e3      	add	fp, ip
    134a:	465b      	mov	r3, fp
    134c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    134e:	0400      	lsls	r0, r0, #16
    1350:	4003      	ands	r3, r0
    1352:	469c      	mov	ip, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1354:	464b      	mov	r3, r9
    1356:	4660      	mov	r0, ip
    1358:	4043      	eors	r3, r0
    135a:	4059      	eors	r1, r3
                rk[10] = rk[ 4] ^ rk[ 9];
    135c:	4653      	mov	r3, sl
                rk[ 7] = rk[ 1] ^ rk[ 6];
    135e:	404e      	eors	r6, r1
                rk[ 8] = rk[ 2] ^ rk[ 7];
    1360:	623d      	str	r5, [r7, #32]
    1362:	4075      	eors	r5, r6
                rk[ 9] = rk[ 3] ^ rk[ 8];
    1364:	627c      	str	r4, [r7, #36]	; 0x24
    1366:	406c      	eors	r4, r5
                rk[10] = rk[ 4] ^ rk[ 9];
    1368:	4063      	eors	r3, r4
                rk[11] = rk[ 5] ^ rk[10];
    136a:	62fa      	str	r2, [r7, #44]	; 0x2c
    136c:	405a      	eors	r2, r3
                rk[10] = rk[ 4] ^ rk[ 9];
    136e:	469a      	mov	sl, r3
    1370:	643b      	str	r3, [r7, #64]	; 0x40
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1372:	0e13      	lsrs	r3, r2, #24
    1374:	469c      	mov	ip, r3
    1376:	2380      	movs	r3, #128	; 0x80
    1378:	005b      	lsls	r3, r3, #1
    137a:	4699      	mov	r9, r3
    137c:	44cc      	add	ip, r9
    137e:	4663      	mov	r3, ip
    1380:	9801      	ldr	r0, [sp, #4]
    1382:	009b      	lsls	r3, r3, #2
    1384:	4681      	mov	r9, r0
    1386:	469c      	mov	ip, r3
    1388:	44cc      	add	ip, r9
    138a:	4663      	mov	r3, ip
    138c:	20ff      	movs	r0, #255	; 0xff
    138e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                rk[ 6] = rk[ 0] ^
    1390:	6339      	str	r1, [r7, #48]	; 0x30
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1392:	4003      	ands	r3, r0
    1394:	4699      	mov	r9, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1396:	23ff      	movs	r3, #255	; 0xff
    1398:	4013      	ands	r3, r2
    139a:	009b      	lsls	r3, r3, #2
                rk[ 7] = rk[ 1] ^ rk[ 6];
    139c:	637e      	str	r6, [r7, #52]	; 0x34
                rk[ 8] = rk[ 2] ^ rk[ 7];
    139e:	63bd      	str	r5, [r7, #56]	; 0x38
                rk[ 9] = rk[ 3] ^ rk[ 8];
    13a0:	63fc      	str	r4, [r7, #60]	; 0x3c
                rk[11] = rk[ 5] ^ rk[10];
    13a2:	647a      	str	r2, [r7, #68]	; 0x44
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    13a4:	469c      	mov	ip, r3
    13a6:	9b01      	ldr	r3, [sp, #4]
    13a8:	20ff      	movs	r0, #255	; 0xff
    13aa:	469b      	mov	fp, r3
    13ac:	44dc      	add	ip, fp
    13ae:	4663      	mov	r3, ip
    13b0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    13b2:	0200      	lsls	r0, r0, #8
    13b4:	4003      	ands	r3, r0
    13b6:	469c      	mov	ip, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    13b8:	464b      	mov	r3, r9
    13ba:	4660      	mov	r0, ip
    13bc:	4303      	orrs	r3, r0
    13be:	469c      	mov	ip, r3
    13c0:	2380      	movs	r3, #128	; 0x80
    13c2:	04db      	lsls	r3, r3, #19
    13c4:	4699      	mov	r9, r3
    13c6:	4663      	mov	r3, ip
    13c8:	4648      	mov	r0, r9
    13ca:	4043      	eors	r3, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    13cc:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    13ce:	469c      	mov	ip, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    13d0:	0c13      	lsrs	r3, r2, #16
    13d2:	4003      	ands	r3, r0
    13d4:	469b      	mov	fp, r3
    13d6:	2380      	movs	r3, #128	; 0x80
    13d8:	009b      	lsls	r3, r3, #2
    13da:	4699      	mov	r9, r3
    13dc:	44cb      	add	fp, r9
    13de:	465b      	mov	r3, fp
    13e0:	9801      	ldr	r0, [sp, #4]
    13e2:	009b      	lsls	r3, r3, #2
    13e4:	4681      	mov	r9, r0
    13e6:	469b      	mov	fp, r3
    13e8:	44cb      	add	fp, r9
    13ea:	465b      	mov	r3, fp
    13ec:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    13ee:	0e1b      	lsrs	r3, r3, #24
    13f0:	061b      	lsls	r3, r3, #24
    13f2:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    13f4:	4663      	mov	r3, ip
    13f6:	4648      	mov	r0, r9
    13f8:	4043      	eors	r3, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    13fa:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    13fc:	469c      	mov	ip, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    13fe:	0a13      	lsrs	r3, r2, #8
    1400:	4003      	ands	r3, r0
    1402:	469b      	mov	fp, r3
    1404:	23c0      	movs	r3, #192	; 0xc0
    1406:	009b      	lsls	r3, r3, #2
    1408:	4699      	mov	r9, r3
    140a:	44cb      	add	fp, r9
    140c:	465b      	mov	r3, fp
    140e:	009b      	lsls	r3, r3, #2
    1410:	469b      	mov	fp, r3
    1412:	9b01      	ldr	r3, [sp, #4]
    1414:	20ff      	movs	r0, #255	; 0xff
    1416:	4699      	mov	r9, r3
    1418:	44cb      	add	fp, r9
    141a:	465b      	mov	r3, fp
    141c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    141e:	0400      	lsls	r0, r0, #16
    1420:	4003      	ands	r3, r0
    1422:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1424:	4663      	mov	r3, ip
    1426:	4648      	mov	r0, r9
    1428:	4043      	eors	r3, r0
    142a:	404b      	eors	r3, r1
                rk[10] = rk[ 4] ^ rk[ 9];
    142c:	4651      	mov	r1, sl
                rk[ 7] = rk[ 1] ^ rk[ 6];
    142e:	405e      	eors	r6, r3
                rk[ 8] = rk[ 2] ^ rk[ 7];
    1430:	4075      	eors	r5, r6
                rk[ 9] = rk[ 3] ^ rk[ 8];
    1432:	406c      	eors	r4, r5
                rk[10] = rk[ 4] ^ rk[ 9];
    1434:	4061      	eors	r1, r4
                rk[11] = rk[ 5] ^ rk[10];
    1436:	404a      	eors	r2, r1
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1438:	4699      	mov	r9, r3
                rk[ 6] = rk[ 0] ^
    143a:	64bb      	str	r3, [r7, #72]	; 0x48
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    143c:	0e13      	lsrs	r3, r2, #24
    143e:	469c      	mov	ip, r3
    1440:	2380      	movs	r3, #128	; 0x80
    1442:	005b      	lsls	r3, r3, #1
    1444:	469a      	mov	sl, r3
    1446:	44d4      	add	ip, sl
    1448:	4663      	mov	r3, ip
    144a:	9801      	ldr	r0, [sp, #4]
    144c:	009b      	lsls	r3, r3, #2
    144e:	4683      	mov	fp, r0
    1450:	469c      	mov	ip, r3
    1452:	44dc      	add	ip, fp
    1454:	4663      	mov	r3, ip
                rk[10] = rk[ 4] ^ rk[ 9];
    1456:	9104      	str	r1, [sp, #16]
    1458:	65b9      	str	r1, [r7, #88]	; 0x58
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    145a:	21ff      	movs	r1, #255	; 0xff
    145c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                rk[ 7] = rk[ 1] ^ rk[ 6];
    145e:	64fe      	str	r6, [r7, #76]	; 0x4c
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1460:	400b      	ands	r3, r1
    1462:	469a      	mov	sl, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1464:	23ff      	movs	r3, #255	; 0xff
    1466:	4013      	ands	r3, r2
    1468:	009b      	lsls	r3, r3, #2
    146a:	469c      	mov	ip, r3
    146c:	44dc      	add	ip, fp
    146e:	4663      	mov	r3, ip
    1470:	0001      	movs	r1, r0
    1472:	20ff      	movs	r0, #255	; 0xff
    1474:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1476:	0200      	lsls	r0, r0, #8
    1478:	4003      	ands	r3, r0
    147a:	469c      	mov	ip, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    147c:	4653      	mov	r3, sl
    147e:	4660      	mov	r0, ip
    1480:	4303      	orrs	r3, r0
    1482:	469c      	mov	ip, r3
    1484:	2380      	movs	r3, #128	; 0x80
    1486:	051b      	lsls	r3, r3, #20
    1488:	469a      	mov	sl, r3
    148a:	4663      	mov	r3, ip
    148c:	4650      	mov	r0, sl
    148e:	4043      	eors	r3, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1490:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1492:	469c      	mov	ip, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1494:	0c13      	lsrs	r3, r2, #16
    1496:	4003      	ands	r3, r0
    1498:	469a      	mov	sl, r3
    149a:	2380      	movs	r3, #128	; 0x80
    149c:	009b      	lsls	r3, r3, #2
    149e:	469b      	mov	fp, r3
    14a0:	44da      	add	sl, fp
    14a2:	4653      	mov	r3, sl
    14a4:	009b      	lsls	r3, r3, #2
    14a6:	468b      	mov	fp, r1
    14a8:	469a      	mov	sl, r3
    14aa:	44da      	add	sl, fp
    14ac:	4653      	mov	r3, sl
    14ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                rk[ 8] = rk[ 2] ^ rk[ 7];
    14b0:	653d      	str	r5, [r7, #80]	; 0x50
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    14b2:	0e1b      	lsrs	r3, r3, #24
    14b4:	061b      	lsls	r3, r3, #24
    14b6:	469a      	mov	sl, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    14b8:	4663      	mov	r3, ip
    14ba:	4650      	mov	r0, sl
    14bc:	4043      	eors	r3, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    14be:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    14c0:	469c      	mov	ip, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    14c2:	0a13      	lsrs	r3, r2, #8
    14c4:	4003      	ands	r3, r0
    14c6:	469a      	mov	sl, r3
    14c8:	23c0      	movs	r3, #192	; 0xc0
    14ca:	009b      	lsls	r3, r3, #2
    14cc:	469b      	mov	fp, r3
    14ce:	44da      	add	sl, fp
    14d0:	4653      	mov	r3, sl
    14d2:	009b      	lsls	r3, r3, #2
    14d4:	468b      	mov	fp, r1
    14d6:	469a      	mov	sl, r3
    14d8:	44da      	add	sl, fp
    14da:	4653      	mov	r3, sl
    14dc:	20ff      	movs	r0, #255	; 0xff
    14de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    14e0:	0400      	lsls	r0, r0, #16
    14e2:	4003      	ands	r3, r0
    14e4:	469a      	mov	sl, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    14e6:	4663      	mov	r3, ip
    14e8:	4650      	mov	r0, sl
    14ea:	4043      	eors	r3, r0
    14ec:	469c      	mov	ip, r3
    14ee:	464b      	mov	r3, r9
    14f0:	4660      	mov	r0, ip
    14f2:	4043      	eors	r3, r0
                rk[ 7] = rk[ 1] ^ rk[ 6];
    14f4:	405e      	eors	r6, r3
                rk[ 8] = rk[ 2] ^ rk[ 7];
    14f6:	4075      	eors	r5, r6
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    14f8:	469c      	mov	ip, r3
                rk[ 6] = rk[ 0] ^
    14fa:	663b      	str	r3, [r7, #96]	; 0x60
                rk[10] = rk[ 4] ^ rk[ 9];
    14fc:	9b04      	ldr	r3, [sp, #16]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    14fe:	657c      	str	r4, [r7, #84]	; 0x54
    1500:	406c      	eors	r4, r5
                rk[10] = rk[ 4] ^ rk[ 9];
    1502:	4063      	eors	r3, r4
                rk[11] = rk[ 5] ^ rk[10];
    1504:	65fa      	str	r2, [r7, #92]	; 0x5c
    1506:	405a      	eors	r2, r3
                rk[10] = rk[ 4] ^ rk[ 9];
    1508:	9304      	str	r3, [sp, #16]
    150a:	673b      	str	r3, [r7, #112]	; 0x70
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    150c:	0e13      	lsrs	r3, r2, #24
    150e:	4699      	mov	r9, r3
    1510:	2380      	movs	r3, #128	; 0x80
    1512:	005b      	lsls	r3, r3, #1
    1514:	469a      	mov	sl, r3
    1516:	44d1      	add	r9, sl
    1518:	464b      	mov	r3, r9
    151a:	009b      	lsls	r3, r3, #2
    151c:	4699      	mov	r9, r3
    151e:	44d9      	add	r9, fp
    1520:	464b      	mov	r3, r9
    1522:	21ff      	movs	r1, #255	; 0xff
    1524:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1526:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1528:	400b      	ands	r3, r1
    152a:	4699      	mov	r9, r3
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    152c:	23ff      	movs	r3, #255	; 0xff
    152e:	4013      	ands	r3, r2
    1530:	009b      	lsls	r3, r3, #2
    1532:	469a      	mov	sl, r3
    1534:	44da      	add	sl, fp
    1536:	4653      	mov	r3, sl
    1538:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    153a:	0200      	lsls	r0, r0, #8
    153c:	4003      	ands	r3, r0
    153e:	469a      	mov	sl, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1540:	464b      	mov	r3, r9
    1542:	4650      	mov	r0, sl
    1544:	4303      	orrs	r3, r0
    1546:	469a      	mov	sl, r3
    1548:	2380      	movs	r3, #128	; 0x80
    154a:	055b      	lsls	r3, r3, #21
    154c:	4699      	mov	r9, r3
    154e:	4653      	mov	r3, sl
    1550:	4648      	mov	r0, r9
    1552:	4043      	eors	r3, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1554:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1556:	469a      	mov	sl, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1558:	0c13      	lsrs	r3, r2, #16
    155a:	4003      	ands	r3, r0
    155c:	4699      	mov	r9, r3
    155e:	2380      	movs	r3, #128	; 0x80
    1560:	009b      	lsls	r3, r3, #2
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    1562:	4659      	mov	r1, fp
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1564:	469b      	mov	fp, r3
    1566:	44d9      	add	r9, fp
    1568:	464b      	mov	r3, r9
    156a:	009b      	lsls	r3, r3, #2
    156c:	468b      	mov	fp, r1
    156e:	4699      	mov	r9, r3
    1570:	44d9      	add	r9, fp
    1572:	464b      	mov	r3, r9
    1574:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                rk[ 7] = rk[ 1] ^ rk[ 6];
    1576:	667e      	str	r6, [r7, #100]	; 0x64
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1578:	0e1b      	lsrs	r3, r3, #24
    157a:	061b      	lsls	r3, r3, #24
    157c:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    157e:	4653      	mov	r3, sl
    1580:	4648      	mov	r0, r9
    1582:	4043      	eors	r3, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1584:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1586:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1588:	0a13      	lsrs	r3, r2, #8
    158a:	4003      	ands	r3, r0
    158c:	4699      	mov	r9, r3
    158e:	23c0      	movs	r3, #192	; 0xc0
    1590:	009b      	lsls	r3, r3, #2
    1592:	469b      	mov	fp, r3
    1594:	44d9      	add	r9, fp
    1596:	464b      	mov	r3, r9
    1598:	009b      	lsls	r3, r3, #2
    159a:	468b      	mov	fp, r1
    159c:	4699      	mov	r9, r3
    159e:	44d9      	add	r9, fp
    15a0:	464b      	mov	r3, r9
    15a2:	20ff      	movs	r0, #255	; 0xff
    15a4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    15a6:	0400      	lsls	r0, r0, #16
    15a8:	4003      	ands	r3, r0
    15aa:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    15ac:	4653      	mov	r3, sl
    15ae:	4648      	mov	r0, r9
    15b0:	4043      	eors	r3, r0
    15b2:	469a      	mov	sl, r3
    15b4:	4663      	mov	r3, ip
    15b6:	4650      	mov	r0, sl
    15b8:	4043      	eors	r3, r0
                rk[ 7] = rk[ 1] ^ rk[ 6];
    15ba:	405e      	eors	r6, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    15bc:	469c      	mov	ip, r3
                rk[ 6] = rk[ 0] ^
    15be:	67bb      	str	r3, [r7, #120]	; 0x78
                rk[ 8] = rk[ 2] ^ rk[ 7];
    15c0:	2380      	movs	r3, #128	; 0x80
    15c2:	66bd      	str	r5, [r7, #104]	; 0x68
    15c4:	4075      	eors	r5, r6
                rk[ 9] = rk[ 3] ^ rk[ 8];
    15c6:	66fc      	str	r4, [r7, #108]	; 0x6c
                rk[11] = rk[ 5] ^ rk[10];
    15c8:	677a      	str	r2, [r7, #116]	; 0x74
                rk[ 7] = rk[ 1] ^ rk[ 6];
    15ca:	67fe      	str	r6, [r7, #124]	; 0x7c
                rk[ 8] = rk[ 2] ^ rk[ 7];
    15cc:	50fd      	str	r5, [r7, r3]
                rk[10] = rk[ 4] ^ rk[ 9];
    15ce:	9904      	ldr	r1, [sp, #16]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    15d0:	406c      	eors	r4, r5
    15d2:	3304      	adds	r3, #4
    15d4:	50fc      	str	r4, [r7, r3]
                rk[10] = rk[ 4] ^ rk[ 9];
    15d6:	4061      	eors	r1, r4
    15d8:	3304      	adds	r3, #4
    15da:	50f9      	str	r1, [r7, r3]
                rk[11] = rk[ 5] ^ rk[10];
    15dc:	404a      	eors	r2, r1
    15de:	3304      	adds	r3, #4
    15e0:	50fa      	str	r2, [r7, r3]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    15e2:	3373      	adds	r3, #115	; 0x73
    15e4:	4013      	ands	r3, r2
    15e6:	009b      	lsls	r3, r3, #2
    15e8:	4699      	mov	r9, r3
    15ea:	44d9      	add	r9, fp
    15ec:	464b      	mov	r3, r9
    15ee:	20ff      	movs	r0, #255	; 0xff
    15f0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    15f2:	0200      	lsls	r0, r0, #8
    15f4:	4003      	ands	r3, r0
    15f6:	469b      	mov	fp, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    15f8:	0e13      	lsrs	r3, r2, #24
    15fa:	4699      	mov	r9, r3
    15fc:	2380      	movs	r3, #128	; 0x80
    15fe:	005b      	lsls	r3, r3, #1
    1600:	469a      	mov	sl, r3
    1602:	44d1      	add	r9, sl
    1604:	464b      	mov	r3, r9
    1606:	009b      	lsls	r3, r3, #2
    1608:	4699      	mov	r9, r3
    160a:	9b01      	ldr	r3, [sp, #4]
    160c:	20ff      	movs	r0, #255	; 0xff
    160e:	469a      	mov	sl, r3
    1610:	44d1      	add	r9, sl
    1612:	464b      	mov	r3, r9
    1614:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1616:	4003      	ands	r3, r0
    1618:	469a      	mov	sl, r3
    161a:	465b      	mov	r3, fp
    161c:	4650      	mov	r0, sl
    161e:	4303      	orrs	r3, r0
    1620:	469b      	mov	fp, r3
    1622:	2380      	movs	r3, #128	; 0x80
    1624:	059b      	lsls	r3, r3, #22
    1626:	469a      	mov	sl, r3
    1628:	e002      	b.n	1630 <wc_AesSetKey+0xd08>
    162a:	46c0      	nop			; (mov r8, r8)
    162c:	0000267c 	.word	0x0000267c
    1630:	465b      	mov	r3, fp
    1632:	4650      	mov	r0, sl
    1634:	4043      	eors	r3, r0
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1636:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1638:	469a      	mov	sl, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    163a:	0c13      	lsrs	r3, r2, #16
    163c:	4003      	ands	r3, r0
    163e:	4699      	mov	r9, r3
    1640:	2380      	movs	r3, #128	; 0x80
    1642:	009b      	lsls	r3, r3, #2
    1644:	469b      	mov	fp, r3
    1646:	44d9      	add	r9, fp
    1648:	464b      	mov	r3, r9
    164a:	9801      	ldr	r0, [sp, #4]
    164c:	009b      	lsls	r3, r3, #2
    164e:	4683      	mov	fp, r0
    1650:	4699      	mov	r9, r3
    1652:	44d9      	add	r9, fp
    1654:	464b      	mov	r3, r9
    1656:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1658:	0e1b      	lsrs	r3, r3, #24
    165a:	061b      	lsls	r3, r3, #24
    165c:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    165e:	4653      	mov	r3, sl
    1660:	4648      	mov	r0, r9
    1662:	4043      	eors	r3, r0
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1664:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1666:	469a      	mov	sl, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1668:	0a13      	lsrs	r3, r2, #8
    166a:	4003      	ands	r3, r0
    166c:	4699      	mov	r9, r3
    166e:	23c0      	movs	r3, #192	; 0xc0
    1670:	009b      	lsls	r3, r3, #2
    1672:	469b      	mov	fp, r3
    1674:	44d9      	add	r9, fp
    1676:	464b      	mov	r3, r9
    1678:	009b      	lsls	r3, r3, #2
    167a:	4699      	mov	r9, r3
    167c:	9b01      	ldr	r3, [sp, #4]
    167e:	20ff      	movs	r0, #255	; 0xff
    1680:	469b      	mov	fp, r3
    1682:	44d9      	add	r9, fp
    1684:	464b      	mov	r3, r9
    1686:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1688:	0400      	lsls	r0, r0, #16
    168a:	4003      	ands	r3, r0
    168c:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    168e:	4653      	mov	r3, sl
    1690:	4648      	mov	r0, r9
    1692:	4043      	eors	r3, r0
    1694:	469a      	mov	sl, r3
    1696:	4663      	mov	r3, ip
    1698:	4650      	mov	r0, sl
    169a:	4043      	eors	r3, r0
    169c:	469c      	mov	ip, r3
                rk[ 6] = rk[ 0] ^
    169e:	4660      	mov	r0, ip
    16a0:	2390      	movs	r3, #144	; 0x90
                rk[ 7] = rk[ 1] ^ rk[ 6];
    16a2:	4046      	eors	r6, r0
                rk[ 8] = rk[ 2] ^ rk[ 7];
    16a4:	4075      	eors	r5, r6
                rk[ 6] = rk[ 0] ^
    16a6:	50f8      	str	r0, [r7, r3]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    16a8:	406c      	eors	r4, r5
                rk[ 7] = rk[ 1] ^ rk[ 6];
    16aa:	2394      	movs	r3, #148	; 0x94
                rk[10] = rk[ 4] ^ rk[ 9];
    16ac:	4061      	eors	r1, r4
                rk[11] = rk[ 5] ^ rk[10];
    16ae:	404a      	eors	r2, r1
    16b0:	4692      	mov	sl, r2
                rk[ 7] = rk[ 1] ^ rk[ 6];
    16b2:	50fe      	str	r6, [r7, r3]
                rk[ 8] = rk[ 2] ^ rk[ 7];
    16b4:	3304      	adds	r3, #4
    16b6:	50fd      	str	r5, [r7, r3]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    16b8:	3304      	adds	r3, #4
    16ba:	50fc      	str	r4, [r7, r3]
                rk[10] = rk[ 4] ^ rk[ 9];
    16bc:	3304      	adds	r3, #4
    16be:	50f9      	str	r1, [r7, r3]
                rk[11] = rk[ 5] ^ rk[10];
    16c0:	22a4      	movs	r2, #164	; 0xa4
    16c2:	4653      	mov	r3, sl
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    16c4:	20ff      	movs	r0, #255	; 0xff
                rk[11] = rk[ 5] ^ rk[10];
    16c6:	50bb      	str	r3, [r7, r2]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    16c8:	4652      	mov	r2, sl
    16ca:	23ff      	movs	r3, #255	; 0xff
    16cc:	4002      	ands	r2, r0
    16ce:	0092      	lsls	r2, r2, #2
    16d0:	445a      	add	r2, fp
    16d2:	6a92      	ldr	r2, [r2, #40]	; 0x28
    16d4:	021b      	lsls	r3, r3, #8
    16d6:	4013      	ands	r3, r2
    16d8:	4658      	mov	r0, fp
    16da:	46d9      	mov	r9, fp
    16dc:	469b      	mov	fp, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    16de:	4653      	mov	r3, sl
    16e0:	0e1a      	lsrs	r2, r3, #24
    16e2:	23ff      	movs	r3, #255	; 0xff
    16e4:	3201      	adds	r2, #1
    16e6:	32ff      	adds	r2, #255	; 0xff
    16e8:	0092      	lsls	r2, r2, #2
    16ea:	444a      	add	r2, r9
    16ec:	6a92      	ldr	r2, [r2, #40]	; 0x28
    16ee:	401a      	ands	r2, r3
    16f0:	465b      	mov	r3, fp
    16f2:	431a      	orrs	r2, r3
    16f4:	2380      	movs	r3, #128	; 0x80
    16f6:	05db      	lsls	r3, r3, #23
    16f8:	4053      	eors	r3, r2
    16fa:	4699      	mov	r9, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    16fc:	4653      	mov	r3, sl
    16fe:	0c1a      	lsrs	r2, r3, #16
    1700:	23ff      	movs	r3, #255	; 0xff
    1702:	401a      	ands	r2, r3
    1704:	3302      	adds	r3, #2
    1706:	33ff      	adds	r3, #255	; 0xff
    1708:	469b      	mov	fp, r3
    170a:	445a      	add	r2, fp
    170c:	4683      	mov	fp, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    170e:	464b      	mov	r3, r9
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1710:	0092      	lsls	r2, r2, #2
    1712:	445a      	add	r2, fp
    1714:	6a92      	ldr	r2, [r2, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    1716:	20ff      	movs	r0, #255	; 0xff
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    1718:	0e12      	lsrs	r2, r2, #24
    171a:	0612      	lsls	r2, r2, #24
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    171c:	405a      	eors	r2, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    171e:	4653      	mov	r3, sl
    1720:	0a1b      	lsrs	r3, r3, #8
    1722:	4003      	ands	r3, r0
    1724:	4699      	mov	r9, r3
    1726:	23c0      	movs	r3, #192	; 0xc0
    1728:	009b      	lsls	r3, r3, #2
    172a:	469b      	mov	fp, r3
    172c:	44d9      	add	r9, fp
    172e:	464b      	mov	r3, r9
    1730:	009b      	lsls	r3, r3, #2
    1732:	4699      	mov	r9, r3
    1734:	9b01      	ldr	r3, [sp, #4]
    1736:	20ff      	movs	r0, #255	; 0xff
    1738:	469b      	mov	fp, r3
    173a:	44d9      	add	r9, fp
    173c:	464b      	mov	r3, r9
    173e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1740:	0400      	lsls	r0, r0, #16
    1742:	4003      	ands	r3, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1744:	405a      	eors	r2, r3
    1746:	4663      	mov	r3, ip
    1748:	405a      	eors	r2, r3
                rk[ 6] = rk[ 0] ^
    174a:	23a8      	movs	r3, #168	; 0xa8
                rk[ 7] = rk[ 1] ^ rk[ 6];
    174c:	4056      	eors	r6, r2
                rk[ 6] = rk[ 0] ^
    174e:	50fa      	str	r2, [r7, r3]
                rk[ 7] = rk[ 1] ^ rk[ 6];
    1750:	3304      	adds	r3, #4
    1752:	50fe      	str	r6, [r7, r3]
                rk[ 8] = rk[ 2] ^ rk[ 7];
    1754:	4075      	eors	r5, r6
    1756:	3304      	adds	r3, #4
    1758:	50fd      	str	r5, [r7, r3]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    175a:	406c      	eors	r4, r5
    175c:	3304      	adds	r3, #4
    175e:	50fc      	str	r4, [r7, r3]
                rk[10] = rk[ 4] ^ rk[ 9];
    1760:	4061      	eors	r1, r4
    1762:	3304      	adds	r3, #4
    1764:	50f9      	str	r1, [r7, r3]
                rk[11] = rk[ 5] ^ rk[10];
    1766:	4653      	mov	r3, sl
    1768:	4059      	eors	r1, r3
    176a:	23bc      	movs	r3, #188	; 0xbc
    176c:	50f9      	str	r1, [r7, r3]
                    (Te[0][GETBYTE(temp, 0)] & 0x0000ff00) ^
    176e:	3343      	adds	r3, #67	; 0x43
    1770:	400b      	ands	r3, r1
    1772:	009b      	lsls	r3, r3, #2
    1774:	469c      	mov	ip, r3
    1776:	44dc      	add	ip, fp
    1778:	4663      	mov	r3, ip
    177a:	20ff      	movs	r0, #255	; 0xff
    177c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    177e:	0200      	lsls	r0, r0, #8
    1780:	4003      	ands	r3, r0
    1782:	4699      	mov	r9, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    1784:	0e0b      	lsrs	r3, r1, #24
    1786:	469a      	mov	sl, r3
    1788:	2380      	movs	r3, #128	; 0x80
    178a:	005b      	lsls	r3, r3, #1
    178c:	469c      	mov	ip, r3
    178e:	44e2      	add	sl, ip
    1790:	4653      	mov	r3, sl
    1792:	009b      	lsls	r3, r3, #2
    1794:	469a      	mov	sl, r3
    1796:	44da      	add	sl, fp
    1798:	4653      	mov	r3, sl
    179a:	20ff      	movs	r0, #255	; 0xff
    179c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    179e:	4003      	ands	r3, r0
    17a0:	469c      	mov	ip, r3
    17a2:	464b      	mov	r3, r9
    17a4:	4660      	mov	r0, ip
    17a6:	4303      	orrs	r3, r0
    17a8:	4699      	mov	r9, r3
    17aa:	2380      	movs	r3, #128	; 0x80
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    17ac:	20ff      	movs	r0, #255	; 0xff
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    17ae:	061b      	lsls	r3, r3, #24
    17b0:	469c      	mov	ip, r3
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    17b2:	0c0b      	lsrs	r3, r1, #16
    17b4:	4003      	ands	r3, r0
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    17b6:	44e1      	add	r9, ip
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    17b8:	469c      	mov	ip, r3
    17ba:	2380      	movs	r3, #128	; 0x80
    17bc:	009b      	lsls	r3, r3, #2
    17be:	469a      	mov	sl, r3
    17c0:	44d4      	add	ip, sl
    17c2:	4663      	mov	r3, ip
    17c4:	009b      	lsls	r3, r3, #2
    17c6:	469c      	mov	ip, r3
    17c8:	44dc      	add	ip, fp
    17ca:	4663      	mov	r3, ip
    17cc:	6a9b      	ldr	r3, [r3, #40]	; 0x28
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    17ce:	0a09      	lsrs	r1, r1, #8
                    (Te[2][GETBYTE(temp, 2)] & 0xff000000) ^
    17d0:	0e1b      	lsrs	r3, r3, #24
    17d2:	061b      	lsls	r3, r3, #24
    17d4:	469c      	mov	ip, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    17d6:	464b      	mov	r3, r9
    17d8:	4660      	mov	r0, ip
    17da:	4043      	eors	r3, r0
    17dc:	469c      	mov	ip, r3
                    (Te[3][GETBYTE(temp, 1)] & 0x00ff0000) ^
    17de:	23c0      	movs	r3, #192	; 0xc0
    17e0:	20ff      	movs	r0, #255	; 0xff
    17e2:	009b      	lsls	r3, r3, #2
    17e4:	4699      	mov	r9, r3
    17e6:	23ff      	movs	r3, #255	; 0xff
    17e8:	4008      	ands	r0, r1
    17ea:	4448      	add	r0, r9
    17ec:	0080      	lsls	r0, r0, #2
    17ee:	4458      	add	r0, fp
    17f0:	6a81      	ldr	r1, [r0, #40]	; 0x28
    17f2:	041b      	lsls	r3, r3, #16
    17f4:	4019      	ands	r1, r3
                    (Te[1][GETBYTE(temp, 3)] & 0x000000ff) ^
    17f6:	4663      	mov	r3, ip
    17f8:	4059      	eors	r1, r3
    17fa:	404a      	eors	r2, r1
                rk[ 6] = rk[ 0] ^
    17fc:	21c0      	movs	r1, #192	; 0xc0
                rk[ 7] = rk[ 1] ^ rk[ 6];
    17fe:	4056      	eors	r6, r2
                rk[ 6] = rk[ 0] ^
    1800:	507a      	str	r2, [r7, r1]
                rk[ 7] = rk[ 1] ^ rk[ 6];
    1802:	22c4      	movs	r2, #196	; 0xc4
                rk[ 8] = rk[ 2] ^ rk[ 7];
    1804:	4075      	eors	r5, r6
                rk[ 7] = rk[ 1] ^ rk[ 6];
    1806:	50be      	str	r6, [r7, r2]
                rk[ 8] = rk[ 2] ^ rk[ 7];
    1808:	3204      	adds	r2, #4
    180a:	50bd      	str	r5, [r7, r2]
                rk[ 9] = rk[ 3] ^ rk[ 8];
    180c:	406c      	eors	r4, r5
    180e:	3204      	adds	r2, #4
    1810:	50bc      	str	r4, [r7, r2]
    1812:	e4de      	b.n	11d2 <wc_AesSetKey+0x8aa>

00001814 <wc_AesCbcEncrypt>:

#else

    /* Software AES - CBC Encrypt */
    int wc_AesCbcEncrypt(Aes* aes, byte* out, const byte* in, word32 sz)
    {
    1814:	b5f0      	push	{r4, r5, r6, r7, lr}
    1816:	4657      	mov	r7, sl
    1818:	46de      	mov	lr, fp
    181a:	464e      	mov	r6, r9
    181c:	4645      	mov	r5, r8
    181e:	b5e0      	push	{r5, r6, r7, lr}
    1820:	b091      	sub	sp, #68	; 0x44
    1822:	4682      	mov	sl, r0
    1824:	9106      	str	r1, [sp, #24]
    1826:	9203      	str	r2, [sp, #12]
        word32 blocks = (sz / AES_BLOCK_SIZE);
    1828:	091b      	lsrs	r3, r3, #4

        if (aes == NULL || out == NULL || in == NULL) {
    182a:	2800      	cmp	r0, #0
    182c:	d100      	bne.n	1830 <wc_AesCbcEncrypt+0x1c>
    182e:	e314      	b.n	1e5a <wc_AesCbcEncrypt+0x646>
    1830:	2900      	cmp	r1, #0
    1832:	d100      	bne.n	1836 <wc_AesCbcEncrypt+0x22>
    1834:	e311      	b.n	1e5a <wc_AesCbcEncrypt+0x646>
    1836:	2a00      	cmp	r2, #0
    1838:	d100      	bne.n	183c <wc_AesCbcEncrypt+0x28>
    183a:	e30e      	b.n	1e5a <wc_AesCbcEncrypt+0x646>

            return 0;
        }
    #endif

        while (blocks--) {
    183c:	2b00      	cmp	r3, #0
    183e:	d100      	bne.n	1842 <wc_AesCbcEncrypt+0x2e>
    1840:	e303      	b.n	1e4a <wc_AesCbcEncrypt+0x636>
    1842:	22f8      	movs	r2, #248	; 0xf8
    1844:	4452      	add	r2, sl
    1846:	9204      	str	r2, [sp, #16]
    1848:	9a03      	ldr	r2, [sp, #12]
    184a:	011b      	lsls	r3, r3, #4
    184c:	4694      	mov	ip, r2
    184e:	4463      	add	r3, ip
    1850:	9307      	str	r3, [sp, #28]
    1852:	4e70      	ldr	r6, [pc, #448]	; (1a14 <wc_AesCbcEncrypt+0x200>)
    1854:	9005      	str	r0, [sp, #20]
    1856:	e06d      	b.n	1934 <wc_AesCbcEncrypt+0x120>
    else {
        word32 i;
        byte*       b = (byte*)buf;
        const byte* m = (const byte*)mask;

        for (i = 0; i < count; i++) b[i] ^= m[i];
    1858:	20f8      	movs	r0, #248	; 0xf8
    185a:	9905      	ldr	r1, [sp, #20]
    185c:	32f5      	adds	r2, #245	; 0xf5
    185e:	5c8b      	ldrb	r3, [r1, r2]
    1860:	7822      	ldrb	r2, [r4, #0]
    1862:	4053      	eors	r3, r2
    1864:	22f9      	movs	r2, #249	; 0xf9
    1866:	540b      	strb	r3, [r1, r0]
    1868:	0008      	movs	r0, r1
    186a:	5c8b      	ldrb	r3, [r1, r2]
    186c:	7861      	ldrb	r1, [r4, #1]
    186e:	404b      	eors	r3, r1
    1870:	5483      	strb	r3, [r0, r2]
    1872:	3201      	adds	r2, #1
    1874:	78a1      	ldrb	r1, [r4, #2]
    1876:	5c83      	ldrb	r3, [r0, r2]
    1878:	404b      	eors	r3, r1
    187a:	5483      	strb	r3, [r0, r2]
    187c:	3201      	adds	r2, #1
    187e:	78e1      	ldrb	r1, [r4, #3]
    1880:	5c83      	ldrb	r3, [r0, r2]
    1882:	404b      	eors	r3, r1
    1884:	5483      	strb	r3, [r0, r2]
    1886:	3201      	adds	r2, #1
    1888:	7921      	ldrb	r1, [r4, #4]
    188a:	5c83      	ldrb	r3, [r0, r2]
    188c:	404b      	eors	r3, r1
    188e:	5483      	strb	r3, [r0, r2]
    1890:	3201      	adds	r2, #1
    1892:	7961      	ldrb	r1, [r4, #5]
    1894:	5c83      	ldrb	r3, [r0, r2]
    1896:	404b      	eors	r3, r1
    1898:	5483      	strb	r3, [r0, r2]
    189a:	3201      	adds	r2, #1
    189c:	79a1      	ldrb	r1, [r4, #6]
    189e:	5c83      	ldrb	r3, [r0, r2]
    18a0:	404b      	eors	r3, r1
    18a2:	5483      	strb	r3, [r0, r2]
    18a4:	3201      	adds	r2, #1
    18a6:	79e1      	ldrb	r1, [r4, #7]
    18a8:	5c83      	ldrb	r3, [r0, r2]
    18aa:	404b      	eors	r3, r1
    18ac:	5483      	strb	r3, [r0, r2]
    18ae:	3201      	adds	r2, #1
    18b0:	7a21      	ldrb	r1, [r4, #8]
    18b2:	5c83      	ldrb	r3, [r0, r2]
    18b4:	404b      	eors	r3, r1
    18b6:	5483      	strb	r3, [r0, r2]
    18b8:	2202      	movs	r2, #2
    18ba:	32ff      	adds	r2, #255	; 0xff
    18bc:	5c83      	ldrb	r3, [r0, r2]
    18be:	7a61      	ldrb	r1, [r4, #9]
    18c0:	404b      	eors	r3, r1
    18c2:	5483      	strb	r3, [r0, r2]
    18c4:	3201      	adds	r2, #1
    18c6:	5c83      	ldrb	r3, [r0, r2]
    18c8:	7aa1      	ldrb	r1, [r4, #10]
    18ca:	404b      	eors	r3, r1
    18cc:	5483      	strb	r3, [r0, r2]
    18ce:	2204      	movs	r2, #4
    18d0:	32ff      	adds	r2, #255	; 0xff
    18d2:	7ae1      	ldrb	r1, [r4, #11]
    18d4:	5c83      	ldrb	r3, [r0, r2]
    18d6:	404b      	eors	r3, r1
    18d8:	5483      	strb	r3, [r0, r2]
    18da:	3201      	adds	r2, #1
    18dc:	7b21      	ldrb	r1, [r4, #12]
    18de:	5c83      	ldrb	r3, [r0, r2]
    18e0:	404b      	eors	r3, r1
    18e2:	5483      	strb	r3, [r0, r2]
    18e4:	2206      	movs	r2, #6
    18e6:	32ff      	adds	r2, #255	; 0xff
    18e8:	7b61      	ldrb	r1, [r4, #13]
    18ea:	5c83      	ldrb	r3, [r0, r2]
    18ec:	404b      	eors	r3, r1
    18ee:	5483      	strb	r3, [r0, r2]
    18f0:	3201      	adds	r2, #1
    18f2:	7ba1      	ldrb	r1, [r4, #14]
    18f4:	5c83      	ldrb	r3, [r0, r2]
    18f6:	404b      	eors	r3, r1
    18f8:	5483      	strb	r3, [r0, r2]
    18fa:	2208      	movs	r2, #8
    18fc:	32ff      	adds	r2, #255	; 0xff
    18fe:	5c83      	ldrb	r3, [r0, r2]
    1900:	7be1      	ldrb	r1, [r4, #15]
    1902:	404b      	eors	r3, r1
    1904:	5483      	strb	r3, [r0, r2]
    word32 r = aes->rounds >> 1;
    1906:	23f0      	movs	r3, #240	; 0xf0
    1908:	9a05      	ldr	r2, [sp, #20]
    190a:	58d4      	ldr	r4, [r2, r3]
    190c:	0864      	lsrs	r4, r4, #1
    if (r > 7 || r == 0) {
    190e:	1e63      	subs	r3, r4, #1
    1910:	2b06      	cmp	r3, #6
    1912:	d944      	bls.n	199e <wc_AesCbcEncrypt+0x18a>
            xorbuf((byte*)aes->reg, in, AES_BLOCK_SIZE);
            wc_AesEncrypt(aes, (byte*)aes->reg, (byte*)aes->reg);
            XMEMCPY(out, aes->reg, AES_BLOCK_SIZE);
    1914:	9d06      	ldr	r5, [sp, #24]
    1916:	2210      	movs	r2, #16
    1918:	9904      	ldr	r1, [sp, #16]
    191a:	0028      	movs	r0, r5
    191c:	4c3e      	ldr	r4, [pc, #248]	; (1a18 <wc_AesCbcEncrypt+0x204>)
    191e:	47a0      	blx	r4

            out += AES_BLOCK_SIZE;
    1920:	002b      	movs	r3, r5
    1922:	3310      	adds	r3, #16
    1924:	9306      	str	r3, [sp, #24]
            in  += AES_BLOCK_SIZE;
    1926:	9b03      	ldr	r3, [sp, #12]
        while (blocks--) {
    1928:	9a07      	ldr	r2, [sp, #28]
            in  += AES_BLOCK_SIZE;
    192a:	3310      	adds	r3, #16
    192c:	9303      	str	r3, [sp, #12]
        while (blocks--) {
    192e:	4293      	cmp	r3, r2
    1930:	d100      	bne.n	1934 <wc_AesCbcEncrypt+0x120>
    1932:	e28a      	b.n	1e4a <wc_AesCbcEncrypt+0x636>
    if (((wolfssl_word)buf | (wolfssl_word)mask | count) % WOLFSSL_WORD_SIZE == 0)
    1934:	9c03      	ldr	r4, [sp, #12]
    1936:	9a04      	ldr	r2, [sp, #16]
    1938:	0023      	movs	r3, r4
    193a:	4313      	orrs	r3, r2
    193c:	2203      	movs	r2, #3
    193e:	421a      	tst	r2, r3
    1940:	d18a      	bne.n	1858 <wc_AesCbcEncrypt+0x44>
    for (i = 0; i < n; i++) r[i] ^= a[i];
    1942:	22f8      	movs	r2, #248	; 0xf8
    1944:	9905      	ldr	r1, [sp, #20]
    1946:	0020      	movs	r0, r4
    1948:	588b      	ldr	r3, [r1, r2]
    194a:	9301      	str	r3, [sp, #4]
    194c:	6823      	ldr	r3, [r4, #0]
    194e:	24f8      	movs	r4, #248	; 0xf8
    1950:	9302      	str	r3, [sp, #8]
    1952:	9a02      	ldr	r2, [sp, #8]
    1954:	9b01      	ldr	r3, [sp, #4]
    1956:	4053      	eors	r3, r2
    1958:	22fc      	movs	r2, #252	; 0xfc
    195a:	510b      	str	r3, [r1, r4]
    195c:	588b      	ldr	r3, [r1, r2]
    195e:	9301      	str	r3, [sp, #4]
    1960:	6843      	ldr	r3, [r0, #4]
    1962:	9302      	str	r3, [sp, #8]
    1964:	9c02      	ldr	r4, [sp, #8]
    1966:	9b01      	ldr	r3, [sp, #4]
    1968:	4063      	eors	r3, r4
    196a:	508b      	str	r3, [r1, r2]
    196c:	3204      	adds	r2, #4
    196e:	588b      	ldr	r3, [r1, r2]
    1970:	9301      	str	r3, [sp, #4]
    1972:	6883      	ldr	r3, [r0, #8]
    1974:	9302      	str	r3, [sp, #8]
    1976:	9c02      	ldr	r4, [sp, #8]
    1978:	9b01      	ldr	r3, [sp, #4]
    197a:	4063      	eors	r3, r4
    197c:	508b      	str	r3, [r1, r2]
    197e:	3204      	adds	r2, #4
    1980:	588b      	ldr	r3, [r1, r2]
    1982:	9301      	str	r3, [sp, #4]
    1984:	68c3      	ldr	r3, [r0, #12]
    1986:	9302      	str	r3, [sp, #8]
    1988:	9802      	ldr	r0, [sp, #8]
    198a:	9b01      	ldr	r3, [sp, #4]
    198c:	4043      	eors	r3, r0
    198e:	508b      	str	r3, [r1, r2]
    word32 r = aes->rounds >> 1;
    1990:	23f0      	movs	r3, #240	; 0xf0
    1992:	000a      	movs	r2, r1
    1994:	58d4      	ldr	r4, [r2, r3]
    1996:	0864      	lsrs	r4, r4, #1
    if (r > 7 || r == 0) {
    1998:	1e63      	subs	r3, r4, #1
    199a:	2b06      	cmp	r3, #6
    199c:	d8ba      	bhi.n	1914 <wc_AesCbcEncrypt+0x100>
    XMEMCPY(&s0, inBlock,                  sizeof(s0));
    199e:	2204      	movs	r2, #4
    19a0:	9904      	ldr	r1, [sp, #16]
    19a2:	4b1d      	ldr	r3, [pc, #116]	; (1a18 <wc_AesCbcEncrypt+0x204>)
    19a4:	a80c      	add	r0, sp, #48	; 0x30
    19a6:	4798      	blx	r3
    XMEMCPY(&s1, inBlock + sizeof(s0),     sizeof(s1));
    19a8:	9d05      	ldr	r5, [sp, #20]
    19aa:	2204      	movs	r2, #4
    19ac:	002b      	movs	r3, r5
    19ae:	33fc      	adds	r3, #252	; 0xfc
    19b0:	0019      	movs	r1, r3
    19b2:	9308      	str	r3, [sp, #32]
    19b4:	a80d      	add	r0, sp, #52	; 0x34
    19b6:	4b18      	ldr	r3, [pc, #96]	; (1a18 <wc_AesCbcEncrypt+0x204>)
    19b8:	4798      	blx	r3
    XMEMCPY(&s2, inBlock + 2 * sizeof(s0), sizeof(s2));
    19ba:	002b      	movs	r3, r5
    19bc:	3301      	adds	r3, #1
    19be:	33ff      	adds	r3, #255	; 0xff
    19c0:	0019      	movs	r1, r3
    19c2:	9309      	str	r3, [sp, #36]	; 0x24
    19c4:	2204      	movs	r2, #4
    19c6:	4b14      	ldr	r3, [pc, #80]	; (1a18 <wc_AesCbcEncrypt+0x204>)
    19c8:	a80e      	add	r0, sp, #56	; 0x38
    19ca:	4798      	blx	r3
    XMEMCPY(&s3, inBlock + 3 * sizeof(s0), sizeof(s3));
    19cc:	002b      	movs	r3, r5
    19ce:	3305      	adds	r3, #5
    19d0:	33ff      	adds	r3, #255	; 0xff
    19d2:	0019      	movs	r1, r3
    19d4:	930a      	str	r3, [sp, #40]	; 0x28
    19d6:	2204      	movs	r2, #4
    19d8:	4b0f      	ldr	r3, [pc, #60]	; (1a18 <wc_AesCbcEncrypt+0x204>)
    19da:	a80f      	add	r0, sp, #60	; 0x3c
    19dc:	4798      	blx	r3
    19de:	9b0c      	ldr	r3, [sp, #48]	; 0x30
    s0 ^= rk[0];
    19e0:	682f      	ldr	r7, [r5, #0]
    19e2:	ba18      	rev	r0, r3
    19e4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
    19e6:	4078      	eors	r0, r7
    s1 ^= rk[1];
    19e8:	686f      	ldr	r7, [r5, #4]
    19ea:	ba19      	rev	r1, r3
    19ec:	9b0e      	ldr	r3, [sp, #56]	; 0x38
    19ee:	4079      	eors	r1, r7
    s2 ^= rk[2];
    19f0:	68af      	ldr	r7, [r5, #8]
    19f2:	ba1a      	rev	r2, r3
    19f4:	4057      	eors	r7, r2
    19f6:	46bc      	mov	ip, r7
    19f8:	46a9      	mov	r9, r5
    19fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
    s3 ^= rk[3];
    19fc:	68ea      	ldr	r2, [r5, #12]
    19fe:	ba1b      	rev	r3, r3
    1a00:	405a      	eors	r2, r3
    1a02:	0164      	lsls	r4, r4, #5
            Te[3][GETBYTE(s3, 0)]  ^
    1a04:	46a8      	mov	r8, r5
    1a06:	44a1      	add	r9, r4
    1a08:	27ff      	movs	r7, #255	; 0xff
    1a0a:	9001      	str	r0, [sp, #4]
    1a0c:	0013      	movs	r3, r2
    1a0e:	4665      	mov	r5, ip
    1a10:	e095      	b.n	1b3e <wc_AesCbcEncrypt+0x32a>
    1a12:	46c0      	nop			; (mov r8, r8)
    1a14:	0000267c 	.word	0x0000267c
    1a18:	00002489 	.word	0x00002489
            Te[0][GETBYTE(t0, 3)] ^
    1a1c:	9a02      	ldr	r2, [sp, #8]
            Te[3][GETBYTE(t3, 0)] ^
    1a1e:	0039      	movs	r1, r7
            Te[0][GETBYTE(t0, 3)] ^
    1a20:	0e10      	lsrs	r0, r2, #24
            Te[3][GETBYTE(t3, 0)] ^
    1a22:	22c0      	movs	r2, #192	; 0xc0
    1a24:	0092      	lsls	r2, r2, #2
    1a26:	4692      	mov	sl, r2
    1a28:	4642      	mov	r2, r8
    1a2a:	4019      	ands	r1, r3
    1a2c:	4451      	add	r1, sl
            Te[0][GETBYTE(t0, 3)] ^
    1a2e:	0080      	lsls	r0, r0, #2
            Te[3][GETBYTE(t3, 0)] ^
    1a30:	0089      	lsls	r1, r1, #2
            Te[0][GETBYTE(t0, 3)] ^
    1a32:	1830      	adds	r0, r6, r0
            Te[3][GETBYTE(t3, 0)] ^
    1a34:	1871      	adds	r1, r6, r1
    1a36:	6a89      	ldr	r1, [r1, #40]	; 0x28
    1a38:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1a3a:	6812      	ldr	r2, [r2, #0]
    1a3c:	4048      	eors	r0, r1
    1a3e:	4050      	eors	r0, r2
            Te[2][GETBYTE(t2, 1)] ^
    1a40:	4662      	mov	r2, ip
            Te[3][GETBYTE(t0, 0)] ^
    1a42:	003d      	movs	r5, r7
            Te[1][GETBYTE(t1, 2)] ^
    1a44:	0c21      	lsrs	r1, r4, #16
    1a46:	4039      	ands	r1, r7
    1a48:	3101      	adds	r1, #1
    1a4a:	31ff      	adds	r1, #255	; 0xff
    1a4c:	0089      	lsls	r1, r1, #2
    1a4e:	1871      	adds	r1, r6, r1
            Te[3][GETBYTE(t3, 0)] ^
    1a50:	6a89      	ldr	r1, [r1, #40]	; 0x28
    1a52:	4048      	eors	r0, r1
            Te[2][GETBYTE(t2, 1)] ^
    1a54:	0a11      	lsrs	r1, r2, #8
            Te[3][GETBYTE(t0, 0)] ^
    1a56:	9a02      	ldr	r2, [sp, #8]
            Te[2][GETBYTE(t2, 1)] ^
    1a58:	4039      	ands	r1, r7
            Te[3][GETBYTE(t0, 0)] ^
    1a5a:	4015      	ands	r5, r2
    1a5c:	22c0      	movs	r2, #192	; 0xc0
    1a5e:	0092      	lsls	r2, r2, #2
    1a60:	4692      	mov	sl, r2
    1a62:	4642      	mov	r2, r8
            Te[2][GETBYTE(t2, 1)] ^
    1a64:	4459      	add	r1, fp
    1a66:	0089      	lsls	r1, r1, #2
    1a68:	1871      	adds	r1, r6, r1
            Te[3][GETBYTE(t3, 0)] ^
    1a6a:	6a89      	ldr	r1, [r1, #40]	; 0x28
            Te[3][GETBYTE(t0, 0)] ^
    1a6c:	4455      	add	r5, sl
            Te[3][GETBYTE(t3, 0)] ^
    1a6e:	4048      	eors	r0, r1
            Te[0][GETBYTE(t1, 3)] ^
    1a70:	0e21      	lsrs	r1, r4, #24
    1a72:	0089      	lsls	r1, r1, #2
            Te[3][GETBYTE(t0, 0)] ^
    1a74:	00ad      	lsls	r5, r5, #2
            Te[0][GETBYTE(t1, 3)] ^
    1a76:	1871      	adds	r1, r6, r1
            Te[3][GETBYTE(t0, 0)] ^
    1a78:	1975      	adds	r5, r6, r5
    1a7a:	6aad      	ldr	r5, [r5, #40]	; 0x28
    1a7c:	6a89      	ldr	r1, [r1, #40]	; 0x28
    1a7e:	6852      	ldr	r2, [r2, #4]
    1a80:	4069      	eors	r1, r5
    1a82:	4051      	eors	r1, r2
            Te[1][GETBYTE(t2, 2)] ^
    1a84:	4662      	mov	r2, ip
    1a86:	0c15      	lsrs	r5, r2, #16
            Te[0][GETBYTE(t2, 3)] ^
    1a88:	4662      	mov	r2, ip
            Te[1][GETBYTE(t2, 2)] ^
    1a8a:	403d      	ands	r5, r7
    1a8c:	3501      	adds	r5, #1
    1a8e:	35ff      	adds	r5, #255	; 0xff
    1a90:	00ad      	lsls	r5, r5, #2
    1a92:	1975      	adds	r5, r6, r5
            Te[3][GETBYTE(t0, 0)] ^
    1a94:	6aad      	ldr	r5, [r5, #40]	; 0x28
            Te[3][GETBYTE(t3, 0)] ^
    1a96:	9001      	str	r0, [sp, #4]
            Te[3][GETBYTE(t0, 0)] ^
    1a98:	4069      	eors	r1, r5
            Te[2][GETBYTE(t3, 1)] ^
    1a9a:	0a1d      	lsrs	r5, r3, #8
    1a9c:	403d      	ands	r5, r7
    1a9e:	445d      	add	r5, fp
    1aa0:	00ad      	lsls	r5, r5, #2
    1aa2:	1975      	adds	r5, r6, r5
            Te[3][GETBYTE(t0, 0)] ^
    1aa4:	6aad      	ldr	r5, [r5, #40]	; 0x28
    1aa6:	4069      	eors	r1, r5
            Te[0][GETBYTE(t2, 3)] ^
    1aa8:	0e15      	lsrs	r5, r2, #24
            Te[3][GETBYTE(t1, 0)] ^
    1aaa:	22c0      	movs	r2, #192	; 0xc0
            Te[0][GETBYTE(t2, 3)] ^
    1aac:	00ad      	lsls	r5, r5, #2
    1aae:	46aa      	mov	sl, r5
            Te[3][GETBYTE(t1, 0)] ^
    1ab0:	0092      	lsls	r2, r2, #2
    1ab2:	003d      	movs	r5, r7
    1ab4:	4693      	mov	fp, r2
            Te[0][GETBYTE(t2, 3)] ^
    1ab6:	44b2      	add	sl, r6
            Te[3][GETBYTE(t1, 0)] ^
    1ab8:	4652      	mov	r2, sl
    1aba:	4025      	ands	r5, r4
    1abc:	445d      	add	r5, fp
    1abe:	00ad      	lsls	r5, r5, #2
    1ac0:	1975      	adds	r5, r6, r5
    1ac2:	6a92      	ldr	r2, [r2, #40]	; 0x28
    1ac4:	6aad      	ldr	r5, [r5, #40]	; 0x28
            Te[2][GETBYTE(t1, 1)] ^
    1ac6:	0a24      	lsrs	r4, r4, #8
            Te[3][GETBYTE(t1, 0)] ^
    1ac8:	4055      	eors	r5, r2
    1aca:	4642      	mov	r2, r8
    1acc:	6890      	ldr	r0, [r2, #8]
            Te[2][GETBYTE(t0, 1)] ^
    1ace:	2280      	movs	r2, #128	; 0x80
            Te[3][GETBYTE(t1, 0)] ^
    1ad0:	4068      	eors	r0, r5
            Te[1][GETBYTE(t3, 2)] ^
    1ad2:	0c1d      	lsrs	r5, r3, #16
    1ad4:	403d      	ands	r5, r7
    1ad6:	3501      	adds	r5, #1
    1ad8:	35ff      	adds	r5, #255	; 0xff
    1ada:	00ad      	lsls	r5, r5, #2
    1adc:	1975      	adds	r5, r6, r5
            Te[3][GETBYTE(t1, 0)] ^
    1ade:	6aad      	ldr	r5, [r5, #40]	; 0x28
            Te[2][GETBYTE(t0, 1)] ^
    1ae0:	0092      	lsls	r2, r2, #2
            Te[3][GETBYTE(t1, 0)] ^
    1ae2:	4068      	eors	r0, r5
    1ae4:	4682      	mov	sl, r0
            Te[2][GETBYTE(t0, 1)] ^
    1ae6:	4693      	mov	fp, r2
            Te[3][GETBYTE(t1, 0)] ^
    1ae8:	4652      	mov	r2, sl
            Te[2][GETBYTE(t0, 1)] ^
    1aea:	9802      	ldr	r0, [sp, #8]
            Te[0][GETBYTE(t3, 3)] ^
    1aec:	0e1b      	lsrs	r3, r3, #24
            Te[2][GETBYTE(t0, 1)] ^
    1aee:	0a05      	lsrs	r5, r0, #8
    1af0:	403d      	ands	r5, r7
    1af2:	445d      	add	r5, fp
    1af4:	00ad      	lsls	r5, r5, #2
    1af6:	1975      	adds	r5, r6, r5
            Te[3][GETBYTE(t1, 0)] ^
    1af8:	6aad      	ldr	r5, [r5, #40]	; 0x28
            Te[0][GETBYTE(t3, 3)] ^
    1afa:	009b      	lsls	r3, r3, #2
            Te[3][GETBYTE(t1, 0)] ^
    1afc:	4055      	eors	r5, r2
            Te[3][GETBYTE(t2, 0)] ^
    1afe:	22c0      	movs	r2, #192	; 0xc0
            Te[0][GETBYTE(t3, 3)] ^
    1b00:	469a      	mov	sl, r3
            Te[3][GETBYTE(t2, 0)] ^
    1b02:	0092      	lsls	r2, r2, #2
    1b04:	4663      	mov	r3, ip
    1b06:	4694      	mov	ip, r2
            Te[0][GETBYTE(t3, 3)] ^
    1b08:	44b2      	add	sl, r6
            Te[3][GETBYTE(t2, 0)] ^
    1b0a:	4652      	mov	r2, sl
    1b0c:	403b      	ands	r3, r7
    1b0e:	4463      	add	r3, ip
    1b10:	009b      	lsls	r3, r3, #2
    1b12:	18f3      	adds	r3, r6, r3
    1b14:	6a92      	ldr	r2, [r2, #40]	; 0x28
    1b16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Te[2][GETBYTE(t1, 1)] ^
    1b18:	403c      	ands	r4, r7
            Te[3][GETBYTE(t2, 0)] ^
    1b1a:	4053      	eors	r3, r2
    1b1c:	4642      	mov	r2, r8
    1b1e:	68d2      	ldr	r2, [r2, #12]
            Te[2][GETBYTE(t1, 1)] ^
    1b20:	445c      	add	r4, fp
            Te[3][GETBYTE(t2, 0)] ^
    1b22:	4053      	eors	r3, r2
            Te[1][GETBYTE(t0, 2)] ^
    1b24:	0c02      	lsrs	r2, r0, #16
    1b26:	403a      	ands	r2, r7
    1b28:	3201      	adds	r2, #1
    1b2a:	32ff      	adds	r2, #255	; 0xff
    1b2c:	0092      	lsls	r2, r2, #2
    1b2e:	18b2      	adds	r2, r6, r2
            Te[3][GETBYTE(t2, 0)] ^
    1b30:	6a92      	ldr	r2, [r2, #40]	; 0x28
            Te[2][GETBYTE(t1, 1)] ^
    1b32:	00a4      	lsls	r4, r4, #2
    1b34:	1934      	adds	r4, r6, r4
            Te[3][GETBYTE(t2, 0)] ^
    1b36:	4053      	eors	r3, r2
    1b38:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    1b3a:	9801      	ldr	r0, [sp, #4]
    1b3c:	4053      	eors	r3, r2
            Te[0][GETBYTE(s0, 3)]  ^
    1b3e:	0e02      	lsrs	r2, r0, #24
            Te[3][GETBYTE(s3, 0)]  ^
    1b40:	20c0      	movs	r0, #192	; 0xc0
    1b42:	003c      	movs	r4, r7
    1b44:	0080      	lsls	r0, r0, #2
    1b46:	4684      	mov	ip, r0
        t0 =
    1b48:	4640      	mov	r0, r8
            Te[3][GETBYTE(s3, 0)]  ^
    1b4a:	401c      	ands	r4, r3
    1b4c:	4464      	add	r4, ip
            Te[0][GETBYTE(s0, 3)]  ^
    1b4e:	0092      	lsls	r2, r2, #2
            Te[3][GETBYTE(s3, 0)]  ^
    1b50:	00a4      	lsls	r4, r4, #2
            Te[0][GETBYTE(s0, 3)]  ^
    1b52:	18b2      	adds	r2, r6, r2
            Te[3][GETBYTE(s3, 0)]  ^
    1b54:	1934      	adds	r4, r6, r4
        t0 =
    1b56:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1b58:	6a92      	ldr	r2, [r2, #40]	; 0x28
    1b5a:	6900      	ldr	r0, [r0, #16]
    1b5c:	4062      	eors	r2, r4
    1b5e:	4042      	eors	r2, r0
            Te[2][GETBYTE(s2, 1)]  ^
    1b60:	2080      	movs	r0, #128	; 0x80
    1b62:	0080      	lsls	r0, r0, #2
    1b64:	4684      	mov	ip, r0
            Te[1][GETBYTE(s1, 2)]  ^
    1b66:	0c0c      	lsrs	r4, r1, #16
    1b68:	403c      	ands	r4, r7
    1b6a:	3401      	adds	r4, #1
    1b6c:	34ff      	adds	r4, #255	; 0xff
    1b6e:	00a4      	lsls	r4, r4, #2
    1b70:	1934      	adds	r4, r6, r4
        t0 =
    1b72:	6aa4      	ldr	r4, [r4, #40]	; 0x28
            Te[3][GETBYTE(s0, 0)]  ^
    1b74:	9801      	ldr	r0, [sp, #4]
        t0 =
    1b76:	4062      	eors	r2, r4
            Te[2][GETBYTE(s2, 1)]  ^
    1b78:	0a2c      	lsrs	r4, r5, #8
    1b7a:	403c      	ands	r4, r7
    1b7c:	4464      	add	r4, ip
    1b7e:	00a4      	lsls	r4, r4, #2
    1b80:	1934      	adds	r4, r6, r4
        t0 =
    1b82:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1b84:	4062      	eors	r2, r4
            Te[0][GETBYTE(s1, 3)]  ^
    1b86:	0e0c      	lsrs	r4, r1, #24
    1b88:	00a4      	lsls	r4, r4, #2
    1b8a:	46a4      	mov	ip, r4
            Te[3][GETBYTE(s0, 0)]  ^
    1b8c:	003c      	movs	r4, r7
    1b8e:	4004      	ands	r4, r0
    1b90:	20c0      	movs	r0, #192	; 0xc0
    1b92:	0080      	lsls	r0, r0, #2
    1b94:	4682      	mov	sl, r0
            Te[0][GETBYTE(s1, 3)]  ^
    1b96:	44b4      	add	ip, r6
        t1 =
    1b98:	4660      	mov	r0, ip
            Te[3][GETBYTE(s0, 0)]  ^
    1b9a:	4454      	add	r4, sl
    1b9c:	00a4      	lsls	r4, r4, #2
    1b9e:	1934      	adds	r4, r6, r4
        t1 =
    1ba0:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1ba2:	6aa4      	ldr	r4, [r4, #40]	; 0x28
        t0 =
    1ba4:	9202      	str	r2, [sp, #8]
        t1 =
    1ba6:	4044      	eors	r4, r0
    1ba8:	4640      	mov	r0, r8
    1baa:	6940      	ldr	r0, [r0, #20]
    1bac:	4060      	eors	r0, r4
            Te[1][GETBYTE(s2, 2)]  ^
    1bae:	0c2c      	lsrs	r4, r5, #16
    1bb0:	403c      	ands	r4, r7
    1bb2:	3401      	adds	r4, #1
    1bb4:	34ff      	adds	r4, #255	; 0xff
    1bb6:	00a4      	lsls	r4, r4, #2
    1bb8:	1934      	adds	r4, r6, r4
        t1 =
    1bba:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1bbc:	4060      	eors	r0, r4
    1bbe:	4684      	mov	ip, r0
            Te[2][GETBYTE(s3, 1)]  ^
    1bc0:	2080      	movs	r0, #128	; 0x80
    1bc2:	0080      	lsls	r0, r0, #2
    1bc4:	4682      	mov	sl, r0
        t1 =
    1bc6:	4660      	mov	r0, ip
            Te[2][GETBYTE(s3, 1)]  ^
    1bc8:	0a1c      	lsrs	r4, r3, #8
    1bca:	403c      	ands	r4, r7
    1bcc:	4454      	add	r4, sl
    1bce:	00a4      	lsls	r4, r4, #2
    1bd0:	1934      	adds	r4, r6, r4
        t1 =
    1bd2:	6aa4      	ldr	r4, [r4, #40]	; 0x28
    1bd4:	4044      	eors	r4, r0
            Te[0][GETBYTE(s2, 3)] ^
    1bd6:	0e28      	lsrs	r0, r5, #24
    1bd8:	0080      	lsls	r0, r0, #2
    1bda:	4684      	mov	ip, r0
            Te[3][GETBYTE(s1, 0)]  ^
    1bdc:	0038      	movs	r0, r7
    1bde:	4008      	ands	r0, r1
    1be0:	4682      	mov	sl, r0
    1be2:	20c0      	movs	r0, #192	; 0xc0
    1be4:	0080      	lsls	r0, r0, #2
    1be6:	4683      	mov	fp, r0
    1be8:	44da      	add	sl, fp
    1bea:	4650      	mov	r0, sl
            Te[0][GETBYTE(s2, 3)] ^
    1bec:	44b4      	add	ip, r6
            Te[3][GETBYTE(s1, 0)]  ^
    1bee:	0080      	lsls	r0, r0, #2
    1bf0:	4682      	mov	sl, r0
        t2 =
    1bf2:	4660      	mov	r0, ip
    1bf4:	6a80      	ldr	r0, [r0, #40]	; 0x28
            Te[3][GETBYTE(s1, 0)]  ^
    1bf6:	44b2      	add	sl, r6
        t2 =
    1bf8:	4684      	mov	ip, r0
    1bfa:	4650      	mov	r0, sl
    1bfc:	6a80      	ldr	r0, [r0, #40]	; 0x28
            Te[3][GETBYTE(s2, 0)]  ^
    1bfe:	403d      	ands	r5, r7
        t2 =
    1c00:	4682      	mov	sl, r0
    1c02:	4660      	mov	r0, ip
    1c04:	4652      	mov	r2, sl
    1c06:	4050      	eors	r0, r2
    1c08:	4642      	mov	r2, r8
    1c0a:	6992      	ldr	r2, [r2, #24]
            Te[2][GETBYTE(s1, 1)]  ^
    1c0c:	0a09      	lsrs	r1, r1, #8
        t2 =
    1c0e:	4050      	eors	r0, r2
            Te[1][GETBYTE(s3, 2)]  ^
    1c10:	0c1a      	lsrs	r2, r3, #16
        t2 =
    1c12:	4684      	mov	ip, r0
            Te[1][GETBYTE(s3, 2)]  ^
    1c14:	0010      	movs	r0, r2
    1c16:	2280      	movs	r2, #128	; 0x80
    1c18:	4038      	ands	r0, r7
    1c1a:	0052      	lsls	r2, r2, #1
    1c1c:	4693      	mov	fp, r2
    1c1e:	4682      	mov	sl, r0
    1c20:	44da      	add	sl, fp
    1c22:	4652      	mov	r2, sl
    1c24:	0092      	lsls	r2, r2, #2
    1c26:	4692      	mov	sl, r2
    1c28:	44b2      	add	sl, r6
        t2 =
    1c2a:	4652      	mov	r2, sl
    1c2c:	4660      	mov	r0, ip
    1c2e:	6a92      	ldr	r2, [r2, #40]	; 0x28
            Te[0][GETBYTE(s3, 3)] ^
    1c30:	0e1b      	lsrs	r3, r3, #24
        t2 =
    1c32:	4050      	eors	r0, r2
    1c34:	4684      	mov	ip, r0
            Te[2][GETBYTE(s0, 1)]  ^
    1c36:	9801      	ldr	r0, [sp, #4]
            Te[0][GETBYTE(s3, 3)] ^
    1c38:	009b      	lsls	r3, r3, #2
            Te[2][GETBYTE(s0, 1)]  ^
    1c3a:	0a02      	lsrs	r2, r0, #8
    1c3c:	0010      	movs	r0, r2
    1c3e:	2280      	movs	r2, #128	; 0x80
    1c40:	4038      	ands	r0, r7
    1c42:	0092      	lsls	r2, r2, #2
    1c44:	4693      	mov	fp, r2
    1c46:	4682      	mov	sl, r0
    1c48:	44da      	add	sl, fp
    1c4a:	4652      	mov	r2, sl
    1c4c:	0092      	lsls	r2, r2, #2
    1c4e:	4692      	mov	sl, r2
    1c50:	44b2      	add	sl, r6
        t2 =
    1c52:	4652      	mov	r2, sl
    1c54:	4660      	mov	r0, ip
    1c56:	6a92      	ldr	r2, [r2, #40]	; 0x28
            Te[0][GETBYTE(s3, 3)] ^
    1c58:	18f3      	adds	r3, r6, r3
        t2 =
    1c5a:	4050      	eors	r0, r2
            Te[3][GETBYTE(s2, 0)]  ^
    1c5c:	22c0      	movs	r2, #192	; 0xc0
    1c5e:	0092      	lsls	r2, r2, #2
    1c60:	4692      	mov	sl, r2
        t3 =
    1c62:	4642      	mov	r2, r8
            Te[3][GETBYTE(s2, 0)]  ^
    1c64:	4455      	add	r5, sl
    1c66:	00ad      	lsls	r5, r5, #2
    1c68:	1975      	adds	r5, r6, r5
        t3 =
    1c6a:	6aad      	ldr	r5, [r5, #40]	; 0x28
    1c6c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1c6e:	69d2      	ldr	r2, [r2, #28]
    1c70:	406b      	eors	r3, r5
    1c72:	4053      	eors	r3, r2
            Te[2][GETBYTE(s1, 1)]  ^
    1c74:	465a      	mov	r2, fp
        rk += 8;
    1c76:	3ae1      	subs	r2, #225	; 0xe1
    1c78:	3aff      	subs	r2, #255	; 0xff
    1c7a:	4692      	mov	sl, r2
            Te[1][GETBYTE(s0, 2)]  ^
    1c7c:	9d01      	ldr	r5, [sp, #4]
        t2 =
    1c7e:	4684      	mov	ip, r0
            Te[1][GETBYTE(s0, 2)]  ^
    1c80:	0c28      	lsrs	r0, r5, #16
    1c82:	4038      	ands	r0, r7
    1c84:	3001      	adds	r0, #1
    1c86:	30ff      	adds	r0, #255	; 0xff
            Te[2][GETBYTE(s1, 1)]  ^
    1c88:	4039      	ands	r1, r7
            Te[1][GETBYTE(s0, 2)]  ^
    1c8a:	0080      	lsls	r0, r0, #2
            Te[2][GETBYTE(s1, 1)]  ^
    1c8c:	4459      	add	r1, fp
            Te[1][GETBYTE(s0, 2)]  ^
    1c8e:	1830      	adds	r0, r6, r0
            Te[2][GETBYTE(s1, 1)]  ^
    1c90:	0089      	lsls	r1, r1, #2
        t3 =
    1c92:	6a80      	ldr	r0, [r0, #40]	; 0x28
            Te[2][GETBYTE(s1, 1)]  ^
    1c94:	1871      	adds	r1, r6, r1
        t3 =
    1c96:	6a89      	ldr	r1, [r1, #40]	; 0x28
    1c98:	4043      	eors	r3, r0
        rk += 8;
    1c9a:	44d0      	add	r8, sl
        t3 =
    1c9c:	404b      	eors	r3, r1
        if (--r == 0) {
    1c9e:	45c1      	cmp	r9, r8
    1ca0:	d000      	beq.n	1ca4 <wc_AesCbcEncrypt+0x490>
    1ca2:	e6bb      	b.n	1a1c <wc_AesCbcEncrypt+0x208>
        (Te[1][GETBYTE(t0, 0)] & 0x000000ff) ^
    1ca4:	0039      	movs	r1, r7
    1ca6:	4648      	mov	r0, r9
    1ca8:	4698      	mov	r8, r3
    1caa:	9b02      	ldr	r3, [sp, #8]
    1cac:	6840      	ldr	r0, [r0, #4]
    1cae:	4019      	ands	r1, r3
    1cb0:	3101      	adds	r1, #1
    1cb2:	31ff      	adds	r1, #255	; 0xff
    1cb4:	0089      	lsls	r1, r1, #2
    1cb6:	1871      	adds	r1, r6, r1
    1cb8:	6a89      	ldr	r1, [r1, #40]	; 0x28
        (Te[0][GETBYTE(t3, 1)] & 0x0000ff00) ^
    1cba:	25ff      	movs	r5, #255	; 0xff
        (Te[1][GETBYTE(t0, 0)] & 0x000000ff) ^
    1cbc:	4039      	ands	r1, r7
    1cbe:	4041      	eors	r1, r0
        (Te[0][GETBYTE(t3, 1)] & 0x0000ff00) ^
    1cc0:	4640      	mov	r0, r8
    1cc2:	0a00      	lsrs	r0, r0, #8
    1cc4:	4038      	ands	r0, r7
    1cc6:	0080      	lsls	r0, r0, #2
    1cc8:	1830      	adds	r0, r6, r0
    1cca:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1ccc:	022d      	lsls	r5, r5, #8
    1cce:	46ab      	mov	fp, r5
    1cd0:	4028      	ands	r0, r5
        (Te[3][GETBYTE(t2, 2)] & 0x00ff0000) ^
    1cd2:	25c0      	movs	r5, #192	; 0xc0
    1cd4:	0022      	movs	r2, r4
    1cd6:	4664      	mov	r4, ip
    1cd8:	00ad      	lsls	r5, r5, #2
    1cda:	46ac      	mov	ip, r5
    1cdc:	25ff      	movs	r5, #255	; 0xff
        (Te[1][GETBYTE(t0, 0)] & 0x000000ff) ^
    1cde:	4041      	eors	r1, r0
        (Te[3][GETBYTE(t2, 2)] & 0x00ff0000) ^
    1ce0:	0c20      	lsrs	r0, r4, #16
    1ce2:	4038      	ands	r0, r7
    1ce4:	4460      	add	r0, ip
    1ce6:	0080      	lsls	r0, r0, #2
    1ce8:	1830      	adds	r0, r6, r0
    1cea:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1cec:	042d      	lsls	r5, r5, #16
    1cee:	9501      	str	r5, [sp, #4]
    1cf0:	4005      	ands	r5, r0
    1cf2:	46ac      	mov	ip, r5
        (Te[2][GETBYTE(t1, 3)] & 0xff000000) ^
    1cf4:	2580      	movs	r5, #128	; 0x80
    1cf6:	00ad      	lsls	r5, r5, #2
    1cf8:	46aa      	mov	sl, r5
    1cfa:	4665      	mov	r5, ip
    1cfc:	0e10      	lsrs	r0, r2, #24
    1cfe:	4450      	add	r0, sl
    1d00:	0080      	lsls	r0, r0, #2
    1d02:	1830      	adds	r0, r6, r0
    1d04:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1d06:	0e00      	lsrs	r0, r0, #24
    1d08:	0600      	lsls	r0, r0, #24
    1d0a:	4328      	orrs	r0, r5
        (Te[1][GETBYTE(t0, 0)] & 0x000000ff) ^
    1d0c:	4041      	eors	r1, r0
    1d0e:	9102      	str	r1, [sp, #8]
        (Te[1][GETBYTE(t1, 0)] & 0x000000ff) ^
    1d10:	0039      	movs	r1, r7
    1d12:	4648      	mov	r0, r9
        (Te[0][GETBYTE(t0, 1)] & 0x0000ff00) ^
    1d14:	465d      	mov	r5, fp
        (Te[1][GETBYTE(t1, 0)] & 0x000000ff) ^
    1d16:	4011      	ands	r1, r2
    1d18:	3101      	adds	r1, #1
    1d1a:	31ff      	adds	r1, #255	; 0xff
    1d1c:	0089      	lsls	r1, r1, #2
    1d1e:	1871      	adds	r1, r6, r1
    1d20:	6a89      	ldr	r1, [r1, #40]	; 0x28
    1d22:	6880      	ldr	r0, [r0, #8]
    1d24:	4039      	ands	r1, r7
    1d26:	4041      	eors	r1, r0
        (Te[0][GETBYTE(t0, 1)] & 0x0000ff00) ^
    1d28:	0a18      	lsrs	r0, r3, #8
    1d2a:	4038      	ands	r0, r7
    1d2c:	0080      	lsls	r0, r0, #2
    1d2e:	1830      	adds	r0, r6, r0
    1d30:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1d32:	4028      	ands	r0, r5
        (Te[3][GETBYTE(t3, 2)] & 0x00ff0000) ^
    1d34:	25c0      	movs	r5, #192	; 0xc0
        (Te[1][GETBYTE(t1, 0)] & 0x000000ff) ^
    1d36:	4041      	eors	r1, r0
        (Te[3][GETBYTE(t3, 2)] & 0x00ff0000) ^
    1d38:	4640      	mov	r0, r8
    1d3a:	00ad      	lsls	r5, r5, #2
    1d3c:	46ac      	mov	ip, r5
    1d3e:	0c00      	lsrs	r0, r0, #16
    1d40:	4038      	ands	r0, r7
    1d42:	4460      	add	r0, ip
    1d44:	0080      	lsls	r0, r0, #2
    1d46:	1830      	adds	r0, r6, r0
    1d48:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1d4a:	9d01      	ldr	r5, [sp, #4]
    1d4c:	4005      	ands	r5, r0
        (Te[2][GETBYTE(t2, 3)] & 0xff000000) ^
    1d4e:	0e20      	lsrs	r0, r4, #24
    1d50:	4450      	add	r0, sl
    1d52:	0080      	lsls	r0, r0, #2
    1d54:	1830      	adds	r0, r6, r0
    1d56:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1d58:	0e00      	lsrs	r0, r0, #24
    1d5a:	0600      	lsls	r0, r0, #24
    1d5c:	4328      	orrs	r0, r5
        (Te[1][GETBYTE(t1, 0)] & 0x000000ff) ^
    1d5e:	4041      	eors	r1, r0
    1d60:	910b      	str	r1, [sp, #44]	; 0x2c
        (Te[1][GETBYTE(t2, 0)] & 0x000000ff) ^
    1d62:	0039      	movs	r1, r7
    1d64:	4021      	ands	r1, r4
    1d66:	3101      	adds	r1, #1
    1d68:	31ff      	adds	r1, #255	; 0xff
    1d6a:	0089      	lsls	r1, r1, #2
    1d6c:	1871      	adds	r1, r6, r1
    1d6e:	6a88      	ldr	r0, [r1, #40]	; 0x28
    1d70:	4649      	mov	r1, r9
        (Te[0][GETBYTE(t1, 1)] & 0x0000ff00) ^
    1d72:	465d      	mov	r5, fp
        (Te[1][GETBYTE(t2, 0)] & 0x000000ff) ^
    1d74:	68c9      	ldr	r1, [r1, #12]
    1d76:	4038      	ands	r0, r7
    1d78:	4048      	eors	r0, r1
        (Te[0][GETBYTE(t1, 1)] & 0x0000ff00) ^
    1d7a:	0a11      	lsrs	r1, r2, #8
    1d7c:	4039      	ands	r1, r7
    1d7e:	0089      	lsls	r1, r1, #2
    1d80:	1871      	adds	r1, r6, r1
    1d82:	6a89      	ldr	r1, [r1, #40]	; 0x28
        (Te[0][GETBYTE(t2, 1)] & 0x0000ff00) ^
    1d84:	0a24      	lsrs	r4, r4, #8
        (Te[0][GETBYTE(t1, 1)] & 0x0000ff00) ^
    1d86:	4029      	ands	r1, r5
        (Te[3][GETBYTE(t0, 2)] & 0x00ff0000) ^
    1d88:	25c0      	movs	r5, #192	; 0xc0
    1d8a:	00ad      	lsls	r5, r5, #2
    1d8c:	46ac      	mov	ip, r5
        (Te[1][GETBYTE(t2, 0)] & 0x000000ff) ^
    1d8e:	4048      	eors	r0, r1
        (Te[3][GETBYTE(t0, 2)] & 0x00ff0000) ^
    1d90:	0c19      	lsrs	r1, r3, #16
    1d92:	4039      	ands	r1, r7
    1d94:	4461      	add	r1, ip
    1d96:	0089      	lsls	r1, r1, #2
    1d98:	1871      	adds	r1, r6, r1
    1d9a:	9d01      	ldr	r5, [sp, #4]
    1d9c:	6a89      	ldr	r1, [r1, #40]	; 0x28
        (Te[0][GETBYTE(t2, 1)] & 0x0000ff00) ^
    1d9e:	403c      	ands	r4, r7
        (Te[3][GETBYTE(t0, 2)] & 0x00ff0000) ^
    1da0:	4029      	ands	r1, r5
        (Te[2][GETBYTE(t3, 3)] & 0xff000000) ^
    1da2:	4645      	mov	r5, r8
    1da4:	0e2d      	lsrs	r5, r5, #24
    1da6:	46ac      	mov	ip, r5
    1da8:	44d4      	add	ip, sl
    1daa:	4665      	mov	r5, ip
    1dac:	00ad      	lsls	r5, r5, #2
    1dae:	46ac      	mov	ip, r5
    1db0:	44b4      	add	ip, r6
    1db2:	4665      	mov	r5, ip
    1db4:	6aad      	ldr	r5, [r5, #40]	; 0x28
        (Te[0][GETBYTE(t2, 1)] & 0x0000ff00) ^
    1db6:	00a4      	lsls	r4, r4, #2
        (Te[2][GETBYTE(t3, 3)] & 0xff000000) ^
    1db8:	0e2d      	lsrs	r5, r5, #24
    1dba:	062d      	lsls	r5, r5, #24
    1dbc:	4329      	orrs	r1, r5
        (Te[1][GETBYTE(t2, 0)] & 0x000000ff) ^
    1dbe:	4041      	eors	r1, r0
        (Te[1][GETBYTE(t3, 0)] & 0x000000ff) ^
    1dc0:	4640      	mov	r0, r8
    1dc2:	464d      	mov	r5, r9
    1dc4:	4038      	ands	r0, r7
    1dc6:	3001      	adds	r0, #1
    1dc8:	30ff      	adds	r0, #255	; 0xff
    1dca:	0080      	lsls	r0, r0, #2
    1dcc:	1830      	adds	r0, r6, r0
    1dce:	6a80      	ldr	r0, [r0, #40]	; 0x28
    1dd0:	682d      	ldr	r5, [r5, #0]
    1dd2:	4038      	ands	r0, r7
    1dd4:	4068      	eors	r0, r5
        (Te[0][GETBYTE(t2, 1)] & 0x0000ff00) ^
    1dd6:	465d      	mov	r5, fp
    1dd8:	1934      	adds	r4, r6, r4
    1dda:	6aa4      	ldr	r4, [r4, #40]	; 0x28
        (Te[3][GETBYTE(t1, 2)] & 0x00ff0000) ^
    1ddc:	0c12      	lsrs	r2, r2, #16
        (Te[0][GETBYTE(t2, 1)] & 0x0000ff00) ^
    1dde:	402c      	ands	r4, r5
        (Te[1][GETBYTE(t3, 0)] & 0x000000ff) ^
    1de0:	4060      	eors	r0, r4
        (Te[3][GETBYTE(t1, 2)] & 0x00ff0000) ^
    1de2:	24c0      	movs	r4, #192	; 0xc0
    1de4:	00a4      	lsls	r4, r4, #2
    1de6:	46a4      	mov	ip, r4
    1de8:	403a      	ands	r2, r7
    1dea:	4462      	add	r2, ip
    1dec:	0092      	lsls	r2, r2, #2
    1dee:	18b2      	adds	r2, r6, r2
    1df0:	6a94      	ldr	r4, [r2, #40]	; 0x28
    1df2:	9a01      	ldr	r2, [sp, #4]
        (Te[2][GETBYTE(t0, 3)] & 0xff000000) ^
    1df4:	0e1b      	lsrs	r3, r3, #24
        (Te[3][GETBYTE(t1, 2)] & 0x00ff0000) ^
    1df6:	4014      	ands	r4, r2
        (Te[2][GETBYTE(t0, 3)] & 0xff000000) ^
    1df8:	4652      	mov	r2, sl
    1dfa:	4453      	add	r3, sl
    1dfc:	009b      	lsls	r3, r3, #2
    1dfe:	18f3      	adds	r3, r6, r3
    1e00:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    1e02:	ba09      	rev	r1, r1
    1e04:	0e1b      	lsrs	r3, r3, #24
    1e06:	061b      	lsls	r3, r3, #24
    1e08:	431c      	orrs	r4, r3
    1e0a:	9b02      	ldr	r3, [sp, #8]
        (Te[1][GETBYTE(t3, 0)] & 0x000000ff) ^
    1e0c:	4044      	eors	r4, r0
    1e0e:	ba18      	rev	r0, r3
    1e10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    s1 = ByteReverseWord32(s1);
    1e12:	900d      	str	r0, [sp, #52]	; 0x34
    1e14:	ba24      	rev	r4, r4
    1e16:	ba18      	rev	r0, r3
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
    1e18:	3afd      	subs	r2, #253	; 0xfd
    s2 = ByteReverseWord32(s2);
    1e1a:	900e      	str	r0, [sp, #56]	; 0x38
    s0 = ByteReverseWord32(s0);
    1e1c:	940c      	str	r4, [sp, #48]	; 0x30
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
    1e1e:	3aff      	subs	r2, #255	; 0xff
    s3 = ByteReverseWord32(s3);
    1e20:	910f      	str	r1, [sp, #60]	; 0x3c
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
    1e22:	a90c      	add	r1, sp, #48	; 0x30
    1e24:	9804      	ldr	r0, [sp, #16]
    1e26:	4b0e      	ldr	r3, [pc, #56]	; (1e60 <wc_AesCbcEncrypt+0x64c>)
    1e28:	4798      	blx	r3
    XMEMCPY(outBlock + sizeof(s0),     &s1, sizeof(s1));
    1e2a:	a90d      	add	r1, sp, #52	; 0x34
    1e2c:	2204      	movs	r2, #4
    1e2e:	9808      	ldr	r0, [sp, #32]
    1e30:	4b0b      	ldr	r3, [pc, #44]	; (1e60 <wc_AesCbcEncrypt+0x64c>)
    1e32:	4798      	blx	r3
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
    1e34:	a90e      	add	r1, sp, #56	; 0x38
    1e36:	2204      	movs	r2, #4
    1e38:	9809      	ldr	r0, [sp, #36]	; 0x24
    1e3a:	4b09      	ldr	r3, [pc, #36]	; (1e60 <wc_AesCbcEncrypt+0x64c>)
    1e3c:	4798      	blx	r3
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
    1e3e:	2204      	movs	r2, #4
    1e40:	a90f      	add	r1, sp, #60	; 0x3c
    1e42:	980a      	ldr	r0, [sp, #40]	; 0x28
    1e44:	4b06      	ldr	r3, [pc, #24]	; (1e60 <wc_AesCbcEncrypt+0x64c>)
    1e46:	4798      	blx	r3
    1e48:	e564      	b.n	1914 <wc_AesCbcEncrypt+0x100>
        }

        return 0;
    1e4a:	2000      	movs	r0, #0
    }
    1e4c:	b011      	add	sp, #68	; 0x44
    1e4e:	bc3c      	pop	{r2, r3, r4, r5}
    1e50:	4690      	mov	r8, r2
    1e52:	4699      	mov	r9, r3
    1e54:	46a2      	mov	sl, r4
    1e56:	46ab      	mov	fp, r5
    1e58:	bdf0      	pop	{r4, r5, r6, r7, pc}
            return BAD_FUNC_ARG;
    1e5a:	20ad      	movs	r0, #173	; 0xad
    1e5c:	4240      	negs	r0, r0
    1e5e:	e7f5      	b.n	1e4c <wc_AesCbcEncrypt+0x638>
    1e60:	00002489 	.word	0x00002489

00001e64 <wc_AesCbcDecrypt>:

    #ifdef HAVE_AES_DECRYPT
    /* Software AES - CBC Decrypt */
    int wc_AesCbcDecrypt(Aes* aes, byte* out, const byte* in, word32 sz)
    {
    1e64:	b5f0      	push	{r4, r5, r6, r7, lr}
    1e66:	4657      	mov	r7, sl
    1e68:	46de      	mov	lr, fp
    1e6a:	464e      	mov	r6, r9
    1e6c:	4645      	mov	r5, r8
    1e6e:	b5e0      	push	{r5, r6, r7, lr}
    1e70:	b08d      	sub	sp, #52	; 0x34
    1e72:	4682      	mov	sl, r0
    1e74:	000f      	movs	r7, r1
    1e76:	9201      	str	r2, [sp, #4]
        word32 blocks;

        if (aes == NULL || out == NULL || in == NULL
    1e78:	2800      	cmp	r0, #0
    1e7a:	d100      	bne.n	1e7e <wc_AesCbcDecrypt+0x1a>
    1e7c:	e2c6      	b.n	240c <STACK_SIZE+0x40c>
    1e7e:	2f00      	cmp	r7, #0
    1e80:	d100      	bne.n	1e84 <wc_AesCbcDecrypt+0x20>
    1e82:	e2c3      	b.n	240c <STACK_SIZE+0x40c>
    1e84:	2a00      	cmp	r2, #0
    1e86:	d100      	bne.n	1e8a <wc_AesCbcDecrypt+0x26>
    1e88:	e2c0      	b.n	240c <STACK_SIZE+0x40c>
                                       || sz % AES_BLOCK_SIZE != 0) {
    1e8a:	071a      	lsls	r2, r3, #28
    1e8c:	d000      	beq.n	1e90 <wc_AesCbcDecrypt+0x2c>
    1e8e:	e2bd      	b.n	240c <STACK_SIZE+0x40c>
            XMEMCPY(aes->reg, aes->tmp, AES_BLOCK_SIZE);
            return 0;
        }
    #endif

        blocks = sz / AES_BLOCK_SIZE;
    1e90:	091b      	lsrs	r3, r3, #4
        while (blocks--) {
    1e92:	d100      	bne.n	1e96 <wc_AesCbcDecrypt+0x32>
    1e94:	e2b2      	b.n	23fc <STACK_SIZE+0x3fc>
    1e96:	2284      	movs	r2, #132	; 0x84
    1e98:	0052      	lsls	r2, r2, #1
    1e9a:	4452      	add	r2, sl
    1e9c:	9202      	str	r2, [sp, #8]
    1e9e:	22f8      	movs	r2, #248	; 0xf8
    1ea0:	4452      	add	r2, sl
    1ea2:	9204      	str	r2, [sp, #16]
    1ea4:	9a01      	ldr	r2, [sp, #4]
    1ea6:	011b      	lsls	r3, r3, #4
    1ea8:	4694      	mov	ip, r2
    1eaa:	4463      	add	r3, ip
    1eac:	9305      	str	r3, [sp, #20]
        ((word32)Td4[GETBYTE(t2, 0)]) ^
    1eae:	4b71      	ldr	r3, [pc, #452]	; (2074 <STACK_SIZE+0x74>)
    1eb0:	4c71      	ldr	r4, [pc, #452]	; (2078 <STACK_SIZE+0x78>)
    1eb2:	3328      	adds	r3, #40	; 0x28
    1eb4:	9307      	str	r3, [sp, #28]
    1eb6:	9003      	str	r0, [sp, #12]
    1eb8:	46bb      	mov	fp, r7
    1eba:	e076      	b.n	1faa <wc_AesCbcDecrypt+0x146>
        for (i = 0; i < count; i++) b[i] ^= m[i];
    1ebc:	7813      	ldrb	r3, [r2, #0]
    1ebe:	22f8      	movs	r2, #248	; 0xf8
    1ec0:	9903      	ldr	r1, [sp, #12]
    1ec2:	5c8a      	ldrb	r2, [r1, r2]
    1ec4:	4053      	eors	r3, r2
    1ec6:	465a      	mov	r2, fp
    1ec8:	7013      	strb	r3, [r2, #0]
    1eca:	7853      	ldrb	r3, [r2, #1]
    1ecc:	22f9      	movs	r2, #249	; 0xf9
    1ece:	5c8a      	ldrb	r2, [r1, r2]
    1ed0:	4053      	eors	r3, r2
    1ed2:	465a      	mov	r2, fp
    1ed4:	7053      	strb	r3, [r2, #1]
    1ed6:	7893      	ldrb	r3, [r2, #2]
    1ed8:	22fa      	movs	r2, #250	; 0xfa
    1eda:	5c8a      	ldrb	r2, [r1, r2]
    1edc:	4053      	eors	r3, r2
    1ede:	465a      	mov	r2, fp
    1ee0:	7093      	strb	r3, [r2, #2]
    1ee2:	78d3      	ldrb	r3, [r2, #3]
    1ee4:	22fb      	movs	r2, #251	; 0xfb
    1ee6:	5c8a      	ldrb	r2, [r1, r2]
    1ee8:	4053      	eors	r3, r2
    1eea:	465a      	mov	r2, fp
    1eec:	70d3      	strb	r3, [r2, #3]
    1eee:	7913      	ldrb	r3, [r2, #4]
    1ef0:	22fc      	movs	r2, #252	; 0xfc
    1ef2:	5c8a      	ldrb	r2, [r1, r2]
    1ef4:	4053      	eors	r3, r2
    1ef6:	465a      	mov	r2, fp
    1ef8:	7113      	strb	r3, [r2, #4]
    1efa:	7953      	ldrb	r3, [r2, #5]
    1efc:	22fd      	movs	r2, #253	; 0xfd
    1efe:	5c8a      	ldrb	r2, [r1, r2]
    1f00:	4053      	eors	r3, r2
    1f02:	465a      	mov	r2, fp
    1f04:	7153      	strb	r3, [r2, #5]
    1f06:	7993      	ldrb	r3, [r2, #6]
    1f08:	22fe      	movs	r2, #254	; 0xfe
    1f0a:	5c8a      	ldrb	r2, [r1, r2]
    1f0c:	4053      	eors	r3, r2
    1f0e:	465a      	mov	r2, fp
    1f10:	7193      	strb	r3, [r2, #6]
    1f12:	79d3      	ldrb	r3, [r2, #7]
    1f14:	22ff      	movs	r2, #255	; 0xff
    1f16:	5c8a      	ldrb	r2, [r1, r2]
    1f18:	4053      	eors	r3, r2
    1f1a:	465a      	mov	r2, fp
    1f1c:	71d3      	strb	r3, [r2, #7]
    1f1e:	7a13      	ldrb	r3, [r2, #8]
    1f20:	2280      	movs	r2, #128	; 0x80
    1f22:	0052      	lsls	r2, r2, #1
    1f24:	5c8a      	ldrb	r2, [r1, r2]
    1f26:	4053      	eors	r3, r2
    1f28:	465a      	mov	r2, fp
    1f2a:	7213      	strb	r3, [r2, #8]
    1f2c:	7a53      	ldrb	r3, [r2, #9]
    1f2e:	2202      	movs	r2, #2
    1f30:	32ff      	adds	r2, #255	; 0xff
    1f32:	5c8a      	ldrb	r2, [r1, r2]
    1f34:	4053      	eors	r3, r2
    1f36:	465a      	mov	r2, fp
    1f38:	7253      	strb	r3, [r2, #9]
    1f3a:	7a93      	ldrb	r3, [r2, #10]
    1f3c:	2281      	movs	r2, #129	; 0x81
    1f3e:	0052      	lsls	r2, r2, #1
    1f40:	5c8a      	ldrb	r2, [r1, r2]
    1f42:	4053      	eors	r3, r2
    1f44:	465a      	mov	r2, fp
    1f46:	7293      	strb	r3, [r2, #10]
    1f48:	7ad3      	ldrb	r3, [r2, #11]
    1f4a:	2204      	movs	r2, #4
    1f4c:	32ff      	adds	r2, #255	; 0xff
    1f4e:	5c8a      	ldrb	r2, [r1, r2]
    1f50:	4053      	eors	r3, r2
    1f52:	465a      	mov	r2, fp
    1f54:	72d3      	strb	r3, [r2, #11]
    1f56:	7b13      	ldrb	r3, [r2, #12]
    1f58:	2282      	movs	r2, #130	; 0x82
    1f5a:	0052      	lsls	r2, r2, #1
    1f5c:	5c8a      	ldrb	r2, [r1, r2]
    1f5e:	4053      	eors	r3, r2
    1f60:	465a      	mov	r2, fp
    1f62:	7313      	strb	r3, [r2, #12]
    1f64:	7b53      	ldrb	r3, [r2, #13]
    1f66:	2206      	movs	r2, #6
    1f68:	32ff      	adds	r2, #255	; 0xff
    1f6a:	5c8a      	ldrb	r2, [r1, r2]
    1f6c:	4053      	eors	r3, r2
    1f6e:	465a      	mov	r2, fp
    1f70:	7353      	strb	r3, [r2, #13]
    1f72:	7b93      	ldrb	r3, [r2, #14]
    1f74:	2283      	movs	r2, #131	; 0x83
    1f76:	0052      	lsls	r2, r2, #1
    1f78:	5c8a      	ldrb	r2, [r1, r2]
    1f7a:	4053      	eors	r3, r2
    1f7c:	465a      	mov	r2, fp
    1f7e:	7393      	strb	r3, [r2, #14]
    1f80:	7bd3      	ldrb	r3, [r2, #15]
    1f82:	2208      	movs	r2, #8
    1f84:	32ff      	adds	r2, #255	; 0xff
    1f86:	5c8a      	ldrb	r2, [r1, r2]
    1f88:	4053      	eors	r3, r2
    1f8a:	465a      	mov	r2, fp
    1f8c:	73d3      	strb	r3, [r2, #15]
            XMEMCPY(aes->tmp, in, AES_BLOCK_SIZE);
            wc_AesDecrypt(aes, (byte*)aes->tmp, out);
            xorbuf(out, (byte*)aes->reg, AES_BLOCK_SIZE);
            /* store iv for next call */
            XMEMCPY(aes->reg, aes->tmp, AES_BLOCK_SIZE);
    1f8e:	2210      	movs	r2, #16
    1f90:	4b3a      	ldr	r3, [pc, #232]	; (207c <STACK_SIZE+0x7c>)
    1f92:	9902      	ldr	r1, [sp, #8]
    1f94:	4798      	blx	r3

            out += AES_BLOCK_SIZE;
    1f96:	2310      	movs	r3, #16
    1f98:	469c      	mov	ip, r3
            in  += AES_BLOCK_SIZE;
    1f9a:	9b01      	ldr	r3, [sp, #4]
        while (blocks--) {
    1f9c:	9a05      	ldr	r2, [sp, #20]
            in  += AES_BLOCK_SIZE;
    1f9e:	3310      	adds	r3, #16
            out += AES_BLOCK_SIZE;
    1fa0:	44e3      	add	fp, ip
            in  += AES_BLOCK_SIZE;
    1fa2:	9301      	str	r3, [sp, #4]
        while (blocks--) {
    1fa4:	4293      	cmp	r3, r2
    1fa6:	d100      	bne.n	1faa <wc_AesCbcDecrypt+0x146>
    1fa8:	e228      	b.n	23fc <STACK_SIZE+0x3fc>
            XMEMCPY(aes->tmp, in, AES_BLOCK_SIZE);
    1faa:	2210      	movs	r2, #16
    1fac:	4b33      	ldr	r3, [pc, #204]	; (207c <STACK_SIZE+0x7c>)
    1fae:	9901      	ldr	r1, [sp, #4]
    1fb0:	9802      	ldr	r0, [sp, #8]
    1fb2:	4798      	blx	r3
    word32 r = aes->rounds >> 1;
    1fb4:	23f0      	movs	r3, #240	; 0xf0
    1fb6:	9a03      	ldr	r2, [sp, #12]
    1fb8:	58d5      	ldr	r5, [r2, r3]
    1fba:	086d      	lsrs	r5, r5, #1
    if (r > 7 || r == 0) {
    1fbc:	1e6b      	subs	r3, r5, #1
    1fbe:	2b06      	cmp	r3, #6
    1fc0:	d922      	bls.n	2008 <STACK_SIZE+0x8>
    if (((wolfssl_word)buf | (wolfssl_word)mask | count) % WOLFSSL_WORD_SIZE == 0)
    1fc2:	9804      	ldr	r0, [sp, #16]
    1fc4:	465a      	mov	r2, fp
    1fc6:	0003      	movs	r3, r0
    1fc8:	4313      	orrs	r3, r2
    1fca:	079b      	lsls	r3, r3, #30
    1fcc:	d000      	beq.n	1fd0 <wc_AesCbcDecrypt+0x16c>
    1fce:	e775      	b.n	1ebc <wc_AesCbcDecrypt+0x58>
    for (i = 0; i < n; i++) r[i] ^= a[i];
    1fd0:	23f8      	movs	r3, #248	; 0xf8
    1fd2:	4659      	mov	r1, fp
    1fd4:	9a03      	ldr	r2, [sp, #12]
    1fd6:	6809      	ldr	r1, [r1, #0]
    1fd8:	58d3      	ldr	r3, [r2, r3]
    1fda:	404b      	eors	r3, r1
    1fdc:	4659      	mov	r1, fp
    1fde:	600b      	str	r3, [r1, #0]
    1fe0:	23fc      	movs	r3, #252	; 0xfc
    1fe2:	6849      	ldr	r1, [r1, #4]
    1fe4:	58d3      	ldr	r3, [r2, r3]
    1fe6:	404b      	eors	r3, r1
    1fe8:	4659      	mov	r1, fp
    1fea:	604b      	str	r3, [r1, #4]
    1fec:	2380      	movs	r3, #128	; 0x80
    1fee:	005b      	lsls	r3, r3, #1
    1ff0:	58d3      	ldr	r3, [r2, r3]
    1ff2:	6889      	ldr	r1, [r1, #8]
    1ff4:	404b      	eors	r3, r1
    1ff6:	4659      	mov	r1, fp
    1ff8:	608b      	str	r3, [r1, #8]
    1ffa:	2382      	movs	r3, #130	; 0x82
    1ffc:	005b      	lsls	r3, r3, #1
    1ffe:	58d3      	ldr	r3, [r2, r3]
    2000:	68ca      	ldr	r2, [r1, #12]
    2002:	4053      	eors	r3, r2
    2004:	60cb      	str	r3, [r1, #12]
    2006:	e7c2      	b.n	1f8e <wc_AesCbcDecrypt+0x12a>
    XMEMCPY(&s0, inBlock,                  sizeof(s0));
    2008:	2204      	movs	r2, #4
    200a:	9902      	ldr	r1, [sp, #8]
    200c:	4b1b      	ldr	r3, [pc, #108]	; (207c <STACK_SIZE+0x7c>)
    200e:	a808      	add	r0, sp, #32
    2010:	4798      	blx	r3
    XMEMCPY(&s1, inBlock + sizeof(s0),     sizeof(s1));
    2012:	9e03      	ldr	r6, [sp, #12]
    2014:	2204      	movs	r2, #4
    2016:	0031      	movs	r1, r6
    2018:	310d      	adds	r1, #13
    201a:	31ff      	adds	r1, #255	; 0xff
    201c:	4b17      	ldr	r3, [pc, #92]	; (207c <STACK_SIZE+0x7c>)
    201e:	a809      	add	r0, sp, #36	; 0x24
    2020:	4798      	blx	r3
    XMEMCPY(&s2, inBlock + 2 * sizeof(s0), sizeof(s2));
    2022:	0031      	movs	r1, r6
    2024:	3111      	adds	r1, #17
    2026:	2204      	movs	r2, #4
    2028:	31ff      	adds	r1, #255	; 0xff
    202a:	4b14      	ldr	r3, [pc, #80]	; (207c <STACK_SIZE+0x7c>)
    202c:	a80a      	add	r0, sp, #40	; 0x28
    202e:	4798      	blx	r3
    XMEMCPY(&s3, inBlock + 3 * sizeof(s0), sizeof(s3));
    2030:	0031      	movs	r1, r6
    2032:	3115      	adds	r1, #21
    2034:	2204      	movs	r2, #4
    2036:	31ff      	adds	r1, #255	; 0xff
    2038:	4b10      	ldr	r3, [pc, #64]	; (207c <STACK_SIZE+0x7c>)
    203a:	a80b      	add	r0, sp, #44	; 0x2c
    203c:	4798      	blx	r3
    203e:	9b08      	ldr	r3, [sp, #32]
    s0 ^= rk[0];
    2040:	6837      	ldr	r7, [r6, #0]
    2042:	ba1a      	rev	r2, r3
    2044:	9b09      	ldr	r3, [sp, #36]	; 0x24
    2046:	4057      	eors	r7, r2
    s1 ^= rk[1];
    2048:	6872      	ldr	r2, [r6, #4]
    204a:	ba18      	rev	r0, r3
    204c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
    204e:	4050      	eors	r0, r2
    s2 ^= rk[2];
    2050:	68b2      	ldr	r2, [r6, #8]
    2052:	ba19      	rev	r1, r3
    2054:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
    2056:	4051      	eors	r1, r2
    s3 ^= rk[3];
    2058:	68f2      	ldr	r2, [r6, #12]
    205a:	ba1b      	rev	r3, r3
    205c:	405a      	eors	r2, r3
    205e:	46b1      	mov	r9, r6
            Td[3][GETBYTE(s1, 0)] ^
    2060:	465b      	mov	r3, fp
    2062:	016d      	lsls	r5, r5, #5
    2064:	44a9      	add	r9, r5
    const word32* rk = aes->key;
    2066:	46b2      	mov	sl, r6
    s3 ^= rk[3];
    2068:	4690      	mov	r8, r2
            Td[3][GETBYTE(s1, 0)] ^
    206a:	26ff      	movs	r6, #255	; 0xff
    206c:	003d      	movs	r5, r7
    206e:	9000      	str	r0, [sp, #0]
    2070:	9306      	str	r3, [sp, #24]
    2072:	e0a0      	b.n	21b6 <STACK_SIZE+0x1b6>
    2074:	0000467c 	.word	0x0000467c
    2078:	0000367c 	.word	0x0000367c
    207c:	00002489 	.word	0x00002489
            Td[3][GETBYTE(t1, 0)] ^
    2080:	3501      	adds	r5, #1
    2082:	35ff      	adds	r5, #255	; 0xff
    2084:	0031      	movs	r1, r6
    2086:	46ac      	mov	ip, r5
    2088:	4011      	ands	r1, r2
            Td[0][GETBYTE(t0, 3)] ^
    208a:	0e38      	lsrs	r0, r7, #24
            Td[3][GETBYTE(t1, 0)] ^
    208c:	4461      	add	r1, ip
            Td[0][GETBYTE(t0, 3)] ^
    208e:	0080      	lsls	r0, r0, #2
            Td[3][GETBYTE(t1, 0)] ^
    2090:	0089      	lsls	r1, r1, #2
            Td[0][GETBYTE(t0, 3)] ^
    2092:	1820      	adds	r0, r4, r0
            Td[3][GETBYTE(t1, 0)] ^
    2094:	1861      	adds	r1, r4, r1
    2096:	6a85      	ldr	r5, [r0, #40]	; 0x28
    2098:	6a89      	ldr	r1, [r1, #40]	; 0x28
            Td[2][GETBYTE(t2, 1)] ^
    209a:	2080      	movs	r0, #128	; 0x80
            Td[3][GETBYTE(t1, 0)] ^
    209c:	404d      	eors	r5, r1
    209e:	4651      	mov	r1, sl
    20a0:	6809      	ldr	r1, [r1, #0]
            Td[2][GETBYTE(t2, 1)] ^
    20a2:	0080      	lsls	r0, r0, #2
            Td[3][GETBYTE(t1, 0)] ^
    20a4:	404d      	eors	r5, r1
            Td[1][GETBYTE(t3, 2)] ^
    20a6:	4641      	mov	r1, r8
            Td[2][GETBYTE(t2, 1)] ^
    20a8:	4684      	mov	ip, r0
            Td[1][GETBYTE(t3, 2)] ^
    20aa:	0c09      	lsrs	r1, r1, #16
    20ac:	4031      	ands	r1, r6
    20ae:	3101      	adds	r1, #1
    20b0:	31ff      	adds	r1, #255	; 0xff
    20b2:	0089      	lsls	r1, r1, #2
    20b4:	1861      	adds	r1, r4, r1
            Td[3][GETBYTE(t1, 0)] ^
    20b6:	6a89      	ldr	r1, [r1, #40]	; 0x28
            Td[0][GETBYTE(t1, 3)] ^
    20b8:	0e10      	lsrs	r0, r2, #24
            Td[3][GETBYTE(t1, 0)] ^
    20ba:	404d      	eors	r5, r1
            Td[2][GETBYTE(t2, 1)] ^
    20bc:	0a19      	lsrs	r1, r3, #8
    20be:	4031      	ands	r1, r6
    20c0:	4461      	add	r1, ip
    20c2:	0089      	lsls	r1, r1, #2
    20c4:	1861      	adds	r1, r4, r1
            Td[3][GETBYTE(t1, 0)] ^
    20c6:	6a89      	ldr	r1, [r1, #40]	; 0x28
            Td[0][GETBYTE(t1, 3)] ^
    20c8:	0080      	lsls	r0, r0, #2
            Td[3][GETBYTE(t1, 0)] ^
    20ca:	404d      	eors	r5, r1
            Td[3][GETBYTE(t2, 0)] ^
    20cc:	0031      	movs	r1, r6
    20ce:	4019      	ands	r1, r3
    20d0:	468b      	mov	fp, r1
    20d2:	21c0      	movs	r1, #192	; 0xc0
    20d4:	0089      	lsls	r1, r1, #2
    20d6:	468c      	mov	ip, r1
    20d8:	4659      	mov	r1, fp
    20da:	4461      	add	r1, ip
    20dc:	0089      	lsls	r1, r1, #2
            Td[0][GETBYTE(t1, 3)] ^
    20de:	1820      	adds	r0, r4, r0
            Td[3][GETBYTE(t2, 0)] ^
    20e0:	1861      	adds	r1, r4, r1
    20e2:	6a89      	ldr	r1, [r1, #40]	; 0x28
    20e4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    20e6:	4048      	eors	r0, r1
    20e8:	4651      	mov	r1, sl
    20ea:	6849      	ldr	r1, [r1, #4]
    20ec:	4048      	eors	r0, r1
            Td[1][GETBYTE(t0, 2)] ^
    20ee:	0c39      	lsrs	r1, r7, #16
    20f0:	4031      	ands	r1, r6
    20f2:	3101      	adds	r1, #1
    20f4:	31ff      	adds	r1, #255	; 0xff
    20f6:	0089      	lsls	r1, r1, #2
    20f8:	1861      	adds	r1, r4, r1
            Td[3][GETBYTE(t2, 0)] ^
    20fa:	6a89      	ldr	r1, [r1, #40]	; 0x28
    20fc:	4048      	eors	r0, r1
            Td[2][GETBYTE(t3, 1)] ^
    20fe:	4641      	mov	r1, r8
    2100:	0a09      	lsrs	r1, r1, #8
    2102:	4031      	ands	r1, r6
    2104:	468b      	mov	fp, r1
    2106:	2180      	movs	r1, #128	; 0x80
    2108:	0089      	lsls	r1, r1, #2
    210a:	468c      	mov	ip, r1
    210c:	4659      	mov	r1, fp
    210e:	4461      	add	r1, ip
    2110:	0089      	lsls	r1, r1, #2
    2112:	1861      	adds	r1, r4, r1
            Td[3][GETBYTE(t2, 0)] ^
    2114:	6a89      	ldr	r1, [r1, #40]	; 0x28
    2116:	4048      	eors	r0, r1
    2118:	9000      	str	r0, [sp, #0]
            Td[3][GETBYTE(t3, 0)] ^
    211a:	20c0      	movs	r0, #192	; 0xc0
            Td[0][GETBYTE(t2, 3)] ^
    211c:	0e19      	lsrs	r1, r3, #24
    211e:	0089      	lsls	r1, r1, #2
    2120:	468b      	mov	fp, r1
            Td[3][GETBYTE(t3, 0)] ^
    2122:	0080      	lsls	r0, r0, #2
    2124:	4641      	mov	r1, r8
    2126:	4684      	mov	ip, r0
            Td[0][GETBYTE(t2, 3)] ^
    2128:	44a3      	add	fp, r4
            Td[3][GETBYTE(t3, 0)] ^
    212a:	4658      	mov	r0, fp
    212c:	4031      	ands	r1, r6
    212e:	4461      	add	r1, ip
    2130:	0089      	lsls	r1, r1, #2
    2132:	1861      	adds	r1, r4, r1
    2134:	6a80      	ldr	r0, [r0, #40]	; 0x28
    2136:	6a89      	ldr	r1, [r1, #40]	; 0x28
    2138:	4041      	eors	r1, r0
    213a:	4650      	mov	r0, sl
    213c:	6880      	ldr	r0, [r0, #8]
    213e:	4048      	eors	r0, r1
            Td[1][GETBYTE(t1, 2)] ^
    2140:	0c11      	lsrs	r1, r2, #16
    2142:	4031      	ands	r1, r6
    2144:	3101      	adds	r1, #1
    2146:	31ff      	adds	r1, #255	; 0xff
    2148:	0089      	lsls	r1, r1, #2
    214a:	1861      	adds	r1, r4, r1
            Td[3][GETBYTE(t3, 0)] ^
    214c:	6a89      	ldr	r1, [r1, #40]	; 0x28
            Td[2][GETBYTE(t1, 1)] ^
    214e:	0a12      	lsrs	r2, r2, #8
            Td[3][GETBYTE(t3, 0)] ^
    2150:	4048      	eors	r0, r1
    2152:	4683      	mov	fp, r0
            Td[2][GETBYTE(t0, 1)] ^
    2154:	2080      	movs	r0, #128	; 0x80
    2156:	0080      	lsls	r0, r0, #2
    2158:	4684      	mov	ip, r0
            Td[3][GETBYTE(t3, 0)] ^
    215a:	4658      	mov	r0, fp
            Td[2][GETBYTE(t0, 1)] ^
    215c:	0a39      	lsrs	r1, r7, #8
    215e:	4031      	ands	r1, r6
    2160:	4461      	add	r1, ip
    2162:	0089      	lsls	r1, r1, #2
    2164:	1861      	adds	r1, r4, r1
            Td[3][GETBYTE(t3, 0)] ^
    2166:	6a89      	ldr	r1, [r1, #40]	; 0x28
            Td[3][GETBYTE(t0, 0)] ^
    2168:	4037      	ands	r7, r6
            Td[3][GETBYTE(t3, 0)] ^
    216a:	4041      	eors	r1, r0
            Td[0][GETBYTE(t3, 3)] ^
    216c:	4640      	mov	r0, r8
    216e:	0e00      	lsrs	r0, r0, #24
    2170:	0080      	lsls	r0, r0, #2
    2172:	4680      	mov	r8, r0
            Td[3][GETBYTE(t0, 0)] ^
    2174:	20c0      	movs	r0, #192	; 0xc0
    2176:	0080      	lsls	r0, r0, #2
    2178:	4684      	mov	ip, r0
            Td[0][GETBYTE(t3, 3)] ^
    217a:	44a0      	add	r8, r4
            Td[3][GETBYTE(t0, 0)] ^
    217c:	4640      	mov	r0, r8
    217e:	4467      	add	r7, ip
    2180:	00bf      	lsls	r7, r7, #2
    2182:	19e7      	adds	r7, r4, r7
    2184:	6a80      	ldr	r0, [r0, #40]	; 0x28
    2186:	6abf      	ldr	r7, [r7, #40]	; 0x28
            Td[2][GETBYTE(t1, 1)] ^
    2188:	4032      	ands	r2, r6
            Td[3][GETBYTE(t0, 0)] ^
    218a:	4047      	eors	r7, r0
    218c:	4650      	mov	r0, sl
    218e:	68c0      	ldr	r0, [r0, #12]
    2190:	4078      	eors	r0, r7
            Td[1][GETBYTE(t2, 2)] ^
    2192:	0c1f      	lsrs	r7, r3, #16
    2194:	4037      	ands	r7, r6
    2196:	3701      	adds	r7, #1
    2198:	37ff      	adds	r7, #255	; 0xff
    219a:	00bf      	lsls	r7, r7, #2
    219c:	19e7      	adds	r7, r4, r7
            Td[3][GETBYTE(t0, 0)] ^
    219e:	6abb      	ldr	r3, [r7, #40]	; 0x28
    21a0:	4043      	eors	r3, r0
            Td[2][GETBYTE(t1, 1)] ^
    21a2:	2080      	movs	r0, #128	; 0x80
    21a4:	0080      	lsls	r0, r0, #2
    21a6:	4684      	mov	ip, r0
    21a8:	4462      	add	r2, ip
    21aa:	0092      	lsls	r2, r2, #2
    21ac:	18a2      	adds	r2, r4, r2
            Td[3][GETBYTE(t0, 0)] ^
    21ae:	6a92      	ldr	r2, [r2, #40]	; 0x28
    21b0:	9800      	ldr	r0, [sp, #0]
    21b2:	4053      	eors	r3, r2
    21b4:	4698      	mov	r8, r3
            Td[3][GETBYTE(s1, 0)] ^
    21b6:	0033      	movs	r3, r6
    21b8:	4003      	ands	r3, r0
    21ba:	20c0      	movs	r0, #192	; 0xc0
    21bc:	0080      	lsls	r0, r0, #2
    21be:	4683      	mov	fp, r0
            Td[0][GETBYTE(s0, 3)] ^
    21c0:	0e2a      	lsrs	r2, r5, #24
            Td[3][GETBYTE(s1, 0)] ^
    21c2:	445b      	add	r3, fp
            Td[0][GETBYTE(s0, 3)] ^
    21c4:	0092      	lsls	r2, r2, #2
            Td[3][GETBYTE(s1, 0)] ^
    21c6:	009b      	lsls	r3, r3, #2
            Td[0][GETBYTE(s0, 3)] ^
    21c8:	18a2      	adds	r2, r4, r2
            Td[3][GETBYTE(s1, 0)] ^
    21ca:	18e3      	adds	r3, r4, r3
        t0 =
    21cc:	6a97      	ldr	r7, [r2, #40]	; 0x28
    21ce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Td[2][GETBYTE(s2, 1)] ^
    21d0:	2280      	movs	r2, #128	; 0x80
        t0 =
    21d2:	405f      	eors	r7, r3
    21d4:	4653      	mov	r3, sl
    21d6:	691b      	ldr	r3, [r3, #16]
            Td[2][GETBYTE(s2, 1)] ^
    21d8:	0092      	lsls	r2, r2, #2
        t0 =
    21da:	405f      	eors	r7, r3
            Td[1][GETBYTE(s3, 2)] ^
    21dc:	4643      	mov	r3, r8
            Td[2][GETBYTE(s2, 1)] ^
    21de:	4693      	mov	fp, r2
            Td[0][GETBYTE(s1, 3)] ^
    21e0:	9800      	ldr	r0, [sp, #0]
            Td[1][GETBYTE(s3, 2)] ^
    21e2:	0c1b      	lsrs	r3, r3, #16
            Td[0][GETBYTE(s1, 3)] ^
    21e4:	0e02      	lsrs	r2, r0, #24
            Td[3][GETBYTE(s2, 0)] ^
    21e6:	20c0      	movs	r0, #192	; 0xc0
            Td[1][GETBYTE(s3, 2)] ^
    21e8:	4033      	ands	r3, r6
    21ea:	3301      	adds	r3, #1
    21ec:	33ff      	adds	r3, #255	; 0xff
    21ee:	009b      	lsls	r3, r3, #2
    21f0:	18e3      	adds	r3, r4, r3
        t0 =
    21f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Td[3][GETBYTE(s2, 0)] ^
    21f4:	0080      	lsls	r0, r0, #2
        t0 =
    21f6:	405f      	eors	r7, r3
            Td[2][GETBYTE(s2, 1)] ^
    21f8:	0a0b      	lsrs	r3, r1, #8
    21fa:	4033      	ands	r3, r6
    21fc:	445b      	add	r3, fp
    21fe:	009b      	lsls	r3, r3, #2
    2200:	18e3      	adds	r3, r4, r3
        t0 =
    2202:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Td[3][GETBYTE(s2, 0)] ^
    2204:	4683      	mov	fp, r0
        t0 =
    2206:	405f      	eors	r7, r3
            Td[3][GETBYTE(s2, 0)] ^
    2208:	0033      	movs	r3, r6
    220a:	400b      	ands	r3, r1
    220c:	445b      	add	r3, fp
            Td[0][GETBYTE(s1, 3)] ^
    220e:	0092      	lsls	r2, r2, #2
            Td[3][GETBYTE(s2, 0)] ^
    2210:	009b      	lsls	r3, r3, #2
            Td[0][GETBYTE(s1, 3)] ^
    2212:	18a2      	adds	r2, r4, r2
            Td[3][GETBYTE(s2, 0)] ^
    2214:	18e3      	adds	r3, r4, r3
        t1 =
    2216:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2218:	6a92      	ldr	r2, [r2, #40]	; 0x28
            Td[2][GETBYTE(s3, 1)] ^
    221a:	3801      	subs	r0, #1
        t1 =
    221c:	405a      	eors	r2, r3
    221e:	4653      	mov	r3, sl
    2220:	695b      	ldr	r3, [r3, #20]
            Td[2][GETBYTE(s3, 1)] ^
    2222:	38ff      	subs	r0, #255	; 0xff
        t1 =
    2224:	405a      	eors	r2, r3
            Td[1][GETBYTE(s0, 2)] ^
    2226:	0c2b      	lsrs	r3, r5, #16
    2228:	4033      	ands	r3, r6
    222a:	3301      	adds	r3, #1
    222c:	33ff      	adds	r3, #255	; 0xff
    222e:	009b      	lsls	r3, r3, #2
    2230:	18e3      	adds	r3, r4, r3
        t1 =
    2232:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Td[2][GETBYTE(s3, 1)] ^
    2234:	4683      	mov	fp, r0
        t1 =
    2236:	405a      	eors	r2, r3
            Td[2][GETBYTE(s3, 1)] ^
    2238:	4643      	mov	r3, r8
    223a:	0a1b      	lsrs	r3, r3, #8
    223c:	4033      	ands	r3, r6
    223e:	445b      	add	r3, fp
    2240:	009b      	lsls	r3, r3, #2
    2242:	18e3      	adds	r3, r4, r3
        t1 =
    2244:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Td[3][GETBYTE(s3, 0)] ^
    2246:	3001      	adds	r0, #1
        t1 =
    2248:	405a      	eors	r2, r3
            Td[0][GETBYTE(s2, 3)] ^
    224a:	0e0b      	lsrs	r3, r1, #24
    224c:	009b      	lsls	r3, r3, #2
    224e:	469b      	mov	fp, r3
            Td[3][GETBYTE(s3, 0)] ^
    2250:	30ff      	adds	r0, #255	; 0xff
    2252:	4643      	mov	r3, r8
    2254:	4684      	mov	ip, r0
            Td[0][GETBYTE(s2, 3)] ^
    2256:	44a3      	add	fp, r4
        t2 =
    2258:	4658      	mov	r0, fp
            Td[3][GETBYTE(s3, 0)] ^
    225a:	4033      	ands	r3, r6
    225c:	4463      	add	r3, ip
    225e:	009b      	lsls	r3, r3, #2
    2260:	18e3      	adds	r3, r4, r3
        t2 =
    2262:	6a80      	ldr	r0, [r0, #40]	; 0x28
    2264:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2266:	4043      	eors	r3, r0
    2268:	4650      	mov	r0, sl
    226a:	6980      	ldr	r0, [r0, #24]
    226c:	4058      	eors	r0, r3
    226e:	4683      	mov	fp, r0
            Td[1][GETBYTE(s1, 2)] ^
    2270:	9800      	ldr	r0, [sp, #0]
    2272:	0c03      	lsrs	r3, r0, #16
        t2 =
    2274:	4658      	mov	r0, fp
            Td[1][GETBYTE(s1, 2)] ^
    2276:	4033      	ands	r3, r6
    2278:	3301      	adds	r3, #1
    227a:	33ff      	adds	r3, #255	; 0xff
    227c:	009b      	lsls	r3, r3, #2
    227e:	18e3      	adds	r3, r4, r3
        t2 =
    2280:	6a9b      	ldr	r3, [r3, #40]	; 0x28
    2282:	4058      	eors	r0, r3
    2284:	4683      	mov	fp, r0
            Td[2][GETBYTE(s0, 1)] ^
    2286:	2080      	movs	r0, #128	; 0x80
    2288:	0080      	lsls	r0, r0, #2
    228a:	4684      	mov	ip, r0
        t2 =
    228c:	4658      	mov	r0, fp
            Td[2][GETBYTE(s0, 1)] ^
    228e:	0a2b      	lsrs	r3, r5, #8
    2290:	4033      	ands	r3, r6
    2292:	4463      	add	r3, ip
    2294:	009b      	lsls	r3, r3, #2
    2296:	18e3      	adds	r3, r4, r3
        t2 =
    2298:	6a9b      	ldr	r3, [r3, #40]	; 0x28
            Td[3][GETBYTE(s0, 0)] ^
    229a:	4035      	ands	r5, r6
        t2 =
    229c:	4043      	eors	r3, r0
            Td[0][GETBYTE(s3, 3)] ^
    229e:	4640      	mov	r0, r8
    22a0:	0e00      	lsrs	r0, r0, #24
    22a2:	0080      	lsls	r0, r0, #2
    22a4:	4680      	mov	r8, r0
            Td[3][GETBYTE(s0, 0)] ^
    22a6:	20c0      	movs	r0, #192	; 0xc0
    22a8:	0080      	lsls	r0, r0, #2
    22aa:	4684      	mov	ip, r0
            Td[0][GETBYTE(s3, 3)] ^
    22ac:	44a0      	add	r8, r4
        t3 =
    22ae:	4640      	mov	r0, r8
            Td[3][GETBYTE(s0, 0)] ^
    22b0:	4465      	add	r5, ip
    22b2:	00ad      	lsls	r5, r5, #2
    22b4:	1965      	adds	r5, r4, r5
        t3 =
    22b6:	6a80      	ldr	r0, [r0, #40]	; 0x28
    22b8:	6aad      	ldr	r5, [r5, #40]	; 0x28
    22ba:	4045      	eors	r5, r0
    22bc:	4650      	mov	r0, sl
    22be:	69c0      	ldr	r0, [r0, #28]
    22c0:	4068      	eors	r0, r5
            Td[1][GETBYTE(s2, 2)] ^
    22c2:	0c0d      	lsrs	r5, r1, #16
    22c4:	4035      	ands	r5, r6
    22c6:	3501      	adds	r5, #1
    22c8:	35ff      	adds	r5, #255	; 0xff
    22ca:	00ad      	lsls	r5, r5, #2
    22cc:	1965      	adds	r5, r4, r5
        t3 =
    22ce:	6aa9      	ldr	r1, [r5, #40]	; 0x28
            Td[2][GETBYTE(s1, 1)] ^
    22d0:	2580      	movs	r5, #128	; 0x80
    22d2:	00ad      	lsls	r5, r5, #2
    22d4:	46ac      	mov	ip, r5
        t3 =
    22d6:	4041      	eors	r1, r0
            Td[2][GETBYTE(s1, 1)] ^
    22d8:	9800      	ldr	r0, [sp, #0]
    22da:	0a00      	lsrs	r0, r0, #8
    22dc:	4030      	ands	r0, r6
    22de:	4460      	add	r0, ip
    22e0:	0080      	lsls	r0, r0, #2
    22e2:	1820      	adds	r0, r4, r0
        t3 =
    22e4:	6a80      	ldr	r0, [r0, #40]	; 0x28
    22e6:	4041      	eors	r1, r0
    22e8:	4688      	mov	r8, r1
        rk += 8;
    22ea:	2120      	movs	r1, #32
    22ec:	468c      	mov	ip, r1
    22ee:	44e2      	add	sl, ip
        if (--r == 0) {
    22f0:	45d1      	cmp	r9, sl
    22f2:	d000      	beq.n	22f6 <STACK_SIZE+0x2f6>
    22f4:	e6c4      	b.n	2080 <STACK_SIZE+0x80>
        ((word32)Td4[GETBYTE(t2, 0)]) ^
    22f6:	0031      	movs	r1, r6
    22f8:	9300      	str	r3, [sp, #0]
    22fa:	9806      	ldr	r0, [sp, #24]
    22fc:	4019      	ands	r1, r3
    22fe:	9b07      	ldr	r3, [sp, #28]
    2300:	4683      	mov	fp, r0
    2302:	5c58      	ldrb	r0, [r3, r1]
    2304:	4649      	mov	r1, r9
    2306:	6849      	ldr	r1, [r1, #4]
    2308:	003d      	movs	r5, r7
    230a:	4048      	eors	r0, r1
        ((word32)Td4[GETBYTE(t1, 3)] << 24) ^
    230c:	0e11      	lsrs	r1, r2, #24
    230e:	5c59      	ldrb	r1, [r3, r1]
    2310:	0609      	lsls	r1, r1, #24
        ((word32)Td4[GETBYTE(t2, 0)]) ^
    2312:	4048      	eors	r0, r1
        ((word32)Td4[GETBYTE(t0, 2)] << 16) ^
    2314:	0c39      	lsrs	r1, r7, #16
    2316:	4031      	ands	r1, r6
    2318:	5c59      	ldrb	r1, [r3, r1]
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    231a:	464f      	mov	r7, r9
        ((word32)Td4[GETBYTE(t0, 2)] << 16) ^
    231c:	0409      	lsls	r1, r1, #16
        ((word32)Td4[GETBYTE(t2, 0)]) ^
    231e:	4048      	eors	r0, r1
        ((word32)Td4[GETBYTE(t3, 1)] <<  8) ^
    2320:	4641      	mov	r1, r8
    2322:	0a09      	lsrs	r1, r1, #8
    2324:	4031      	ands	r1, r6
    2326:	5c59      	ldrb	r1, [r3, r1]
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    2328:	68bf      	ldr	r7, [r7, #8]
        ((word32)Td4[GETBYTE(t3, 1)] <<  8) ^
    232a:	0209      	lsls	r1, r1, #8
        ((word32)Td4[GETBYTE(t2, 0)]) ^
    232c:	4048      	eors	r0, r1
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    232e:	4641      	mov	r1, r8
    2330:	4031      	ands	r1, r6
    2332:	5c59      	ldrb	r1, [r3, r1]
    2334:	ba00      	rev	r0, r0
    2336:	404f      	eors	r7, r1
        ((word32)Td4[GETBYTE(t2, 3)] << 24) ^
    2338:	9900      	ldr	r1, [sp, #0]
    s1 = ByteReverseWord32(s1);
    233a:	9009      	str	r0, [sp, #36]	; 0x24
        ((word32)Td4[GETBYTE(t2, 3)] << 24) ^
    233c:	0e09      	lsrs	r1, r1, #24
    233e:	5c59      	ldrb	r1, [r3, r1]
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
    2340:	4658      	mov	r0, fp
        ((word32)Td4[GETBYTE(t2, 3)] << 24) ^
    2342:	0609      	lsls	r1, r1, #24
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    2344:	4079      	eors	r1, r7
        ((word32)Td4[GETBYTE(t1, 2)] << 16) ^
    2346:	0c17      	lsrs	r7, r2, #16
    2348:	4037      	ands	r7, r6
    234a:	5ddf      	ldrb	r7, [r3, r7]
    234c:	043f      	lsls	r7, r7, #16
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    234e:	4079      	eors	r1, r7
        ((word32)Td4[GETBYTE(t0, 1)] <<  8) ^
    2350:	0a2f      	lsrs	r7, r5, #8
    2352:	4037      	ands	r7, r6
    2354:	5ddf      	ldrb	r7, [r3, r7]
    2356:	023f      	lsls	r7, r7, #8
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    2358:	4079      	eors	r1, r7
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    235a:	0037      	movs	r7, r6
        ((word32)Td4[GETBYTE(t3, 0)]) ^
    235c:	9106      	str	r1, [sp, #24]
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    235e:	4649      	mov	r1, r9
    2360:	402f      	ands	r7, r5
    2362:	5ddf      	ldrb	r7, [r3, r7]
    2364:	68c9      	ldr	r1, [r1, #12]
        ((word32)Td4[GETBYTE(t0, 3)] << 24) ^
    2366:	0e2d      	lsrs	r5, r5, #24
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2368:	404f      	eors	r7, r1
        ((word32)Td4[GETBYTE(t3, 3)] << 24) ^
    236a:	4641      	mov	r1, r8
    236c:	0e09      	lsrs	r1, r1, #24
    236e:	5c59      	ldrb	r1, [r3, r1]
        ((word32)Td4[GETBYTE(t0, 3)] << 24) ^
    2370:	5d5d      	ldrb	r5, [r3, r5]
        ((word32)Td4[GETBYTE(t3, 3)] << 24) ^
    2372:	0609      	lsls	r1, r1, #24
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2374:	404f      	eors	r7, r1
        ((word32)Td4[GETBYTE(t2, 2)] << 16) ^
    2376:	9900      	ldr	r1, [sp, #0]
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2378:	46ba      	mov	sl, r7
        ((word32)Td4[GETBYTE(t2, 2)] << 16) ^
    237a:	0c09      	lsrs	r1, r1, #16
    237c:	000f      	movs	r7, r1
    237e:	4037      	ands	r7, r6
    2380:	5dd9      	ldrb	r1, [r3, r7]
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2382:	4657      	mov	r7, sl
        ((word32)Td4[GETBYTE(t2, 2)] << 16) ^
    2384:	0409      	lsls	r1, r1, #16
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2386:	404f      	eors	r7, r1
        ((word32)Td4[GETBYTE(t1, 1)] <<  8) ^
    2388:	0a11      	lsrs	r1, r2, #8
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    238a:	46ba      	mov	sl, r7
        ((word32)Td4[GETBYTE(t1, 1)] <<  8) ^
    238c:	000f      	movs	r7, r1
    238e:	4037      	ands	r7, r6
    2390:	5dd9      	ldrb	r1, [r3, r7]
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2392:	4657      	mov	r7, sl
        ((word32)Td4[GETBYTE(t1, 1)] <<  8) ^
    2394:	0209      	lsls	r1, r1, #8
        ((word32)Td4[GETBYTE(t0, 0)]) ^
    2396:	404f      	eors	r7, r1
        ((word32)Td4[GETBYTE(t1, 0)]) ^
    2398:	4649      	mov	r1, r9
    239a:	4032      	ands	r2, r6
    239c:	5c9a      	ldrb	r2, [r3, r2]
    239e:	6809      	ldr	r1, [r1, #0]
        ((word32)Td4[GETBYTE(t0, 3)] << 24) ^
    23a0:	062d      	lsls	r5, r5, #24
        ((word32)Td4[GETBYTE(t1, 0)]) ^
    23a2:	404a      	eors	r2, r1
        ((word32)Td4[GETBYTE(t3, 2)] << 16) ^
    23a4:	4641      	mov	r1, r8
        ((word32)Td4[GETBYTE(t1, 0)]) ^
    23a6:	406a      	eors	r2, r5
        ((word32)Td4[GETBYTE(t3, 2)] << 16) ^
    23a8:	0c0d      	lsrs	r5, r1, #16
    23aa:	0019      	movs	r1, r3
    23ac:	4035      	ands	r5, r6
    23ae:	5d5d      	ldrb	r5, [r3, r5]
        ((word32)Td4[GETBYTE(t2, 1)] <<  8) ^
    23b0:	9b00      	ldr	r3, [sp, #0]
        ((word32)Td4[GETBYTE(t3, 2)] << 16) ^
    23b2:	042d      	lsls	r5, r5, #16
        ((word32)Td4[GETBYTE(t2, 1)] <<  8) ^
    23b4:	0a1b      	lsrs	r3, r3, #8
    23b6:	4033      	ands	r3, r6
    23b8:	5ccb      	ldrb	r3, [r1, r3]
        ((word32)Td4[GETBYTE(t1, 0)]) ^
    23ba:	406a      	eors	r2, r5
        ((word32)Td4[GETBYTE(t2, 1)] <<  8) ^
    23bc:	021b      	lsls	r3, r3, #8
        ((word32)Td4[GETBYTE(t1, 0)]) ^
    23be:	405a      	eors	r2, r3
    23c0:	9b06      	ldr	r3, [sp, #24]
    23c2:	ba12      	rev	r2, r2
    23c4:	ba19      	rev	r1, r3
    23c6:	ba3b      	rev	r3, r7
    s0 = ByteReverseWord32(s0);
    23c8:	9208      	str	r2, [sp, #32]
    s2 = ByteReverseWord32(s2);
    23ca:	910a      	str	r1, [sp, #40]	; 0x28
    s3 = ByteReverseWord32(s3);
    23cc:	930b      	str	r3, [sp, #44]	; 0x2c
    XMEMCPY(outBlock,                  &s0, sizeof(s0));
    23ce:	a908      	add	r1, sp, #32
    23d0:	2204      	movs	r2, #4
    23d2:	4b10      	ldr	r3, [pc, #64]	; (2414 <STACK_SIZE+0x414>)
    23d4:	4798      	blx	r3
    XMEMCPY(outBlock + sizeof(s0),     &s1, sizeof(s1));
    23d6:	465b      	mov	r3, fp
    23d8:	a909      	add	r1, sp, #36	; 0x24
    23da:	1d18      	adds	r0, r3, #4
    23dc:	2204      	movs	r2, #4
    23de:	4b0d      	ldr	r3, [pc, #52]	; (2414 <STACK_SIZE+0x414>)
    23e0:	4798      	blx	r3
    XMEMCPY(outBlock + 2 * sizeof(s0), &s2, sizeof(s2));
    23e2:	4658      	mov	r0, fp
    23e4:	a90a      	add	r1, sp, #40	; 0x28
    23e6:	2204      	movs	r2, #4
    23e8:	4b0a      	ldr	r3, [pc, #40]	; (2414 <STACK_SIZE+0x414>)
    23ea:	3008      	adds	r0, #8
    23ec:	4798      	blx	r3
    XMEMCPY(outBlock + 3 * sizeof(s0), &s3, sizeof(s3));
    23ee:	4658      	mov	r0, fp
    23f0:	2204      	movs	r2, #4
    23f2:	a90b      	add	r1, sp, #44	; 0x2c
    23f4:	4b07      	ldr	r3, [pc, #28]	; (2414 <STACK_SIZE+0x414>)
    23f6:	300c      	adds	r0, #12
    23f8:	4798      	blx	r3
    23fa:	e5e2      	b.n	1fc2 <wc_AesCbcDecrypt+0x15e>
        }

        return 0;
    23fc:	2000      	movs	r0, #0
    }
    23fe:	b00d      	add	sp, #52	; 0x34
    2400:	bc3c      	pop	{r2, r3, r4, r5}
    2402:	4690      	mov	r8, r2
    2404:	4699      	mov	r9, r3
    2406:	46a2      	mov	sl, r4
    2408:	46ab      	mov	fp, r5
    240a:	bdf0      	pop	{r4, r5, r6, r7, pc}
            return BAD_FUNC_ARG;
    240c:	20ad      	movs	r0, #173	; 0xad
    240e:	4240      	negs	r0, r0
    2410:	e7f5      	b.n	23fe <STACK_SIZE+0x3fe>
    2412:	46c0      	nop			; (mov r8, r8)
    2414:	00002489 	.word	0x00002489

00002418 <__libc_init_array>:
    2418:	b570      	push	{r4, r5, r6, lr}
    241a:	2600      	movs	r6, #0
    241c:	4d0c      	ldr	r5, [pc, #48]	; (2450 <__libc_init_array+0x38>)
    241e:	4c0d      	ldr	r4, [pc, #52]	; (2454 <__libc_init_array+0x3c>)
    2420:	1b64      	subs	r4, r4, r5
    2422:	10a4      	asrs	r4, r4, #2
    2424:	42a6      	cmp	r6, r4
    2426:	d109      	bne.n	243c <__libc_init_array+0x24>
    2428:	2600      	movs	r6, #0
    242a:	f002 f9eb 	bl	4804 <_init>
    242e:	4d0a      	ldr	r5, [pc, #40]	; (2458 <__libc_init_array+0x40>)
    2430:	4c0a      	ldr	r4, [pc, #40]	; (245c <__libc_init_array+0x44>)
    2432:	1b64      	subs	r4, r4, r5
    2434:	10a4      	asrs	r4, r4, #2
    2436:	42a6      	cmp	r6, r4
    2438:	d105      	bne.n	2446 <__libc_init_array+0x2e>
    243a:	bd70      	pop	{r4, r5, r6, pc}
    243c:	00b3      	lsls	r3, r6, #2
    243e:	58eb      	ldr	r3, [r5, r3]
    2440:	4798      	blx	r3
    2442:	3601      	adds	r6, #1
    2444:	e7ee      	b.n	2424 <__libc_init_array+0xc>
    2446:	00b3      	lsls	r3, r6, #2
    2448:	58eb      	ldr	r3, [r5, r3]
    244a:	4798      	blx	r3
    244c:	3601      	adds	r6, #1
    244e:	e7f2      	b.n	2436 <__libc_init_array+0x1e>
    2450:	00004810 	.word	0x00004810
    2454:	00004810 	.word	0x00004810
    2458:	00004810 	.word	0x00004810
    245c:	00004814 	.word	0x00004814

00002460 <malloc>:
    2460:	b510      	push	{r4, lr}
    2462:	4b03      	ldr	r3, [pc, #12]	; (2470 <malloc+0x10>)
    2464:	0001      	movs	r1, r0
    2466:	6818      	ldr	r0, [r3, #0]
    2468:	f000 f86a 	bl	2540 <_malloc_r>
    246c:	bd10      	pop	{r4, pc}
    246e:	46c0      	nop			; (mov r8, r8)
    2470:	20000020 	.word	0x20000020

00002474 <free>:
    2474:	b510      	push	{r4, lr}
    2476:	4b03      	ldr	r3, [pc, #12]	; (2484 <free+0x10>)
    2478:	0001      	movs	r1, r0
    247a:	6818      	ldr	r0, [r3, #0]
    247c:	f000 f816 	bl	24ac <_free_r>
    2480:	bd10      	pop	{r4, pc}
    2482:	46c0      	nop			; (mov r8, r8)
    2484:	20000020 	.word	0x20000020

00002488 <memcpy>:
    2488:	2300      	movs	r3, #0
    248a:	b510      	push	{r4, lr}
    248c:	429a      	cmp	r2, r3
    248e:	d100      	bne.n	2492 <memcpy+0xa>
    2490:	bd10      	pop	{r4, pc}
    2492:	5ccc      	ldrb	r4, [r1, r3]
    2494:	54c4      	strb	r4, [r0, r3]
    2496:	3301      	adds	r3, #1
    2498:	e7f8      	b.n	248c <memcpy+0x4>

0000249a <memset>:
    249a:	0003      	movs	r3, r0
    249c:	1882      	adds	r2, r0, r2
    249e:	4293      	cmp	r3, r2
    24a0:	d100      	bne.n	24a4 <memset+0xa>
    24a2:	4770      	bx	lr
    24a4:	7019      	strb	r1, [r3, #0]
    24a6:	3301      	adds	r3, #1
    24a8:	e7f9      	b.n	249e <memset+0x4>
	...

000024ac <_free_r>:
    24ac:	b570      	push	{r4, r5, r6, lr}
    24ae:	0005      	movs	r5, r0
    24b0:	2900      	cmp	r1, #0
    24b2:	d010      	beq.n	24d6 <_free_r+0x2a>
    24b4:	1f0c      	subs	r4, r1, #4
    24b6:	6823      	ldr	r3, [r4, #0]
    24b8:	2b00      	cmp	r3, #0
    24ba:	da00      	bge.n	24be <_free_r+0x12>
    24bc:	18e4      	adds	r4, r4, r3
    24be:	0028      	movs	r0, r5
    24c0:	f000 f8ae 	bl	2620 <__malloc_lock>
    24c4:	4a1d      	ldr	r2, [pc, #116]	; (253c <_free_r+0x90>)
    24c6:	6813      	ldr	r3, [r2, #0]
    24c8:	2b00      	cmp	r3, #0
    24ca:	d105      	bne.n	24d8 <_free_r+0x2c>
    24cc:	6063      	str	r3, [r4, #4]
    24ce:	6014      	str	r4, [r2, #0]
    24d0:	0028      	movs	r0, r5
    24d2:	f000 f8a6 	bl	2622 <__malloc_unlock>
    24d6:	bd70      	pop	{r4, r5, r6, pc}
    24d8:	42a3      	cmp	r3, r4
    24da:	d909      	bls.n	24f0 <_free_r+0x44>
    24dc:	6821      	ldr	r1, [r4, #0]
    24de:	1860      	adds	r0, r4, r1
    24e0:	4283      	cmp	r3, r0
    24e2:	d1f3      	bne.n	24cc <_free_r+0x20>
    24e4:	6818      	ldr	r0, [r3, #0]
    24e6:	685b      	ldr	r3, [r3, #4]
    24e8:	1841      	adds	r1, r0, r1
    24ea:	6021      	str	r1, [r4, #0]
    24ec:	e7ee      	b.n	24cc <_free_r+0x20>
    24ee:	0013      	movs	r3, r2
    24f0:	685a      	ldr	r2, [r3, #4]
    24f2:	2a00      	cmp	r2, #0
    24f4:	d001      	beq.n	24fa <_free_r+0x4e>
    24f6:	42a2      	cmp	r2, r4
    24f8:	d9f9      	bls.n	24ee <_free_r+0x42>
    24fa:	6819      	ldr	r1, [r3, #0]
    24fc:	1858      	adds	r0, r3, r1
    24fe:	42a0      	cmp	r0, r4
    2500:	d10b      	bne.n	251a <_free_r+0x6e>
    2502:	6820      	ldr	r0, [r4, #0]
    2504:	1809      	adds	r1, r1, r0
    2506:	1858      	adds	r0, r3, r1
    2508:	6019      	str	r1, [r3, #0]
    250a:	4282      	cmp	r2, r0
    250c:	d1e0      	bne.n	24d0 <_free_r+0x24>
    250e:	6810      	ldr	r0, [r2, #0]
    2510:	6852      	ldr	r2, [r2, #4]
    2512:	1841      	adds	r1, r0, r1
    2514:	6019      	str	r1, [r3, #0]
    2516:	605a      	str	r2, [r3, #4]
    2518:	e7da      	b.n	24d0 <_free_r+0x24>
    251a:	42a0      	cmp	r0, r4
    251c:	d902      	bls.n	2524 <_free_r+0x78>
    251e:	230c      	movs	r3, #12
    2520:	602b      	str	r3, [r5, #0]
    2522:	e7d5      	b.n	24d0 <_free_r+0x24>
    2524:	6821      	ldr	r1, [r4, #0]
    2526:	1860      	adds	r0, r4, r1
    2528:	4282      	cmp	r2, r0
    252a:	d103      	bne.n	2534 <_free_r+0x88>
    252c:	6810      	ldr	r0, [r2, #0]
    252e:	6852      	ldr	r2, [r2, #4]
    2530:	1841      	adds	r1, r0, r1
    2532:	6021      	str	r1, [r4, #0]
    2534:	6062      	str	r2, [r4, #4]
    2536:	605c      	str	r4, [r3, #4]
    2538:	e7ca      	b.n	24d0 <_free_r+0x24>
    253a:	46c0      	nop			; (mov r8, r8)
    253c:	200000ac 	.word	0x200000ac

00002540 <_malloc_r>:
    2540:	2303      	movs	r3, #3
    2542:	b570      	push	{r4, r5, r6, lr}
    2544:	1ccd      	adds	r5, r1, #3
    2546:	439d      	bics	r5, r3
    2548:	3508      	adds	r5, #8
    254a:	0006      	movs	r6, r0
    254c:	2d0c      	cmp	r5, #12
    254e:	d21e      	bcs.n	258e <_malloc_r+0x4e>
    2550:	250c      	movs	r5, #12
    2552:	42a9      	cmp	r1, r5
    2554:	d81d      	bhi.n	2592 <_malloc_r+0x52>
    2556:	0030      	movs	r0, r6
    2558:	f000 f862 	bl	2620 <__malloc_lock>
    255c:	4a25      	ldr	r2, [pc, #148]	; (25f4 <_malloc_r+0xb4>)
    255e:	6814      	ldr	r4, [r2, #0]
    2560:	0021      	movs	r1, r4
    2562:	2900      	cmp	r1, #0
    2564:	d119      	bne.n	259a <_malloc_r+0x5a>
    2566:	4c24      	ldr	r4, [pc, #144]	; (25f8 <_malloc_r+0xb8>)
    2568:	6823      	ldr	r3, [r4, #0]
    256a:	2b00      	cmp	r3, #0
    256c:	d103      	bne.n	2576 <_malloc_r+0x36>
    256e:	0030      	movs	r0, r6
    2570:	f000 f844 	bl	25fc <_sbrk_r>
    2574:	6020      	str	r0, [r4, #0]
    2576:	0029      	movs	r1, r5
    2578:	0030      	movs	r0, r6
    257a:	f000 f83f 	bl	25fc <_sbrk_r>
    257e:	1c43      	adds	r3, r0, #1
    2580:	d12c      	bne.n	25dc <_malloc_r+0x9c>
    2582:	230c      	movs	r3, #12
    2584:	0030      	movs	r0, r6
    2586:	6033      	str	r3, [r6, #0]
    2588:	f000 f84b 	bl	2622 <__malloc_unlock>
    258c:	e003      	b.n	2596 <_malloc_r+0x56>
    258e:	2d00      	cmp	r5, #0
    2590:	dadf      	bge.n	2552 <_malloc_r+0x12>
    2592:	230c      	movs	r3, #12
    2594:	6033      	str	r3, [r6, #0]
    2596:	2000      	movs	r0, #0
    2598:	bd70      	pop	{r4, r5, r6, pc}
    259a:	680b      	ldr	r3, [r1, #0]
    259c:	1b5b      	subs	r3, r3, r5
    259e:	d41a      	bmi.n	25d6 <_malloc_r+0x96>
    25a0:	2b0b      	cmp	r3, #11
    25a2:	d903      	bls.n	25ac <_malloc_r+0x6c>
    25a4:	600b      	str	r3, [r1, #0]
    25a6:	18cc      	adds	r4, r1, r3
    25a8:	6025      	str	r5, [r4, #0]
    25aa:	e003      	b.n	25b4 <_malloc_r+0x74>
    25ac:	428c      	cmp	r4, r1
    25ae:	d10e      	bne.n	25ce <_malloc_r+0x8e>
    25b0:	6863      	ldr	r3, [r4, #4]
    25b2:	6013      	str	r3, [r2, #0]
    25b4:	0030      	movs	r0, r6
    25b6:	f000 f834 	bl	2622 <__malloc_unlock>
    25ba:	0020      	movs	r0, r4
    25bc:	2207      	movs	r2, #7
    25be:	300b      	adds	r0, #11
    25c0:	1d23      	adds	r3, r4, #4
    25c2:	4390      	bics	r0, r2
    25c4:	1ac3      	subs	r3, r0, r3
    25c6:	d0e7      	beq.n	2598 <_malloc_r+0x58>
    25c8:	425a      	negs	r2, r3
    25ca:	50e2      	str	r2, [r4, r3]
    25cc:	e7e4      	b.n	2598 <_malloc_r+0x58>
    25ce:	684b      	ldr	r3, [r1, #4]
    25d0:	6063      	str	r3, [r4, #4]
    25d2:	000c      	movs	r4, r1
    25d4:	e7ee      	b.n	25b4 <_malloc_r+0x74>
    25d6:	000c      	movs	r4, r1
    25d8:	6849      	ldr	r1, [r1, #4]
    25da:	e7c2      	b.n	2562 <_malloc_r+0x22>
    25dc:	2303      	movs	r3, #3
    25de:	1cc4      	adds	r4, r0, #3
    25e0:	439c      	bics	r4, r3
    25e2:	42a0      	cmp	r0, r4
    25e4:	d0e0      	beq.n	25a8 <_malloc_r+0x68>
    25e6:	1a21      	subs	r1, r4, r0
    25e8:	0030      	movs	r0, r6
    25ea:	f000 f807 	bl	25fc <_sbrk_r>
    25ee:	1c43      	adds	r3, r0, #1
    25f0:	d1da      	bne.n	25a8 <_malloc_r+0x68>
    25f2:	e7c6      	b.n	2582 <_malloc_r+0x42>
    25f4:	200000ac 	.word	0x200000ac
    25f8:	200000b0 	.word	0x200000b0

000025fc <_sbrk_r>:
    25fc:	2300      	movs	r3, #0
    25fe:	b570      	push	{r4, r5, r6, lr}
    2600:	4c06      	ldr	r4, [pc, #24]	; (261c <_sbrk_r+0x20>)
    2602:	0005      	movs	r5, r0
    2604:	0008      	movs	r0, r1
    2606:	6023      	str	r3, [r4, #0]
    2608:	f7fd feb0 	bl	36c <_sbrk>
    260c:	1c43      	adds	r3, r0, #1
    260e:	d103      	bne.n	2618 <_sbrk_r+0x1c>
    2610:	6823      	ldr	r3, [r4, #0]
    2612:	2b00      	cmp	r3, #0
    2614:	d000      	beq.n	2618 <_sbrk_r+0x1c>
    2616:	602b      	str	r3, [r5, #0]
    2618:	bd70      	pop	{r4, r5, r6, pc}
    261a:	46c0      	nop			; (mov r8, r8)
    261c:	200000d0 	.word	0x200000d0

00002620 <__malloc_lock>:
    2620:	4770      	bx	lr

00002622 <__malloc_unlock>:
    2622:	4770      	bx	lr
    2624:	682f2e2e 	.word	0x682f2e2e
    2628:	732f6c61 	.word	0x732f6c61
    262c:	682f6372 	.word	0x682f6372
    2630:	665f6c61 	.word	0x665f6c61
    2634:	6873616c 	.word	0x6873616c
    2638:	0000632e 	.word	0x0000632e
    263c:	682f2e2e 	.word	0x682f2e2e
    2640:	6e2f6c70 	.word	0x6e2f6c70
    2644:	74636d76 	.word	0x74636d76
    2648:	682f6c72 	.word	0x682f6c72
    264c:	6e5f6c70 	.word	0x6e5f6c70
    2650:	74636d76 	.word	0x74636d76
    2654:	632e6c72 	.word	0x632e6c72
    2658:	00000000 	.word	0x00000000

0000265c <key>:
    265c:	10eb3d60 be71ca15 f0ae732b 81777d85     `=....q.+s...}w.
    266c:	072c351f d708613b a310982d f4df1409     .5,.;a..-.......

0000267c <rcon>:
    267c:	01000000 02000000 04000000 08000000     ................
    268c:	10000000 20000000 40000000 80000000     ....... ...@....
    269c:	1b000000 36000000                       .......6

000026a4 <Te>:
    26a4:	c66363a5 f87c7c84 ee777799 f67b7b8d     .cc..||..ww..{{.
    26b4:	fff2f20d d66b6bbd de6f6fb1 91c5c554     .....kk..oo.T...
    26c4:	60303050 02010103 ce6767a9 562b2b7d     P00`.....gg.}++V
    26d4:	e7fefe19 b5d7d762 4dababe6 ec76769a     ....b......M.vv.
    26e4:	8fcaca45 1f82829d 89c9c940 fa7d7d87     E.......@....}}.
    26f4:	effafa15 b25959eb 8e4747c9 fbf0f00b     .....YY..GG.....
    2704:	41adadec b3d4d467 5fa2a2fd 45afafea     ...Ag......_...E
    2714:	239c9cbf 53a4a4f7 e4727296 9bc0c05b     ...#...S.rr.[...
    2724:	75b7b7c2 e1fdfd1c 3d9393ae 4c26266a     ...u.......=j&&L
    2734:	6c36365a 7e3f3f41 f5f7f702 83cccc4f     Z66lA??~....O...
    2744:	6834345c 51a5a5f4 d1e5e534 f9f1f108     \44h...Q4.......
    2754:	e2717193 abd8d873 62313153 2a15153f     .qq.s...S11b?..*
    2764:	0804040c 95c7c752 46232365 9dc3c35e     ....R...e##F^...
    2774:	30181828 379696a1 0a05050f 2f9a9ab5     (..0...7......./
    2784:	0e070709 24121236 1b80809b dfe2e23d     ....6..$....=...
    2794:	cdebeb26 4e272769 7fb2b2cd ea75759f     &...i''N.....uu.
    27a4:	1209091b 1d83839e 582c2c74 341a1a2e     ........t,,X...4
    27b4:	361b1b2d dc6e6eb2 b45a5aee 5ba0a0fb     -..6.nn..ZZ....[
    27c4:	a45252f6 763b3b4d b7d6d661 7db3b3ce     .RR.M;;va......}
    27d4:	5229297b dde3e33e 5e2f2f71 13848497     {))R>...q//^....
    27e4:	a65353f5 b9d1d168 00000000 c1eded2c     .SS.h.......,...
    27f4:	40202060 e3fcfc1f 79b1b1c8 b65b5bed     `  @.......y.[[.
    2804:	d46a6abe 8dcbcb46 67bebed9 7239394b     .jj.F......gK99r
    2814:	944a4ade 984c4cd4 b05858e8 85cfcf4a     .JJ..LL..XX.J...
    2824:	bbd0d06b c5efef2a 4faaaae5 edfbfb16     k...*......O....
    2834:	864343c5 9a4d4dd7 66333355 11858594     .CC..MM.U33f....
    2844:	8a4545cf e9f9f910 04020206 fe7f7f81     .EE.............
    2854:	a05050f0 783c3c44 259f9fba 4ba8a8e3     .PP.D<<x...%...K
    2864:	a25151f3 5da3a3fe 804040c0 058f8f8a     .QQ....].@@.....
    2874:	3f9292ad 219d9dbc 70383848 f1f5f504     ...?...!H88p....
    2884:	63bcbcdf 77b6b6c1 afdada75 42212163     ...c...wu...c!!B
    2894:	20101030 e5ffff1a fdf3f30e bfd2d26d     0.. ........m...
    28a4:	81cdcd4c 180c0c14 26131335 c3ecec2f     L.......5..&/...
    28b4:	be5f5fe1 359797a2 884444cc 2e171739     .__....5.DD.9...
    28c4:	93c4c457 55a7a7f2 fc7e7e82 7a3d3d47     W......U.~~.G==z
    28d4:	c86464ac ba5d5de7 3219192b e6737395     .dd..]].+..2.ss.
    28e4:	c06060a0 19818198 9e4f4fd1 a3dcdc7f     .``......OO.....
    28f4:	44222266 542a2a7e 3b9090ab 0b888883     f""D~**T...;....
    2904:	8c4646ca c7eeee29 6bb8b8d3 2814143c     .FF.)......k<..(
    2914:	a7dede79 bc5e5ee2 160b0b1d addbdb76     y....^^.....v...
    2924:	dbe0e03b 64323256 743a3a4e 140a0a1e     ;...V22dN::t....
    2934:	924949db 0c06060a 4824246c b85c5ce4     .II.....l$$H.\\.
    2944:	9fc2c25d bdd3d36e 43acacef c46262a6     ]...n......C.bb.
    2954:	399191a8 319595a4 d3e4e437 f279798b     ...9...17....yy.
    2964:	d5e7e732 8bc8c843 6e373759 da6d6db7     2...C...Y77n.mm.
    2974:	018d8d8c b1d5d564 9c4e4ed2 49a9a9e0     ....d....NN....I
    2984:	d86c6cb4 ac5656fa f3f4f407 cfeaea25     .ll..VV.....%...
    2994:	ca6565af f47a7a8e 47aeaee9 10080818     .ee..zz....G....
    29a4:	6fbabad5 f0787888 4a25256f 5c2e2e72     ...o.xx.o%%Jr..\
    29b4:	381c1c24 57a6a6f1 73b4b4c7 97c6c651     $..8...W...sQ...
    29c4:	cbe8e823 a1dddd7c e874749c 3e1f1f21     #...|....tt.!..>
    29d4:	964b4bdd 61bdbddc 0d8b8b86 0f8a8a85     .KK....a........
    29e4:	e0707090 7c3e3e42 71b5b5c4 cc6666aa     .pp.B>>|...q.ff.
    29f4:	904848d8 06030305 f7f6f601 1c0e0e12     .HH.............
    2a04:	c26161a3 6a35355f ae5757f9 69b9b9d0     .aa._55j.WW....i
    2a14:	17868691 99c1c158 3a1d1d27 279e9eb9     ....X...'..:...'
    2a24:	d9e1e138 ebf8f813 2b9898b3 22111133     8..........+3.."
    2a34:	d26969bb a9d9d970 078e8e89 339494a7     .ii.p..........3
    2a44:	2d9b9bb6 3c1e1e22 15878792 c9e9e920     ...-"..<.... ...
    2a54:	87cece49 aa5555ff 50282878 a5dfdf7a     I....UU.x((Pz...
    2a64:	038c8c8f 59a1a1f8 09898980 1a0d0d17     .......Y........
    2a74:	65bfbfda d7e6e631 844242c6 d06868b8     ...e1....BB..hh.
    2a84:	824141c3 299999b0 5a2d2d77 1e0f0f11     .AA....)w--Z....
    2a94:	7bb0b0cb a85454fc 6dbbbbd6 2c16163a     ...{.TT....m:..,
    2aa4:	a5c66363 84f87c7c 99ee7777 8df67b7b     cc..||..ww..{{..
    2ab4:	0dfff2f2 bdd66b6b b1de6f6f 5491c5c5     ....kk..oo.....T
    2ac4:	50603030 03020101 a9ce6767 7d562b2b     00`P....gg..++V}
    2ad4:	19e7fefe 62b5d7d7 e64dabab 9aec7676     .......b..M.vv..
    2ae4:	458fcaca 9d1f8282 4089c9c9 87fa7d7d     ...E.......@}}..
    2af4:	15effafa ebb25959 c98e4747 0bfbf0f0     ....YY..GG......
    2b04:	ec41adad 67b3d4d4 fd5fa2a2 ea45afaf     ..A....g.._...E.
    2b14:	bf239c9c f753a4a4 96e47272 5b9bc0c0     ..#...S.rr.....[
    2b24:	c275b7b7 1ce1fdfd ae3d9393 6a4c2626     ..u.......=.&&Lj
    2b34:	5a6c3636 417e3f3f 02f5f7f7 4f83cccc     66lZ??~A.......O
    2b44:	5c683434 f451a5a5 34d1e5e5 08f9f1f1     44h\..Q....4....
    2b54:	93e27171 73abd8d8 53623131 3f2a1515     qq.....s11bS..*?
    2b64:	0c080404 5295c7c7 65462323 5e9dc3c3     .......R##Fe...^
    2b74:	28301818 a1379696 0f0a0505 b52f9a9a     ..0(..7......./.
    2b84:	090e0707 36241212 9b1b8080 3ddfe2e2     ......$6.......=
    2b94:	26cdebeb 694e2727 cd7fb2b2 9fea7575     ...&''Ni....uu..
    2ba4:	1b120909 9e1d8383 74582c2c 2e341a1a     ........,,Xt..4.
    2bb4:	2d361b1b b2dc6e6e eeb45a5a fb5ba0a0     ..6-nn..ZZ....[.
    2bc4:	f6a45252 4d763b3b 61b7d6d6 ce7db3b3     RR..;;vM...a..}.
    2bd4:	7b522929 3edde3e3 715e2f2f 97138484     ))R{...>//^q....
    2be4:	f5a65353 68b9d1d1 00000000 2cc1eded     SS.....h.......,
    2bf4:	60402020 1fe3fcfc c879b1b1 edb65b5b       @`......y.[[..
    2c04:	bed46a6a 468dcbcb d967bebe 4b723939     jj.....F..g.99rK
    2c14:	de944a4a d4984c4c e8b05858 4a85cfcf     JJ..LL..XX.....J
    2c24:	6bbbd0d0 2ac5efef e54faaaa 16edfbfb     ...k...*..O.....
    2c34:	c5864343 d79a4d4d 55663333 94118585     CC..MM..33fU....
    2c44:	cf8a4545 10e9f9f9 06040202 81fe7f7f     EE..............
    2c54:	f0a05050 44783c3c ba259f9f e34ba8a8     PP..<<xD..%...K.
    2c64:	f3a25151 fe5da3a3 c0804040 8a058f8f     QQ....].@@......
    2c74:	ad3f9292 bc219d9d 48703838 04f1f5f5     ..?...!.88pH....
    2c84:	df63bcbc c177b6b6 75afdada 63422121     ..c...w....u!!Bc
    2c94:	30201010 1ae5ffff 0efdf3f3 6dbfd2d2     .. 0...........m
    2ca4:	4c81cdcd 14180c0c 35261313 2fc3ecec     ...L......&5.../
    2cb4:	e1be5f5f a2359797 cc884444 392e1717     __....5.DD.....9
    2cc4:	5793c4c4 f255a7a7 82fc7e7e 477a3d3d     ...W..U.~~..==zG
    2cd4:	acc86464 e7ba5d5d 2b321919 95e67373     dd..]]....2+ss..
    2ce4:	a0c06060 98198181 d19e4f4f 7fa3dcdc     ``......OO......
    2cf4:	66442222 7e542a2a ab3b9090 830b8888     ""Df**T~..;.....
    2d04:	ca8c4646 29c7eeee d36bb8b8 3c281414     FF.....)..k...(<
    2d14:	79a7dede e2bc5e5e 1d160b0b 76addbdb     ...y^^.........v
    2d24:	3bdbe0e0 56643232 4e743a3a 1e140a0a     ...;22dV::tN....
    2d34:	db924949 0a0c0606 6c482424 e4b85c5c     II......$$Hl\\..
    2d44:	5d9fc2c2 6ebdd3d3 ef43acac a6c46262     ...]...n..C.bb..
    2d54:	a8399191 a4319595 37d3e4e4 8bf27979     ..9...1....7yy..
    2d64:	32d5e7e7 438bc8c8 596e3737 b7da6d6d     ...2...C77nYmm..
    2d74:	8c018d8d 64b1d5d5 d29c4e4e e049a9a9     .......dNN....I.
    2d84:	b4d86c6c faac5656 07f3f4f4 25cfeaea     ll..VV.........%
    2d94:	afca6565 8ef47a7a e947aeae 18100808     ee..zz....G.....
    2da4:	d56fbaba 88f07878 6f4a2525 725c2e2e     ..o.xx..%%Jo..\r
    2db4:	24381c1c f157a6a6 c773b4b4 5197c6c6     ..8$..W...s....Q
    2dc4:	23cbe8e8 7ca1dddd 9ce87474 213e1f1f     ...#...|tt....>!
    2dd4:	dd964b4b dc61bdbd 860d8b8b 850f8a8a     KK....a.........
    2de4:	90e07070 427c3e3e c471b5b5 aacc6666     pp..>>|B..q.ff..
    2df4:	d8904848 05060303 01f7f6f6 121c0e0e     HH..............
    2e04:	a3c26161 5f6a3535 f9ae5757 d069b9b9     aa..55j_WW....i.
    2e14:	91178686 5899c1c1 273a1d1d b9279e9e     .......X..:'..'.
    2e24:	38d9e1e1 13ebf8f8 b32b9898 33221111     ...8......+..."3
    2e34:	bbd26969 70a9d9d9 89078e8e a7339494     ii.....p......3.
    2e44:	b62d9b9b 223c1e1e 92158787 20c9e9e9     ..-...<"....... 
    2e54:	4987cece ffaa5555 78502828 7aa5dfdf     ...IUU..((Px...z
    2e64:	8f038c8c f859a1a1 80098989 171a0d0d     ......Y.........
    2e74:	da65bfbf 31d7e6e6 c6844242 b8d06868     ..e....1BB..hh..
    2e84:	c3824141 b0299999 775a2d2d 111e0f0f     AA....).--Zw....
    2e94:	cb7bb0b0 fca85454 d66dbbbb 3a2c1616     ..{.TT....m...,:
    2ea4:	63a5c663 7c84f87c 7799ee77 7b8df67b     c..c|..|w..w{..{
    2eb4:	f20dfff2 6bbdd66b 6fb1de6f c55491c5     ....k..ko..o..T.
    2ec4:	30506030 01030201 67a9ce67 2b7d562b     0`P0....g..g+V}+
    2ed4:	fe19e7fe d762b5d7 abe64dab 769aec76     ......b..M..v..v
    2ee4:	ca458fca 829d1f82 c94089c9 7d87fa7d     ..E.......@.}..}
    2ef4:	fa15effa 59ebb259 47c98e47 f00bfbf0     ....Y..YG..G....
    2f04:	adec41ad d467b3d4 a2fd5fa2 afea45af     .A....g.._...E..
    2f14:	9cbf239c a4f753a4 7296e472 c05b9bc0     .#...S..r..r..[.
    2f24:	b7c275b7 fd1ce1fd 93ae3d93 266a4c26     .u.......=..&Lj&
    2f34:	365a6c36 3f417e3f f702f5f7 cc4f83cc     6lZ6?~A?......O.
    2f44:	345c6834 a5f451a5 e534d1e5 f108f9f1     4h\4.Q....4.....
    2f54:	7193e271 d873abd8 31536231 153f2a15     q..q..s.1bS1.*?.
    2f64:	040c0804 c75295c7 23654623 c35e9dc3     ......R.#Fe#..^.
    2f74:	18283018 96a13796 050f0a05 9ab52f9a     .0(..7......./..
    2f84:	07090e07 12362412 809b1b80 e23ddfe2     .....$6.......=.
    2f94:	eb26cdeb 27694e27 b2cd7fb2 759fea75     ..&.'Ni'....u..u
    2fa4:	091b1209 839e1d83 2c74582c 1a2e341a     ........,Xt,.4..
    2fb4:	1b2d361b 6eb2dc6e 5aeeb45a a0fb5ba0     .6-.n..nZ..Z.[..
    2fc4:	52f6a452 3b4d763b d661b7d6 b3ce7db3     R..R;vM;..a..}..
    2fd4:	297b5229 e33edde3 2f715e2f 84971384     )R{)..>./^q/....
    2fe4:	53f5a653 d168b9d1 00000000 ed2cc1ed     S..S..h.......,.
    2ff4:	20604020 fc1fe3fc b1c879b1 5bedb65b      @` .....y..[..[
    3004:	6abed46a cb468dcb bed967be 394b7239     j..j..F..g..9rK9
    3014:	4ade944a 4cd4984c 58e8b058 cf4a85cf     J..JL..LX..X..J.
    3024:	d06bbbd0 ef2ac5ef aae54faa fb16edfb     ..k...*..O......
    3034:	43c58643 4dd79a4d 33556633 85941185     C..CM..M3fU3....
    3044:	45cf8a45 f910e9f9 02060402 7f81fe7f     E..E............
    3054:	50f0a050 3c44783c 9fba259f a8e34ba8     P..P<xD<.%...K..
    3064:	51f3a251 a3fe5da3 40c08040 8f8a058f     Q..Q.]..@..@....
    3074:	92ad3f92 9dbc219d 38487038 f504f1f5     .?...!..8pH8....
    3084:	bcdf63bc b6c177b6 da75afda 21634221     .c...w....u.!Bc!
    3094:	10302010 ff1ae5ff f30efdf3 d26dbfd2     . 0...........m.
    30a4:	cd4c81cd 0c14180c 13352613 ec2fc3ec     ..L......&5.../.
    30b4:	5fe1be5f 97a23597 44cc8844 17392e17     _.._.5..D..D..9.
    30c4:	c45793c4 a7f255a7 7e82fc7e 3d477a3d     ..W..U..~..~=zG=
    30d4:	64acc864 5de7ba5d 192b3219 7395e673     d..d]..].2+.s..s
    30e4:	60a0c060 81981981 4fd19e4f dc7fa3dc     `..`....O..O....
    30f4:	22664422 2a7e542a 90ab3b90 88830b88     "Df"*T~*.;......
    3104:	46ca8c46 ee29c7ee b8d36bb8 143c2814     F..F..)..k...(<.
    3114:	de79a7de 5ee2bc5e 0b1d160b db76addb     ..y.^..^......v.
    3124:	e03bdbe0 32566432 3a4e743a 0a1e140a     ..;.2dV2:tN:....
    3134:	49db9249 060a0c06 246c4824 5ce4b85c     I..I....$Hl$\..\
    3144:	c25d9fc2 d36ebdd3 acef43ac 62a6c462     ..]...n..C..b..b
    3154:	91a83991 95a43195 e437d3e4 798bf279     .9...1....7.y..y
    3164:	e732d5e7 c8438bc8 37596e37 6db7da6d     ..2...C.7nY7m..m
    3174:	8d8c018d d564b1d5 4ed29c4e a9e049a9     ......d.N..N.I..
    3184:	6cb4d86c 56faac56 f407f3f4 ea25cfea     l..lV..V......%.
    3194:	65afca65 7a8ef47a aee947ae 08181008     e..ez..z.G......
    31a4:	bad56fba 7888f078 256f4a25 2e725c2e     .o..x..x%Jo%.\r.
    31b4:	1c24381c a6f157a6 b4c773b4 c65197c6     .8$..W...s....Q.
    31c4:	e823cbe8 dd7ca1dd 749ce874 1f213e1f     ..#...|.t..t.>!.
    31d4:	4bdd964b bddc61bd 8b860d8b 8a850f8a     K..K.a..........
    31e4:	7090e070 3e427c3e b5c471b5 66aacc66     p..p>|B>.q..f..f
    31f4:	48d89048 03050603 f601f7f6 0e121c0e     H..H............
    3204:	61a3c261 355f6a35 57f9ae57 b9d069b9     a..a5j_5W..W.i..
    3214:	86911786 c15899c1 1d273a1d 9eb9279e     ......X..:'..'..
    3224:	e138d9e1 f813ebf8 98b32b98 11332211     ..8......+..."3.
    3234:	69bbd269 d970a9d9 8e89078e 94a73394     i..i..p......3..
    3244:	9bb62d9b 1e223c1e 87921587 e920c9e9     .-...<"....... .
    3254:	ce4987ce 55ffaa55 28785028 df7aa5df     ..I.U..U(Px(..z.
    3264:	8c8f038c a1f859a1 89800989 0d171a0d     .....Y..........
    3274:	bfda65bf e631d7e6 42c68442 68b8d068     .e....1.B..Bh..h
    3284:	41c38241 99b02999 2d775a2d 0f111e0f     A..A.)..-Zw-....
    3294:	b0cb7bb0 54fca854 bbd66dbb 163a2c16     .{..T..T.m...,:.
    32a4:	6363a5c6 7c7c84f8 777799ee 7b7b8df6     ..cc..||..ww..{{
    32b4:	f2f20dff 6b6bbdd6 6f6fb1de c5c55491     ......kk..oo.T..
    32c4:	30305060 01010302 6767a9ce 2b2b7d56     `P00......ggV}++
    32d4:	fefe19e7 d7d762b5 ababe64d 76769aec     .....b..M.....vv
    32e4:	caca458f 82829d1f c9c94089 7d7d87fa     .E.......@....}}
    32f4:	fafa15ef 5959ebb2 4747c98e f0f00bfb     ......YY..GG....
    3304:	adadec41 d4d467b3 a2a2fd5f afafea45     A....g.._...E...
    3314:	9c9cbf23 a4a4f753 727296e4 c0c05b9b     #...S.....rr.[..
    3324:	b7b7c275 fdfd1ce1 9393ae3d 26266a4c     u.......=...Lj&&
    3334:	36365a6c 3f3f417e f7f702f5 cccc4f83     lZ66~A??.....O..
    3344:	34345c68 a5a5f451 e5e534d1 f1f108f9     h\44Q....4......
    3354:	717193e2 d8d873ab 31315362 15153f2a     ..qq.s..bS11*?..
    3364:	04040c08 c7c75295 23236546 c3c35e9d     .....R..Fe##.^..
    3374:	18182830 9696a137 05050f0a 9a9ab52f     0(..7......./...
    3384:	0707090e 12123624 80809b1b e2e23ddf     ....$6.......=..
    3394:	ebeb26cd 2727694e b2b2cd7f 75759fea     .&..Ni''......uu
    33a4:	09091b12 83839e1d 2c2c7458 1a1a2e34     ........Xt,,4...
    33b4:	1b1b2d36 6e6eb2dc 5a5aeeb4 a0a0fb5b     6-....nn..ZZ[...
    33c4:	5252f6a4 3b3b4d76 d6d661b7 b3b3ce7d     ..RRvM;;.a..}...
    33d4:	29297b52 e3e33edd 2f2f715e 84849713     R{)).>..^q//....
    33e4:	5353f5a6 d1d168b9 00000000 eded2cc1     ..SS.h.......,..
    33f4:	20206040 fcfc1fe3 b1b1c879 5b5bedb6     @`  ....y.....[[
    3404:	6a6abed4 cbcb468d bebed967 39394b72     ..jj.F..g...rK99
    3414:	4a4ade94 4c4cd498 5858e8b0 cfcf4a85     ..JJ..LL..XX.J..
    3424:	d0d06bbb efef2ac5 aaaae54f fbfb16ed     .k...*..O.......
    3434:	4343c586 4d4dd79a 33335566 85859411     ..CC..MMfU33....
    3444:	4545cf8a f9f910e9 02020604 7f7f81fe     ..EE............
    3454:	5050f0a0 3c3c4478 9f9fba25 a8a8e34b     ..PPxD<<%...K...
    3464:	5151f3a2 a3a3fe5d 4040c080 8f8f8a05     ..QQ].....@@....
    3474:	9292ad3f 9d9dbc21 38384870 f5f504f1     ?...!...pH88....
    3484:	bcbcdf63 b6b6c177 dada75af 21216342     c...w....u..Bc!!
    3494:	10103020 ffff1ae5 f3f30efd d2d26dbf      0...........m..
    34a4:	cdcd4c81 0c0c1418 13133526 ecec2fc3     .L......&5.../..
    34b4:	5f5fe1be 9797a235 4444cc88 1717392e     ..__5.....DD.9..
    34c4:	c4c45793 a7a7f255 7e7e82fc 3d3d477a     .W..U.....~~zG==
    34d4:	6464acc8 5d5de7ba 19192b32 737395e6     ..dd..]]2+....ss
    34e4:	6060a0c0 81819819 4f4fd19e dcdc7fa3     ..``......OO....
    34f4:	22226644 2a2a7e54 9090ab3b 8888830b     Df""T~**;.......
    3504:	4646ca8c eeee29c7 b8b8d36b 14143c28     ..FF.)..k...(<..
    3514:	dede79a7 5e5ee2bc 0b0b1d16 dbdb76ad     .y....^^.....v..
    3524:	e0e03bdb 32325664 3a3a4e74 0a0a1e14     .;..dV22tN::....
    3534:	4949db92 06060a0c 24246c48 5c5ce4b8     ..II....Hl$$..\\
    3544:	c2c25d9f d3d36ebd acacef43 6262a6c4     .]...n..C.....bb
    3554:	9191a839 9595a431 e4e437d3 79798bf2     9...1....7....yy
    3564:	e7e732d5 c8c8438b 3737596e 6d6db7da     .2...C..nY77..mm
    3574:	8d8d8c01 d5d564b1 4e4ed29c a9a9e049     .....d....NNI...
    3584:	6c6cb4d8 5656faac f4f407f3 eaea25cf     ..ll..VV.....%..
    3594:	6565afca 7a7a8ef4 aeaee947 08081810     ..ee..zzG.......
    35a4:	babad56f 787888f0 25256f4a 2e2e725c     o.....xxJo%%\r..
    35b4:	1c1c2438 a6a6f157 b4b4c773 c6c65197     8$..W...s....Q..
    35c4:	e8e823cb dddd7ca1 74749ce8 1f1f213e     .#...|....tt>!..
    35d4:	4b4bdd96 bdbddc61 8b8b860d 8a8a850f     ..KKa...........
    35e4:	707090e0 3e3e427c b5b5c471 6666aacc     ..pp|B>>q.....ff
    35f4:	4848d890 03030506 f6f601f7 0e0e121c     ..HH............
    3604:	6161a3c2 35355f6a 5757f9ae b9b9d069     ..aaj_55..WWi...
    3614:	86869117 c1c15899 1d1d273a 9e9eb927     .....X..:'..'...
    3624:	e1e138d9 f8f813eb 9898b32b 11113322     .8......+..."3..
    3634:	6969bbd2 d9d970a9 8e8e8907 9494a733     ..ii.p......3...
    3644:	9b9bb62d 1e1e223c 87879215 e9e920c9     -...<"....... ..
    3654:	cece4987 5555ffaa 28287850 dfdf7aa5     .I....UUPx((.z..
    3664:	8c8c8f03 a1a1f859 89898009 0d0d171a     ....Y...........
    3674:	bfbfda65 e6e631d7 4242c684 6868b8d0     e....1....BB..hh
    3684:	4141c382 9999b029 2d2d775a 0f0f111e     ..AA)...Zw--....
    3694:	b0b0cb7b 5454fca8 bbbbd66d 16163a2c     {.....TTm...,:..

000036a4 <Td>:
    36a4:	51f4a750 7e416553 1a17a4c3 3a275e96     P..QSeA~.....^':
    36b4:	3bab6bcb 1f9d45f1 acfa58ab 4be30393     .k.;.E...X.....K
    36c4:	2030fa55 ad766df6 88cc7691 f5024c25     U.0 .mv..v..%L..
    36d4:	4fe5d7fc c52acbd7 26354480 b562a38f     ...O..*..D5&..b.
    36e4:	deb15a49 25ba1b67 45ea0e98 5dfec0e1     IZ..g..%...E...]
    36f4:	c32f7502 814cf012 8d4697a3 6bd3f9c6     .u/...L...F....k
    3704:	038f5fe7 15929c95 bf6d7aeb 955259da     ._.......zm..YR.
    3714:	d4be832d 587421d3 49e06929 8ec9c844     -....!tX)i.ID...
    3724:	75c2896a f48e7978 99583e6b 27b971dd     j..uxy..k>X..q.'
    3734:	bee14fb6 f088ad17 c920ac66 7dce3ab4     .O......f. ..:.}
    3744:	63df4a18 e51a3182 97513360 62537f45     .J.c.1..`3Q.E.Sb
    3754:	b16477e0 bb6bae84 fe81a01c f9082b94     .wd...k......+..
    3764:	70486858 8f45fd19 94de6c87 527bf8b7     XhHp..E..l....{R
    3774:	ab73d323 724b02e2 e31f8f57 6655ab2a     #.s...KrW...*.Uf
    3784:	b2eb2807 2fb5c203 86c57b9a d33708a5     .(...../.{....7.
    3794:	302887f2 23bfa5b2 02036aba ed16825c     ..(0...#.j..\...
    37a4:	8acf1c2b a779b492 f307f2f0 4e69e2a1     +.....y.......iN
    37b4:	65daf4cd 0605bed5 d134621f c4a6fe8a     ...e.....b4.....
    37c4:	342e539d a2f355a0 058ae132 a4f6eb75     .S.4.U..2...u...
    37d4:	0b83ec39 4060efaa 5e719f06 bd6e1051     9.....`@..q^Q.n.
    37e4:	3e218af9 96dd063d dd3e05ae 4de6bd46     ..!>=.....>.F..M
    37f4:	91548db5 71c45d05 0406d46f 605015ff     ..T..].qo.....P`
    3804:	1998fb24 d6bde997 894043cc 67d99e77     $........C@.w..g
    3814:	b0e842bd 07898b88 e7195b38 79c8eedb     .B......8[.....y
    3824:	a17c0a47 7c420fe9 f8841ec9 00000000     G.|...B|........
    3834:	09808683 322bed48 1e1170ac 6c5a724e     ....H.+2.p..NrZl
    3844:	fd0efffb 0f853856 3daed51e 362d3927     ....V8.....='9-6
    3854:	0a0fd964 685ca621 9b5b54d1 24362e3a     d...!.\h.T[.:.6$
    3864:	0c0a67b1 9357e70f b4ee96d2 1b9b919e     .g....W.........
    3874:	80c0c54f 61dc20a2 5a774b69 1c121a16     O.... .aiKwZ....
    3884:	e293ba0a c0a02ae5 3c22e043 121b171d     .....*..C."<....
    3894:	0e090d0b f28bc7ad 2db6a8b9 141ea9c8     ...........-....
    38a4:	57f11985 af75074c ee99ddbb a37f60fd     ...WL.u......`..
    38b4:	f701269f 5c72f5bc 44663bc5 5bfb7e34     .&....r\.;fD4~.[
    38c4:	8b432976 cb23c6dc b6edfc68 b8e4f163     v)C...#.h...c...
    38d4:	d731dcca 42638510 13972240 84c61120     ..1...cB@".. ...
    38e4:	854a247d d2bb3df8 aef93211 c729a16d     }$J..=...2..m.).
    38f4:	1d9e2f4b dcb230f3 0d8652ec 77c1e3d0     K/...0...R.....w
    3904:	2bb3166c a970b999 119448fa 47e96422     l..+..p..H.."d.G
    3914:	a8fc8cc4 a0f03f1a 567d2cd8 223390ef     .....?...,}V..3"
    3924:	87494ec7 d938d1c1 8ccaa2fe 98d40b36     .NI...8.....6...
    3934:	a6f581cf a57ade28 dab78e26 3fadbfa4     ....(.z.&......?
    3944:	2c3a9de4 5078920d 6a5fcc9b 547e4662     ..:,..xP.._jbF~T
    3954:	f68d13c2 90d8b8e8 2e39f75e 82c3aff5     ........^.9.....
    3964:	9f5d80be 69d0937c 6fd52da9 cf2512b3     ..].|..i.-.o..%.
    3974:	c8ac993b 10187da7 e89c636e db3bbb7b     ;....}..nc..{.;.
    3984:	cd267809 6e5918f4 ec9ab701 834f9aa8     .x&...Yn......O.
    3994:	e6956e65 aaffe67e 21bccf08 ef15e8e6     en..~......!....
    39a4:	bae79bd9 4a6f36ce ea9f09d4 29b07cd6     .....6oJ.....|.)
    39b4:	31a4b2af 2a3f2331 c6a59430 35a266c0     ...11#?*0....f.5
    39c4:	744ebc37 fc82caa6 e090d0b0 33a7d815     7.Nt...........3
    39d4:	f104984a 41ecdaf7 7fcd500e 1791f62f     J......A.P../...
    39e4:	764dd68d 43efb04d ccaa4d54 e49604df     ..MvM..CTM......
    39f4:	9ed1b5e3 4c6a881b c12c1fb8 4665517f     ......jL..,..QeF
    3a04:	9d5eea04 018c355d fa877473 fb0b412e     ..^.]5..st...A..
    3a14:	b3671d5a 92dbd252 e9105633 6dd64713     Z.g.R...3V...G.m
    3a24:	9ad7618c 37a10c7a 59f8148e eb133c89     .a..z..7...Y.<..
    3a34:	cea927ee b761c935 e11ce5ed 7a47b13c     .'..5.a.....<.Gz
    3a44:	9cd2df59 55f2733f 1814ce79 73c737bf     Y...?s.Uy....7.s
    3a54:	53f7cdea 5ffdaa5b df3d6f14 7844db86     ...S[.._.o=...Dx
    3a64:	caaff381 b968c43e 3824342c c2a3405f     ....>.h.,4$8_@..
    3a74:	161dc372 bce2250c 283c498b ff0d9541     r....%...I<(A...
    3a84:	39a80171 080cb3de d8b4e49c 6456c190     q..9..........Vd
    3a94:	7bcb8461 d532b670 486c5c74 d0b85742     a..{p.2.t\lHBW..
    3aa4:	5051f4a7 537e4165 c31a17a4 963a275e     ..QPeA~S....^':.
    3ab4:	cb3bab6b f11f9d45 abacfa58 934be303     k.;.E...X.....K.
    3ac4:	552030fa f6ad766d 9188cc76 25f5024c     .0 Umv..v...L..%
    3ad4:	fc4fe5d7 d7c52acb 80263544 8fb562a3     ..O..*..D5&..b..
    3ae4:	49deb15a 6725ba1b 9845ea0e e15dfec0     Z..I..%g..E...].
    3af4:	02c32f75 12814cf0 a38d4697 c66bd3f9     u/...L...F....k.
    3b04:	e7038f5f 9515929c ebbf6d7a da955259     _.......zm..YR..
    3b14:	2dd4be83 d3587421 2949e069 448ec9c8     ...-!tX.i.I)...D
    3b24:	6a75c289 78f48e79 6b99583e dd27b971     ..ujy..x>X.kq.'.
    3b34:	b6bee14f 17f088ad 66c920ac b47dce3a     O........ .f:.}.
    3b44:	1863df4a 82e51a31 60975133 4562537f     J.c.1...3Q.`.SbE
    3b54:	e0b16477 84bb6bae 1cfe81a0 94f9082b     wd...k......+...
    3b64:	58704868 198f45fd 8794de6c b7527bf8     hHpX.E..l....{R.
    3b74:	23ab73d3 e2724b02 57e31f8f 2a6655ab     .s.#.Kr....W.Uf*
    3b84:	07b2eb28 032fb5c2 9a86c57b a5d33708     (...../.{....7..
    3b94:	f2302887 b223bfa5 ba02036a 5ced1682     .(0...#.j......\
    3ba4:	2b8acf1c 92a779b4 f0f307f2 a14e69e2     ...+.y.......iN.
    3bb4:	cd65daf4 d50605be 1fd13462 8ac4a6fe     ..e.....b4......
    3bc4:	9d342e53 a0a2f355 32058ae1 75a4f6eb     S.4.U......2...u
    3bd4:	390b83ec aa4060ef 065e719f 51bd6e10     ...9.`@..q^..n.Q
    3be4:	f93e218a 3d96dd06 aedd3e05 464de6bd     .!>....=.>....MF
    3bf4:	b591548d 0571c45d 6f0406d4 ff605015     .T..].q....o.P`.
    3c04:	241998fb 97d6bde9 cc894043 7767d99e     ...$....C@....gw
    3c14:	bdb0e842 8807898b 38e7195b db79c8ee     B.......[..8..y.
    3c24:	47a17c0a e97c420f c9f8841e 00000000     .|.G.B|.........
    3c34:	83098086 48322bed ac1e1170 4e6c5a72     .....+2Hp...rZlN
    3c44:	fbfd0eff 560f8538 1e3daed5 27362d39     ....8..V..=.9-6'
    3c54:	640a0fd9 21685ca6 d19b5b54 3a24362e     ...d.\h!T[...6$:
    3c64:	b10c0a67 0f9357e7 d2b4ee96 9e1b9b91     g....W..........
    3c74:	4f80c0c5 a261dc20 695a774b 161c121a     ...O .a.KwZi....
    3c84:	0ae293ba e5c0a02a 433c22e0 1d121b17     ....*...."<C....
    3c94:	0b0e090d adf28bc7 b92db6a8 c8141ea9     ..........-.....
    3ca4:	8557f119 4caf7507 bbee99dd fda37f60     ..W..u.L....`...
    3cb4:	9ff70126 bc5c72f5 c544663b 345bfb7e     &....r\.;fD.~.[4
    3cc4:	768b4329 dccb23c6 68b6edfc 63b8e4f1     )C.v.#.....h...c
    3cd4:	cad731dc 10426385 40139722 2084c611     .1...cB."..@... 
    3ce4:	7d854a24 f8d2bb3d 11aef932 6dc729a1     $J.}=...2....).m
    3cf4:	4b1d9e2f f3dcb230 ec0d8652 d077c1e3     /..K0...R.....w.
    3d04:	6c2bb316 99a970b9 fa119448 2247e964     ..+l.p..H...d.G"
    3d14:	c4a8fc8c 1aa0f03f d8567d2c ef223390     ....?...,}V..3".
    3d24:	c787494e c1d938d1 fe8ccaa2 3698d40b     NI...8.........6
    3d34:	cfa6f581 28a57ade 26dab78e a43fadbf     .....z.(...&..?.
    3d44:	e42c3a9d 0d507892 9b6a5fcc 62547e46     .:,..xP.._j.F~Tb
    3d54:	c2f68d13 e890d8b8 5e2e39f7 f582c3af     .........9.^....
    3d64:	be9f5d80 7c69d093 a96fd52d b3cf2512     .]....i|-.o..%..
    3d74:	3bc8ac99 a710187d 6ee89c63 7bdb3bbb     ...;}...c..n.;.{
    3d84:	09cd2678 f46e5918 01ec9ab7 a8834f9a     x&...Yn......O..
    3d94:	65e6956e 7eaaffe6 0821bccf e6ef15e8     n..e...~..!.....
    3da4:	d9bae79b ce4a6f36 d4ea9f09 d629b07c     ....6oJ.....|.).
    3db4:	af31a4b2 312a3f23 30c6a594 c035a266     ..1.#?*1...0f.5.
    3dc4:	37744ebc a6fc82ca b0e090d0 1533a7d8     .Nt7..........3.
    3dd4:	4af10498 f741ecda 0e7fcd50 2f1791f6     ...J..A.P....../
    3de4:	8d764dd6 4d43efb0 54ccaa4d dfe49604     .Mv...CMM..T....
    3df4:	e39ed1b5 1b4c6a88 b8c12c1f 7f466551     .....jL..,..QeF.
    3e04:	049d5eea 5d018c35 73fa8774 2efb0b41     .^..5..]t..sA...
    3e14:	5ab3671d 5292dbd2 33e91056 136dd647     .g.Z...RV..3G.m.
    3e24:	8c9ad761 7a37a10c 8e59f814 89eb133c     a.....7z..Y.<...
    3e34:	eecea927 35b761c9 ede11ce5 3c7a47b1     '....a.5.....Gz<
    3e44:	599cd2df 3f55f273 791814ce bf73c737     ...Ys.U?...y7.s.
    3e54:	ea53f7cd 5b5ffdaa 14df3d6f 867844db     ..S..._[o=...Dx.
    3e64:	81caaff3 3eb968c4 2c382434 5fc2a340     .....h.>4$8,@.._
    3e74:	72161dc3 0cbce225 8b283c49 41ff0d95     ...r%...I<(....A
    3e84:	7139a801 de080cb3 9cd8b4e4 906456c1     ..9q.........Vd.
    3e94:	617bcb84 70d532b6 74486c5c 42d0b857     ..{a.2.p\lHtW..B
    3ea4:	a75051f4 65537e41 a4c31a17 5e963a27     .QP.A~Se....':.^
    3eb4:	6bcb3bab 45f11f9d 58abacfa 03934be3     .;.k...E...X.K..
    3ec4:	fa552030 6df6ad76 769188cc 4c25f502     0 U.v..m...v..%L
    3ed4:	d7fc4fe5 cbd7c52a 44802635 a38fb562     .O..*...5&.Db...
    3ee4:	5a49deb1 1b6725ba 0e9845ea c0e15dfe     ..IZ.%g..E...]..
    3ef4:	7502c32f f012814c 97a38d46 f9c66bd3     /..uL...F....k..
    3f04:	5fe7038f 9c951592 7aebbf6d 59da9552     ..._....m..zR..Y
    3f14:	832dd4be 21d35874 692949e0 c8448ec9     ..-.tX.!.I)i..D.
    3f24:	896a75c2 7978f48e 3e6b9958 71dd27b9     .uj...xyX.k>.'.q
    3f34:	4fb6bee1 ad17f088 ac66c920 3ab47dce     ...O.... .f..}.:
    3f44:	4a1863df 3182e51a 33609751 7f456253     .c.J...1Q.`3SbE.
    3f54:	77e0b164 ae84bb6b a01cfe81 2b94f908     d..wk..........+
    3f64:	68587048 fd198f45 6c8794de f8b7527b     HpXhE......l{R..
    3f74:	d323ab73 02e2724b 8f57e31f ab2a6655     s.#.Kr....W.Uf*.
    3f84:	2807b2eb c2032fb5 7b9a86c5 08a5d337     ...(./.....{7...
    3f94:	87f23028 a5b223bf 6aba0203 825ced16     (0...#.....j..\.
    3fa4:	1c2b8acf b492a779 f2f0f307 e2a14e69     ..+.y.......iN..
    3fb4:	f4cd65da bed50605 621fd134 fe8ac4a6     .e......4..b....
    3fc4:	539d342e 55a0a2f3 e132058a eb75a4f6     .4.S...U..2...u.
    3fd4:	ec390b83 efaa4060 9f065e71 1051bd6e     ..9.`@..q^..n.Q.
    3fe4:	8af93e21 063d96dd 05aedd3e bd464de6     !>....=.>....MF.
    3ff4:	8db59154 5d0571c4 d46f0406 15ff6050     T....q.]..o.P`..
    4004:	fb241998 e997d6bd 43cc8940 9e7767d9     ..$.....@..C.gw.
    4014:	42bdb0e8 8b880789 5b38e719 eedb79c8     ...B......8[.y..
    4024:	0a47a17c 0fe97c42 1ec9f884 00000000     |.G.B|..........
    4034:	86830980 ed48322b 70ac1e11 724e6c5a     ....+2H....pZlNr
    4044:	fffbfd0e 38560f85 d51e3dae 3927362d     ......V8.=..-6'9
    4054:	d9640a0f a621685c 54d19b5b 2e3a2436     ..d.\h!.[..T6$:.
    4064:	67b10c0a e70f9357 96d2b4ee 919e1b9b     ...gW...........
    4074:	c54f80c0 20a261dc 4b695a77 1a161c12     ..O..a. wZiK....
    4084:	ba0ae293 2ae5c0a0 e0433c22 171d121b     .......*"<C.....
    4094:	0d0b0e09 c7adf28b a8b92db6 a9c8141e     .........-......
    40a4:	198557f1 074caf75 ddbbee99 60fda37f     .W..u.L........`
    40b4:	269ff701 f5bc5c72 3bc54466 7e345bfb     ...&r\..fD.;.[4~
    40c4:	29768b43 c6dccb23 fc68b6ed f163b8e4     C.v)#.....h...c.
    40d4:	dccad731 85104263 22401397 112084c6     1...cB....@".. .
    40e4:	247d854a 3df8d2bb 3211aef9 a16dc729     J.}$...=...2).m.
    40f4:	2f4b1d9e 30f3dcb2 52ec0d86 e3d077c1     ..K/...0...R.w..
    4104:	166c2bb3 b999a970 48fa1194 642247e9     .+l.p......H.G"d
    4114:	8cc4a8fc 3f1aa0f0 2cd8567d 90ef2233     .......?}V.,3"..
    4124:	4ec78749 d1c1d938 a2fe8cca 0b3698d4     I..N8.........6.
    4134:	81cfa6f5 de28a57a 8e26dab7 bfa43fad     ....z.(...&..?..
    4144:	9de42c3a 920d5078 cc9b6a5f 4662547e     :,..xP.._j..~TbF
    4154:	13c2f68d b8e890d8 f75e2e39 aff582c3     ........9.^.....
    4164:	80be9f5d 937c69d0 2da96fd5 12b3cf25     ]....i|..o.-%...
    4174:	993bc8ac 7da71018 636ee89c bb7bdb3b     ..;....}..nc;.{.
    4184:	7809cd26 18f46e59 b701ec9a 9aa8834f     &..xYn......O...
    4194:	6e65e695 e67eaaff cf0821bc e8e6ef15     ..en..~..!......
    41a4:	9bd9bae7 36ce4a6f 09d4ea9f 7cd629b0     ....oJ.6.....).|
    41b4:	b2af31a4 23312a3f 9430c6a5 66c035a2     .1..?*1#..0..5.f
    41c4:	bc37744e caa6fc82 d0b0e090 d81533a7     Nt7..........3..
    41d4:	984af104 daf741ec 500e7fcd f62f1791     ..J..A.....P../.
    41e4:	d68d764d b04d43ef 4d54ccaa 04dfe496     Mv...CM...TM....
    41f4:	b5e39ed1 881b4c6a 1fb8c12c 517f4665     ....jL..,...eF.Q
    4204:	ea049d5e 355d018c 7473fa87 412efb0b     ^.....]5..st...A
    4214:	1d5ab367 d25292db 5633e910 47136dd6     g.Z...R...3V.m.G
    4224:	618c9ad7 0c7a37a1 148e59f8 3c89eb13     ...a.7z..Y.....<
    4234:	27eecea9 c935b761 e5ede11c b13c7a47     ...'a.5.....Gz<.
    4244:	df599cd2 733f55f2 ce791814 37bf73c7     ..Y..U?s..y..s.7
    4254:	cdea53f7 aa5b5ffd 6f14df3d db867844     .S..._[.=..oDx..
    4264:	f381caaf c43eb968 342c3824 405fc2a3     ....h.>.$8,4.._@
    4274:	c372161d 250cbce2 498b283c 9541ff0d     ..r....%<(.I..A.
    4284:	017139a8 b3de080c e49cd8b4 c1906456     .9q.........Vd..
    4294:	84617bcb b670d532 5c74486c 5742d0b8     .{a.2.p.lHt\..BW
    42a4:	f4a75051 4165537e 17a4c31a 275e963a     QP..~SeA....:.^'
    42b4:	ab6bcb3b 9d45f11f fa58abac e303934b     ;.k...E...X.K...
    42c4:	30fa5520 766df6ad cc769188 024c25f5      U.0..mv..v..%L.
    42d4:	e5d7fc4f 2acbd7c5 35448026 62a38fb5     O......*&.D5...b
    42e4:	b15a49de ba1b6725 ea0e9845 fec0e15d     .IZ.%g..E...]...
    42f4:	2f7502c3 4cf01281 4697a38d d3f9c66b     ..u/...L...Fk...
    4304:	8f5fe703 929c9515 6d7aebbf 5259da95     .._.......zm..YR
    4314:	be832dd4 7421d358 e0692949 c9c8448e     .-..X.!tI)i..D..
    4324:	c2896a75 8e7978f4 583e6b99 b971dd27     uj...xy..k>X'.q.
    4334:	e14fb6be 88ad17f0 20ac66c9 ce3ab47d     ..O......f. }.:.
    4344:	df4a1863 1a3182e5 51336097 537f4562     c.J...1..`3QbE.S
    4354:	6477e0b1 6bae84bb 81a01cfe 082b94f9     ..wd...k......+.
    4364:	48685870 45fd198f de6c8794 7bf8b752     pXhH...E..l.R..{
    4374:	73d323ab 4b02e272 1f8f57e3 55ab2a66     .#.sr..K.W..f*.U
    4384:	eb2807b2 b5c2032f c57b9a86 3708a5d3     ..(./.....{....7
    4394:	2887f230 bfa5b223 036aba02 16825ced     0..(#.....j..\..
    43a4:	cf1c2b8a 79b492a7 07f2f0f3 69e2a14e     .+.....y....N..i
    43b4:	daf4cd65 05bed506 34621fd1 a6fe8ac4     e.........b4....
    43c4:	2e539d34 f355a0a2 8ae13205 f6eb75a4     4.S...U..2...u..
    43d4:	83ec390b 60efaa40 719f065e 6e1051bd     .9..@..`^..q.Q.n
    43e4:	218af93e dd063d96 3e05aedd e6bd464d     >..!.=.....>MF..
    43f4:	548db591 c45d0571 06d46f04 5015ff60     ...Tq.]..o..`..P
    4404:	98fb2419 bde997d6 4043cc89 d99e7767     .$........C@gw..
    4414:	e842bdb0 898b8807 195b38e7 c8eedb79     ..B......8[.y...
    4424:	7c0a47a1 420fe97c 841ec9f8 00000000     .G.||..B........
    4434:	80868309 2bed4832 1170ac1e 5a724e6c     ....2H.+..p.lNrZ
    4444:	0efffbfd 8538560f aed51e3d 2d392736     .....V8.=...6'9-
    4454:	0fd9640a 5ca62168 5b54d19b 362e3a24     .d..h!.\..T[$:.6
    4464:	0a67b10c 57e70f93 ee96d2b4 9b919e1b     ..g....W........
    4474:	c0c54f80 dc20a261 774b695a 121a161c     .O..a. .ZiKw....
    4484:	93ba0ae2 a02ae5c0 22e0433c 1b171d12     ......*.<C."....
    4494:	090d0b0e 8bc7adf2 b6a8b92d 1ea9c814     ........-.......
    44a4:	f1198557 75074caf 99ddbbee 7f60fda3     W....L.u......`.
    44b4:	01269ff7 72f5bc5c 663bc544 fb7e345b     ..&.\..rD.;f[4~.
    44c4:	4329768b 23c6dccb edfc68b6 e4f163b8     .v)C...#.h...c..
    44d4:	31dccad7 63851042 97224013 c6112084     ...1B..c.@".. ..
    44e4:	4a247d85 bb3df8d2 f93211ae 29a16dc7     .}$J..=...2..m.)
    44f4:	9e2f4b1d b230f3dc 8652ec0d c1e3d077     .K/...0...R.w...
    4504:	b3166c2b 70b999a9 9448fa11 e9642247     +l.....p..H.G"d.
    4514:	fc8cc4a8 f03f1aa0 7d2cd856 3390ef22     ......?.V.,}"..3
    4524:	494ec787 38d1c1d9 caa2fe8c d40b3698     ..NI...8.....6..
    4534:	f581cfa6 7ade28a5 b78e26da adbfa43f     .....(.z.&..?...
    4544:	3a9de42c 78920d50 5fcc9b6a 7e466254     ,..:P..xj.._TbF~
    4554:	8d13c2f6 d8b8e890 39f75e2e c3aff582     .........^.9....
    4564:	5d80be9f d0937c69 d52da96f 2512b3cf     ...]i|..o.-....%
    4574:	ac993bc8 187da710 9c636ee8 3bbb7bdb     .;....}..nc..{.;
    4584:	267809cd 5918f46e 9ab701ec 4f9aa883     ..x&n..Y.......O
    4594:	956e65e6 ffe67eaa bccf0821 15e8e6ef     .en..~..!.......
    45a4:	e79bd9ba 6f36ce4a 9f09d4ea b07cd629     ....J.6o....).|.
    45b4:	a4b2af31 3f23312a a59430c6 a266c035     1...*1#?.0..5.f.
    45c4:	4ebc3774 82caa6fc 90d0b0e0 a7d81533     t7.N........3...
    45d4:	04984af1 ecdaf741 cd500e7f 91f62f17     .J..A.....P../..
    45e4:	4dd68d76 efb04d43 aa4d54cc 9604dfe4     v..MCM...TM.....
    45f4:	d1b5e39e 6a881b4c 2c1fb8c1 65517f46     ....L..j...,F.Qe
    4604:	5eea049d 8c355d01 877473fa 0b412efb     ...^.]5..st...A.
    4614:	671d5ab3 dbd25292 105633e9 d647136d     .Z.g.R...3V.m.G.
    4624:	d7618c9a a10c7a37 f8148e59 133c89eb     ..a.7z..Y.....<.
    4634:	a927eece 61c935b7 1ce5ede1 47b13c7a     ..'..5.a....z<.G
    4644:	d2df599c f2733f55 14ce7918 c737bf73     .Y..U?s..y..s.7.
    4654:	f7cdea53 fdaa5b5f 3d6f14df 44db8678     S..._[....o=x..D
    4664:	aff381ca 68c43eb9 24342c38 a3405fc2     .....>.h8,4$._@.
    4674:	1dc37216 e2250cbc 3c498b28 0d9541ff     .r....%.(.I<.A..
    4684:	a8017139 0cb3de08 b4e49cd8 56c19064     9q..........d..V
    4694:	cb84617b 32b670d5 6c5c7448 b85742d0     {a...p.2Ht\l.BW.

000046a4 <Td4>:
    46a4:	d56a0952 38a53630 9ea340bf fbd7f381     R.j.06.8.@......
    46b4:	8239e37c 87ff2f9b 44438e34 cbe9dec4     |.9../..4.CD....
    46c4:	32947b54 3d23c2a6 0b954cee 4ec3fa42     T{.2..#=.L..B..N
    46d4:	66a12e08 b224d928 49a25b76 25d18b6d     ...f(.$.v[.Im..%
    46e4:	64f6f872 16986886 cc5ca4d4 92b6655d     r..d.h....\.]e..
    46f4:	5048706c dab9edfd 5746155e 849d8da7     lpHP....^.FW....
    4704:	00abd890 0ad3bc8c 0558e4f7 0645b3b8     ..........X...E.
    4714:	8f1e2cd0 020f3fca 03bdafc1 6b8a1301     .,...?.........k
    4724:	4111913a eadc674f cecff297 73e6b4f0     :..AOg.........s
    4734:	2274ac96 8535ade7 e837f9e2 6edf751c     ..t"..5...7..u.n
    4744:	711af147 89c5291d 0e62b76f 1bbe18aa     G..q.)..o.b.....
    4754:	4b3e56fc 2079d2c6 fec0db9a f45acd78     .V>K..y ....x.Z.
    4764:	33a8dd1f 31c70788 591012b1 5fec8027     ...3...1...Y'.._
    4774:	a97f5160 0d4ab519 9f7ae52d ef9cc993     `Q....J.-.z.....
    4784:	4d3be0a0 b0f52aae 3cbbebc8 61995383     ..;M.*.....<.S.a
    4794:	7e042b17 26d677ba 631469e1 7d0c2155     .+.~.w.&.i.cU!.}

000047a4 <__sf_fake_stderr>:
	...

000047c4 <__sf_fake_stdin>:
	...

000047e4 <__sf_fake_stdout>:
	...

00004804 <_init>:
    4804:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4806:	46c0      	nop			; (mov r8, r8)
    4808:	bcf8      	pop	{r3, r4, r5, r6, r7}
    480a:	bc08      	pop	{r3}
    480c:	469e      	mov	lr, r3
    480e:	4770      	bx	lr

00004810 <__init_array_start>:
    4810:	000000dd 	.word	0x000000dd

00004814 <_fini>:
    4814:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    4816:	46c0      	nop			; (mov r8, r8)
    4818:	bcf8      	pop	{r3, r4, r5, r6, r7}
    481a:	bc08      	pop	{r3}
    481c:	469e      	mov	lr, r3
    481e:	4770      	bx	lr

00004820 <__fini_array_start>:
    4820:	000000b5 	.word	0x000000b5
